@group(0) @binding(0) var mySampler: sampler;
@group(0) @binding(1) var tex_0: texture_2d<f32>;
@group(0) @binding(2) var tex_1: texture_2d<f32>;
@group(0) @binding(3) var tex_2: texture_2d<f32>;

fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn go_0(fragUV: vec2<f32>, x_off: f32, y_off: f32) -> vec4f {
    var uv = fragUV;
    let dim: vec2f = vec2f(textureDimensions(tex_0));
    uv += vec2f(x_off / dim.x, y_off / dim.y) * 0.66666666666666;
    return max4(textureSample(tex_0, mySampler, uv), 0.0);
}

fn go_1(fragUV: vec2<f32>, x_off: f32, y_off: f32) -> vec4f {
    var uv = fragUV;
    let dim: vec2f = vec2f(textureDimensions(tex_1));
    uv += vec2f(x_off / dim.x, y_off / dim.y) * 0.66666666666666;
    return max4(textureSample(tex_1, mySampler, uv), 0.0);
}

fn go_2(fragUV: vec2<f32>, x_off: f32, y_off: f32) -> vec4f {
    var uv = fragUV;
    let dim: vec2f = vec2f(textureDimensions(tex_2));
    uv += vec2f(x_off / dim.x, y_off / dim.y) * 0.66666666666666;
    return max4(textureSample(tex_2, mySampler, uv), 0.0);
}

fn go_3(fragUV: vec2<f32>, x_off: f32, y_off: f32) -> vec4f {
    var uv = fragUV;
    let dim: vec2f = vec2f(textureDimensions(tex_0));
    uv += vec2f(x_off / dim.x, y_off / dim.y) * 0.66666666666666;
    return max4(-textureSample(tex_0, mySampler, uv), 0.0);
}

fn go_4(fragUV: vec2<f32>, x_off: f32, y_off: f32) -> vec4f {
    var uv = fragUV;
    let dim: vec2f = vec2f(textureDimensions(tex_1));
    uv += vec2f(x_off / dim.x, y_off / dim.y) * 0.66666666666666;
    return max4(-textureSample(tex_1, mySampler, uv), 0.0);
}

fn go_5(fragUV: vec2<f32>, x_off: f32, y_off: f32) -> vec4f {
    var uv = fragUV;
    let dim: vec2f = vec2f(textureDimensions(tex_2));
    uv += vec2f(x_off / dim.x, y_off / dim.y) * 0.66666666666666;
    return max4(-textureSample(tex_2, mySampler, uv), 0.0);
}

@fragment
fn main(@location(0) fragUV: vec2<f32>) -> @location(0) vec4<f32> {
  var result: vec4f = mat4x4<f32>(-0.04461327, 0.026094772, -0.04326873, -0.022564206, 0.041758694, -0.13209347, -0.022546854, 0.004888482, 0.041229382, 0.078778535, -0.09928822, 0.045134705, 0.07555903, 0.095968306, 0.017260674, -0.16633268) * go_0(fragUV, -1.0, -1.0);
  result += mat4x4<f32>(0.074613005, -0.024822153, 0.006285665, 0.064223155, 0.08983999, -0.04401517, 0.0021585347, -0.05762909, -0.04529031, -0.081778474, -0.006732511, -0.11184791, 0.10299652, -0.23328288, 0.15988354, 0.100146465) * go_0(fragUV, -1.0, 0.0);
  result += mat4x4<f32>(0.035105877, -0.0018613822, -0.10513717, -0.033936206, -0.015839642, 0.036846053, 0.057443213, 0.0151035935, 0.073372714, -0.032272663, -0.10095864, 0.11976275, 0.019719468, -0.03309878, -0.09841568, 0.02204194) * go_0(fragUV, -1.0, 1.0);
  result += mat4x4<f32>(0.030945469, -0.17030734, -0.012849732, 0.015892556, 0.056250833, 0.24895169, -0.13764419, 0.16325791, -0.01160465, 0.006647464, -0.026491588, -0.17801395, -0.02435574, -0.2039599, -0.02686966, -0.026576484) * go_0(fragUV, 0.0, -1.0);
  result += mat4x4<f32>(-0.037470777, 0.019415256, 0.09230313, 0.018368619, 0.12947397, 0.055918667, 0.03108532, -0.112716034, -0.18622373, 0.13083778, 0.11290179, 0.02457941, -0.055062827, 0.2621282, -0.47111708, 0.14229195) * go_0(fragUV, 0.0, 0.0);
  result += mat4x4<f32>(-0.028525796, -0.044668507, 0.0581049, -0.05924212, -0.16126277, 0.02257456, -0.08723546, 0.0291216, 0.08648604, 0.1816661, -0.10166446, 0.054426763, -0.049978323, -0.014283805, 0.08187003, -0.33347195) * go_0(fragUV, 0.0, 1.0);
  result += mat4x4<f32>(0.0660737, 0.07962152, -0.08272859, 0.06791631, -0.055610694, -0.04899803, 0.001302826, 0.034116816, 0.055754438, -0.090739936, -0.058503445, -0.21402411, 0.08279316, -0.017558504, -0.06069706, -0.009158945) * go_0(fragUV, 1.0, -1.0);
  result += mat4x4<f32>(0.004801658, 0.19979613, -0.12919085, -0.08680655, -0.07869315, 0.13493058, 0.09466464, -0.06683993, 0.45278597, -0.031217117, -0.36346734, 0.007986247, -0.034918886, -0.06899428, -0.17898467, 0.048572816) * go_0(fragUV, 1.0, 0.0);
  result += mat4x4<f32>(-0.058319356, -0.11041357, -0.038064227, 0.008961388, 0.059284043, -0.006377162, -0.08503998, 0.08246113, -0.042524133, -0.009021081, -0.06406861, -0.036977306, 0.015088326, 0.007376721, 0.045255665, -0.048585415) * go_0(fragUV, 1.0, 1.0);
  result += mat4x4<f32>(-0.04103631, -0.041285936, 0.032812588, 0.0030869239, 0.04834749, -0.0023517366, 0.01230978, 0.09776701, 0.08415344, 0.20653047, -0.19338459, -0.04812796, -0.084704414, 0.038988277, 0.075450994, -0.08053876) * go_1(fragUV, -1.0, -1.0);
  result += mat4x4<f32>(0.13506958, -0.2392332, 0.07425533, -0.05262753, -0.06849319, -0.0686977, 0.09134643, 0.032770213, 0.0725978, -0.12106999, 0.068602145, 0.0030026592, -0.0808173, 0.06421806, -0.08257931, 0.21460927) * go_1(fragUV, -1.0, 0.0);
  result += mat4x4<f32>(-0.008367152, 0.0035576785, -0.012087096, -0.08389121, -0.01598755, 0.12065467, 0.099018045, -0.14851409, 0.030730573, 0.028257858, -0.08153201, -0.08644078, -0.114632666, -0.03989634, 0.005787138, -0.080551155) * go_1(fragUV, -1.0, 1.0);
  result += mat4x4<f32>(0.063049294, -0.13418451, -0.020768259, -0.12566003, -0.038050238, 0.024393935, 0.040856704, -0.10639481, -0.0021406382, 0.12272091, 0.039621927, 0.009142157, -0.12273027, 0.06595554, 0.03680899, -0.045653462) * go_1(fragUV, 0.0, -1.0);
  result += mat4x4<f32>(0.14783141, 0.062921695, -0.2287169, 0.17810576, 0.12781417, -0.23455006, 0.08652726, -0.05671725, -0.0154688135, -0.0757278, 0.028468473, -0.055354204, 0.3387407, 0.06741395, -0.21965146, 0.28021505) * go_1(fragUV, 0.0, 0.0);
  result += mat4x4<f32>(0.12927511, -0.083112024, -0.026347974, 0.11680802, -0.046030812, 0.04145888, 0.029390097, 0.07615963, 0.21023202, 0.015840504, -0.03812723, -0.03267151, -0.03871269, -0.009839764, 0.09856007, -0.07423972) * go_1(fragUV, 0.0, 1.0);
  result += mat4x4<f32>(0.017651597, 0.020432748, 0.1884304, -0.004845205, 0.009974344, -0.022273665, 0.03930962, -0.035542846, 0.036834106, 0.14699532, -0.099249355, 0.10607033, -0.027745333, -0.0970868, 0.114169724, -0.023726419) * go_1(fragUV, 1.0, -1.0);
  result += mat4x4<f32>(-0.028299367, -0.15123722, -0.00423565, 0.06813279, 0.00024022427, -0.025944803, 0.022504266, -0.08420193, -0.20596851, -0.1337249, 0.1062062, -0.01428787, 0.014752737, -0.012875446, 0.030165028, 0.035561644) * go_1(fragUV, 1.0, 0.0);
  result += mat4x4<f32>(-0.09437882, 0.088986255, -0.019357264, -0.07609514, -0.11045937, -0.09335526, 0.0051609105, 0.046330493, -0.102482855, 0.16320266, -0.07661479, 0.033833966, -0.06805305, 0.051780142, -0.015298791, 0.010972507) * go_1(fragUV, 1.0, 1.0);
  result += mat4x4<f32>(0.0022961323, 0.10782266, -0.06649802, -0.006361161, -0.13554603, 0.032311134, 0.01145253, -0.018523335, -0.051428523, -0.0073554716, -0.11821805, -0.0227195, -0.06375, 0.029970335, -0.038386237, -0.046592798) * go_2(fragUV, -1.0, -1.0);
  result += mat4x4<f32>(-0.0839258, -0.0200528, 0.004925492, -0.035113, 0.08860089, 0.052822098, -0.16518101, -0.052028593, 0.042811155, 0.13656183, 0.06579406, -0.26585788, -0.00531827, -0.12001242, -0.07681884, -0.021055153) * go_2(fragUV, -1.0, 0.0);
  result += mat4x4<f32>(0.0678669, 0.038901877, -0.096601896, -0.081621505, 0.0028282998, -0.04645044, 0.04284913, 0.015117329, 0.104568556, 0.006391826, -0.021010842, -0.036205173, 0.06698969, 0.08495347, 0.065073915, 0.07002784) * go_2(fragUV, -1.0, 1.0);
  result += mat4x4<f32>(-0.041274223, -0.065267585, 0.0070607257, -0.067357324, 0.056948107, 0.04808867, 0.07966329, -0.017361488, 0.030913807, -0.119355716, -0.004582609, 0.050158955, 0.03867934, -0.13543603, -0.0011923639, -0.06866172) * go_2(fragUV, 0.0, -1.0);
  result += mat4x4<f32>(0.11586327, -0.047302328, 0.062475067, 0.018575871, 0.12420718, -0.03602303, 0.021922488, 0.16011192, -0.16549775, 0.123044305, 0.065160766, -0.30708137, 0.07341779, -0.12929793, 0.08692529, 0.0007729847) * go_2(fragUV, 0.0, 0.0);
  result += mat4x4<f32>(-0.013340411, 0.058056828, -0.028747091, -0.0020311237, -0.1070798, 0.13726988, 0.017587787, -0.06898856, 0.03802266, 0.13165978, -0.035371024, 0.098588474, -0.036178526, -0.1068027, -0.03172579, 0.0816444) * go_2(fragUV, 0.0, 1.0);
  result += mat4x4<f32>(0.025470722, -0.010980958, -0.08286821, -0.031260632, -0.0134636145, 0.041295316, -0.09980376, 0.07899825, 0.046056226, 0.17291167, -0.066611394, 0.03685817, -0.020917175, 0.11551815, -0.016370535, -0.003991822) * go_2(fragUV, 1.0, -1.0);
  result += mat4x4<f32>(-0.039056864, 0.011015572, 0.014014594, -0.08614736, -0.08130745, 0.045282196, -0.04879853, -0.07139807, 0.09670427, -0.07834781, -0.022022815, 0.053423326, -0.055300128, 0.23542596, -0.11442394, -0.05190056) * go_2(fragUV, 1.0, 0.0);
  result += mat4x4<f32>(0.12978806, -0.020104066, -0.032463916, -0.04754379, 0.05811374, 0.029061198, -0.013163837, 0.051058855, 0.04294865, -0.12551701, 0.17822845, -0.16549106, 0.12024249, -0.0790749, 0.035424378, 0.0062358896) * go_2(fragUV, 1.0, 1.0);
  result += mat4x4<f32>(0.030824278, 0.06636776, -0.047206167, 0.02480193, 0.071935624, -0.18845995, -0.028480597, -0.10213147, -0.03973547, 0.025171004, 0.016600806, -0.10615915, -0.07395773, -0.050147526, -0.011541545, -0.027081985) * go_3(fragUV, -1.0, -1.0);
  result += mat4x4<f32>(-0.035749037, -0.052818663, -0.020621216, -0.023525307, -0.02461827, 0.3019646, -0.024478583, -0.1398278, 0.17499511, 0.22476715, -0.13090259, -0.05484457, -0.023759075, 0.002843161, 0.014099166, -0.011660793) * go_3(fragUV, -1.0, 0.0);
  result += mat4x4<f32>(-0.008461302, 0.14787683, 0.07476249, -0.035538696, 0.007945418, 0.04992842, -0.2388183, 0.0061813896, 0.016805701, 0.019992555, 0.034271393, -0.040170603, -0.039961495, 0.009210595, 0.07606321, 0.05323195) * go_3(fragUV, -1.0, 1.0);
  result += mat4x4<f32>(-0.017007355, -0.01304119, -0.011782462, 0.043480955, 0.041575707, 0.20513225, -0.16858323, 0.019438695, -0.02795952, -0.032667078, 0.08400571, 0.012488913, -0.025382128, 0.06756553, 0.14349163, -0.012960532) * go_3(fragUV, 0.0, -1.0);
  result += mat4x4<f32>(-0.015847925, 0.035881996, 0.09946923, -0.2583748, -0.11036338, 0.02174868, 0.023047017, -0.023119839, 0.0014623358, -0.05400468, 0.1088209, 0.056070726, 0.09849772, 0.106276534, -0.2869582, 0.122843154) * go_3(fragUV, 0.0, 0.0);
  result += mat4x4<f32>(0.120457835, 0.0030220735, 0.011593652, 0.04870485, 0.051817082, -0.12444271, -0.0030080245, 0.03186695, -0.119991936, -0.03661239, 0.0462927, 0.047734156, 0.035473768, -0.050326344, 0.048162602, 0.0044394233) * go_3(fragUV, 0.0, 1.0);
  result += mat4x4<f32>(0.004526382, -0.040592365, 0.038592715, 0.06312635, -0.012543924, -0.03860053, 0.013131243, -0.11894808, -0.05983815, -0.09653036, 0.14409515, -0.022803063, 0.02864931, 0.014170389, 0.091406494, 0.08613508) * go_3(fragUV, 1.0, -1.0);
  result += mat4x4<f32>(0.12344745, -0.034350697, 0.10549495, -0.11843059, -0.041916244, -0.035728436, -0.052881684, -0.07620879, 0.06760638, -0.039527662, -0.006650022, -0.05049626, 0.12109734, -0.005554175, 0.17754045, -0.098896034) * go_3(fragUV, 1.0, 0.0);
  result += mat4x4<f32>(0.017840233, -0.0118570635, -0.080244206, -0.14309776, -0.03778345, 0.12812364, -0.011180574, -0.03749929, -0.013458457, 0.028993722, 0.03479446, -0.11635739, -0.01636896, -0.010422004, -0.022923285, 0.013722603) * go_3(fragUV, 1.0, 1.0);
  result += mat4x4<f32>(0.0022784397, -0.026745517, 0.07457438, -0.023941608, -0.056146793, -0.012885049, 0.010106243, -0.13570426, -0.055139925, -0.0553148, 0.037558038, -0.015558114, 0.055840485, -0.08124391, -0.013017814, 0.18931141) * go_4(fragUV, -1.0, -1.0);
  result += mat4x4<f32>(0.10672792, 0.129464, 0.1233261, -0.062469885, -0.08835128, 0.17588028, -0.02560139, -0.07349341, -0.08052734, 0.03086464, 0.12930822, 0.107045054, 0.03136081, -0.11335949, 0.09541032, -0.015009924) * go_4(fragUV, -1.0, 0.0);
  result += mat4x4<f32>(0.023294786, -0.17904189, -0.036457974, -0.060965557, 0.088545635, 0.001061151, -0.016771115, 0.082081355, -0.0030623788, -0.05096391, 0.022067994, -0.078540295, -0.12912196, -0.045786213, 0.05568379, -0.16344398) * go_4(fragUV, -1.0, 1.0);
  result += mat4x4<f32>(0.043200932, 0.006267473, -0.081682056, 0.044593308, 0.03179784, 0.20806344, -0.038468197, 0.06644582, 0.01704569, -0.029287282, -0.0036700617, 0.018897371, -0.075105995, 0.09612947, -0.06442493, 0.012179776) * go_4(fragUV, 0.0, -1.0);
  result += mat4x4<f32>(-0.21926114, 0.18097721, -0.037700515, 0.016763914, -0.057943042, -0.06129067, 0.04456528, -0.2304425, 0.013301696, 0.11028081, -0.18095498, 0.14712757, 0.2271199, -0.3185643, -0.19932592, -0.08554962) * go_4(fragUV, 0.0, 0.0);
  result += mat4x4<f32>(0.0117652705, -0.041661818, 0.029219367, -0.046232816, 0.047820047, 0.068789035, -0.113418594, 0.1141295, -0.027060978, 0.07267708, 0.093252845, -0.049717877, -0.087836266, 0.14460698, 0.10277318, -0.04977497) * go_4(fragUV, 0.0, 1.0);
  result += mat4x4<f32>(0.022564596, -0.037228584, -0.065915406, -0.011077084, 0.030235467, -0.04677627, -0.06419004, -0.018991074, 0.034164365, -0.019168181, 0.022525655, -0.029373096, -0.079060145, 0.13279332, -0.08545939, -0.045388315) * go_4(fragUV, 1.0, -1.0);
  result += mat4x4<f32>(-0.14000517, -0.08309406, 0.13520917, -0.10369978, -0.016325317, 0.00970006, -0.048059512, 0.1412818, 0.040955327, 0.030759163, -0.108052924, 0.005294165, -0.10046129, 0.16592641, -0.035368618, -0.29051507) * go_4(fragUV, 1.0, 0.0);
  result += mat4x4<f32>(-0.09455044, 0.0005962807, 0.0006215668, -0.038142636, -0.03929331, -0.01591621, 0.0056410446, -0.036902174, -0.056509133, -0.10841171, 0.07702632, -0.08160013, 0.040747657, -0.08348532, 0.019081287, 0.020851197) * go_4(fragUV, 1.0, 1.0);
  result += mat4x4<f32>(-0.03399592, 0.10141488, -0.0077629937, -0.17129703, -0.025233645, 0.052428465, -0.019579021, -0.072962284, 0.022322712, -0.18443614, -0.00848578, 0.0376278, 0.055581484, 0.06439001, -0.026564457, 0.015072123) * go_5(fragUV, -1.0, -1.0);
  result += mat4x4<f32>(0.11295866, -0.1541795, 0.11074539, -0.12757398, -0.11353885, 0.12023232, -0.07913168, 0.25957996, -0.0064171744, 0.08077023, 0.09673833, 0.008732368, 0.03630595, 0.059769, 0.028521406, 0.029331883) * go_5(fragUV, -1.0, 0.0);
  result += mat4x4<f32>(-0.081345834, -0.06722959, -0.13713932, 0.03613845, -0.084334835, 0.046838246, -0.004890033, -0.08524675, 0.15460378, -0.09410546, -0.058240023, 0.11844812, 0.00092362246, 0.028734036, 0.0028451593, 0.03558664) * go_5(fragUV, -1.0, 1.0);
  result += mat4x4<f32>(0.067000724, 0.08689177, 0.003695697, 0.08341895, -0.08124141, -0.20499983, 0.09505712, -0.07436812, -0.028131844, 0.050506454, -0.107579716, 0.058785282, 0.031196257, 0.021408495, -0.100359544, 0.07999305) * go_5(fragUV, 0.0, -1.0);
  result += mat4x4<f32>(-0.16514844, 0.117525734, 0.24123909, 0.09518423, 0.17757961, -0.28094006, 0.081966326, 0.0802129, 0.0011662474, 0.06366135, 0.07578068, -0.08616794, 0.19857462, -0.10196374, -0.13831666, -0.18653043) * go_5(fragUV, 0.0, 0.0);
  result += mat4x4<f32>(-0.06649859, 0.0935902, -0.19097336, 0.16118656, 0.2938468, -0.10315292, 0.08256489, -0.06169784, -0.05889727, -0.018046174, -0.17596339, 0.20343648, -0.08962845, -0.027532624, 0.059598826, -0.14278376) * go_5(fragUV, 0.0, 1.0);
  result += mat4x4<f32>(-0.0070921015, -0.07634683, -0.066166356, -0.06432544, 0.050059035, 0.20213397, -0.071587585, 0.031234715, 0.10629024, 0.044645656, -0.023101477, -0.022136679, 0.009119783, -0.10172394, 0.024746796, -0.1161207) * go_5(fragUV, 1.0, -1.0);
  result += mat4x4<f32>(-0.046572298, -0.06981039, 0.08314394, 0.043344617, 0.1914716, 0.0046652057, -0.0683364, 0.086023554, 0.06213587, -0.0077511827, -0.03336288, 0.1474879, -0.032717533, 0.078666836, -0.001740435, 0.048321523) * go_5(fragUV, 1.0, 0.0);
  result += mat4x4<f32>(0.18346673, -0.20763724, 0.05431475, -0.08291483, -0.0073792376, -0.053458065, 0.08561732, -0.103502, -0.06856406, 0.05193988, -0.009717332, 0.06446446, 0.050632656, 0.013681985, -0.02556495, 0.05056843) * go_5(fragUV, 1.0, 1.0);
  result += vec4f(-0.01824226, 0.05140684, 0.010533643, 0.017739987);

  return result;
}
