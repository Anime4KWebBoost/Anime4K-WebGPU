@group(0) @binding(0) var tex_in: texture_2d<f32>;
@group(0) @binding(1) var tex_out: texture_storage_2d<rgba16float, write>;

fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(tex_in, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}

fn go_1(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(tex_in, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}

@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(tex_out);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }

  var result = mat4x4<f32>(-0.045126025, 0.050714225, 0.0125732105, 0.02846407, -0.060089536, -0.034834176, -0.0040735775, 0.052462872, -0.06349833, 0.035765424, -0.016616918, -0.0018578349, 0.013570179, 0.10944321, -0.030015511, 0.027956745) * go_0(pixel.xy, -1, -1);
  result += mat4x4<f32>(-0.12730308, 0.03566323, 0.11001803, 0.15532783, 0.09383734, 0.021051487, 0.061895505, -0.16896167, -0.04920816, 0.07981793, 0.10226323, 0.15644692, -0.1068625, 0.07156015, 0.085769154, 0.16979004) * go_0(pixel.xy, -1, 0);
  result += mat4x4<f32>(0.024430305, 0.019860426, 0.054592874, -0.0084316535, -0.08488101, 0.030014526, -0.12295434, -0.046541102, 0.041157596, -0.009510352, 0.026766898, -0.035353363, 0.16085613, -0.10208919, 0.08546014, -0.058680072) * go_0(pixel.xy, -1, 1);
  result += mat4x4<f32>(0.004408565, -0.11591945, 0.250611, 0.080347836, -0.08632918, -0.026267642, -0.2886495, 0.024631828, 0.19790933, -0.08560785, 0.011915067, 0.053927578, 0.21855202, 0.0815331, 0.29583204, 0.10125018) * go_0(pixel.xy, 0, -1);
  result += mat4x4<f32>(0.08520437, -0.23847492, 0.10188593, 0.08718157, -0.10323534, 0.25349405, 0.14276703, 0.8306245, 0.7219559, 0.27170542, 0.0027806691, 0.22671483, -0.03504881, 0.26001468, -0.33698237, -0.08021798) * go_0(pixel.xy, 0, 0);
  result += mat4x4<f32>(0.005341523, -0.04316488, 0.010990971, -0.04580816, -0.2011575, -0.12839723, 0.03454423, 0.07033941, 0.2015521, -0.023450239, 0.07495305, 0.060190327, 0.2374915, 0.08314132, 0.1448765, 0.010782365) * go_0(pixel.xy, 0, 1);
  result += mat4x4<f32>(-0.2539676, -0.061023794, 0.017386999, -0.16106452, -0.0081275655, -0.026813408, -0.04273378, 0.059856992, 0.10524249, -0.05252324, -0.054779455, -0.13417783, -0.02017702, 0.03993368, 0.08925187, -0.08785317) * go_0(pixel.xy, 1, -1);
  result += mat4x4<f32>(-0.2150907, -0.09752493, -0.07819065, 0.118367486, 0.15965632, -0.01911593, 0.09756007, -0.19293915, -0.47118682, -0.02320393, -0.19661823, -0.07426088, 0.114565015, -0.036253266, 0.07992177, 0.31465366) * go_0(pixel.xy, 1, 0);
  result += mat4x4<f32>(0.0026737838, -0.014244393, -0.01744674, -0.013864417, -0.08633515, -0.1659503, -0.14300038, -0.08190065, 0.13308053, 0.09437318, 0.057976108, 0.10253313, 0.15059637, 0.08850139, 0.027487176, -0.08374699) * go_0(pixel.xy, 1, 1);
  result += mat4x4<f32>(-0.09405149, -0.34007606, -0.089055754, -0.21923012, 0.01680151, -0.021069944, -0.08408347, -0.15109247, 0.104958385, -0.035915416, -0.025164688, 0.015189877, 0.30754042, 0.12916833, 0.08284153, 0.11368843) * go_1(pixel.xy, -1, -1);
  result += mat4x4<f32>(-0.14502743, -0.4974284, -0.2713126, -0.3666665, -0.0029413125, 0.032684244, -0.07021809, 0.1026307, 0.0642739, -0.123929024, -0.08701057, -0.18521209, 0.49029237, 0.046552774, -0.14227879, -0.1992994) * go_1(pixel.xy, -1, 0);
  result += mat4x4<f32>(-0.12557283, -0.14293958, -0.21946761, -0.1387717, 8.083835e-05, -0.02922972, -0.011674403, 0.030726615, -0.13186221, -0.059631154, 0.017142752, 0.055411287, 0.12673274, 0.09713596, -0.08412111, -0.117981605) * go_1(pixel.xy, -1, 1);
  result += mat4x4<f32>(-0.3852806, -0.10279084, -0.3413863, -0.07057451, -0.24884792, -0.033740543, 0.5202652, 0.19363657, 0.006298159, 0.07814635, -0.26607308, -0.3450293, 0.020913104, 0.27751172, 0.16371046, -0.04810517) * go_1(pixel.xy, 0, -1);
  result += mat4x4<f32>(-0.39776224, -0.26468077, -0.3712633, -0.4995043, -0.22427292, 0.15806368, 0.12583312, -0.34573475, -0.3879835, -0.74063385, -0.02289026, -0.6869013, -0.10638952, 0.22758023, 0.49369675, 0.31574854) * go_1(pixel.xy, 0, 0);
  result += mat4x4<f32>(-0.35703254, -0.2998416, -0.28791642, -0.1461705, -0.14126725, 0.014661143, -0.019008396, -0.037071824, 0.23344654, 0.110609345, -0.01446526, -0.09883566, 0.20432739, 0.21668363, 0.18600217, 0.1599944) * go_1(pixel.xy, 0, 1);
  result += mat4x4<f32>(-0.04502004, 0.020007275, -0.27264562, 0.004470462, -0.01151076, 0.0078300135, -0.14619705, 0.010003601, 0.1576979, 0.09199233, -0.052911576, 0.041739505, 0.10981996, 0.12077738, 0.015626527, 0.16059186) * go_1(pixel.xy, 1, -1);
  result += mat4x4<f32>(0.03954714, -0.094067276, 0.07555303, -0.025608933, -0.0689886, -0.010123235, 0.2671116, 0.067083225, 0.50753486, -0.26253924, -0.51049423, -0.28097796, 0.28253108, 0.13674913, 0.14408405, -0.03868868) * go_1(pixel.xy, 1, 0);
  result += mat4x4<f32>(-0.10005469, -0.12964216, -0.22730994, -0.06401748, -0.11373249, 0.10857882, 0.060836446, 0.083079845, -0.01994219, -0.30618262, -0.21965942, -0.46155962, 0.019577969, 0.047131278, 0.020768244, -0.02240607) * go_1(pixel.xy, 1, 1);
  result += vec4f(-0.09626135, 0.08572907, 0.07610502, 0.16032846);  
  
  // Store the result
  textureStore(tex_out, vec2u(pixel.x, pixel.y), result);
}
