@group(0) @binding(0) var tex_in: texture_2d<f32>;
@group(0) @binding(1) var tex_out: texture_storage_2d<rgba16float, write>;

fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(tex_in, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}

fn go_1(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(tex_in, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}

@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(tex_out);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }

  var result = mat4x4<f32>(-0.12055435, 0.028174262, -0.01101243, -0.026536943, -0.06556763, -0.0006661467, -0.010659855, 0.090222426, -0.013101601, -0.043220893, -0.0409395, -0.078889154, 0.04819996, 0.08357922, -0.061341837, -0.15148611) * go_0(pixel.xy, -1, -1);
  result += mat4x4<f32>(-0.051552843, 0.04883752, 0.22236107, 0.082210384, -0.10781561, -0.13986887, 0.30802122, 0.08129698, 0.014590004, 0.1744795, -0.008702794, -0.26453918, 0.23859273, 0.27499026, -0.08907096, -0.11396533) * go_0(pixel.xy, -1, 0);
  result += mat4x4<f32>(0.17680302, 0.022539906, -0.12644073, -0.07810667, -0.06440564, -0.1937115, 0.22362083, 0.15877265, -0.035918653, -0.016067287, -0.18339655, 0.1543823, -0.01004357, 0.014796912, -0.059541825, -0.07496525) * go_0(pixel.xy, -1, 1);
  result += mat4x4<f32>(-0.19312991, -0.024564218, 0.17875266, 0.2496253, 0.019069003, -0.09085132, -0.06492089, -0.043645658, 0.25133958, -0.26194933, 0.019492093, 0.10133122, -0.11057951, 0.0636808, -0.054831043, -0.15803578) * go_0(pixel.xy, 0, -1);
  result += mat4x4<f32>(0.26223436, -0.16157901, -0.1976137, -0.035051145, 0.21214224, 0.3401372, 0.5216007, 0.6700845, -0.12713583, 0.120234296, 0.04647983, 0.08953485, -0.53825873, 0.2739483, 0.39496818, 0.020643814) * go_0(pixel.xy, 0, 0);
  result += mat4x4<f32>(-0.041439362, 0.11358511, 0.07060764, -0.16733532, 0.18871532, -0.18637286, -0.035755362, 0.012733885, 0.042467248, 0.2349043, -0.10918459, -0.21813078, -0.073067755, 0.08488387, 0.09177309, -0.23914938) * go_0(pixel.xy, 0, 1);
  result += mat4x4<f32>(-0.042621277, -0.24078824, -0.021424523, -0.007019578, -0.029259302, -0.17231734, -0.027484939, 0.021671435, -0.062107943, 0.10638934, -0.009526606, -0.09798395, 0.11208506, 0.09472034, 0.013034389, -0.19733614) * go_0(pixel.xy, 1, -1);
  result += mat4x4<f32>(-0.13013071, -0.14299756, 0.23108183, 0.18999898, 0.05525996, -0.01161137, 0.059769284, 0.024959827, 0.18430766, -0.28173015, -0.11164548, 0.1054962, -0.05249486, -0.07437297, 0.115532555, 0.17630522) * go_0(pixel.xy, 1, 0);
  result += mat4x4<f32>(0.05864554, -0.022461498, -0.15162918, 0.07141074, 0.024728106, 0.092160806, -0.004592189, 0.030370867, -0.009048824, 0.028164314, 0.011055046, -0.011112018, 0.112569354, 0.026626568, -0.06660306, 0.003634946) * go_0(pixel.xy, 1, 1);
  result += mat4x4<f32>(0.06379041, -0.038249806, -0.06160145, 0.06156178, 0.04683488, -0.05885483, -0.0121804485, -0.03547206, 0.03276355, 0.030431833, -0.015190564, 0.13947055, -0.1223834, -0.067045, 0.065692596, 0.104044564) * go_1(pixel.xy, -1, -1);
  result += mat4x4<f32>(0.019469986, -0.13686319, -0.28933376, -0.17707358, 0.33283707, 0.10433893, -0.12440424, 0.14742821, -0.0010814479, -0.21799791, 0.048757467, 0.2835622, -0.2643379, -0.10806347, 0.12151464, -0.055228937) * go_1(pixel.xy, -1, 0);
  result += mat4x4<f32>(-0.18912427, 0.076117314, 0.10264859, -0.058588713, 0.07278803, -0.04987233, 0.024781132, 0.20415989, -0.048158433, -0.025592465, 0.08732647, -0.19518706, -0.08699652, 0.07888954, -0.06287499, -0.13874468) * go_1(pixel.xy, -1, 1);
  result += mat4x4<f32>(0.23872691, -0.012314145, -0.33459377, -0.1310463, 0.049930844, 0.03124191, 0.14450158, 0.22526416, -0.21537669, -0.056746982, 0.082357325, 0.009039302, 0.48757255, 0.26592538, 0.31403992, 0.1079903) * go_1(pixel.xy, 0, -1);
  result += mat4x4<f32>(-0.003156833, 0.14999776, 0.3177266, 0.18880388, 0.2514045, -0.5620437, -0.110633686, 0.085045576, -0.019093752, -0.10633538, -0.07372114, 0.08093257, 0.40297195, -0.42842764, -0.5099368, -0.117902905) * go_1(pixel.xy, 0, 0);
  result += mat4x4<f32>(0.054723468, -0.22143371, -0.080170535, 0.11801161, -0.1837477, 0.0115374345, 0.17818123, 0.36469492, 0.012382525, -0.26728615, 0.044464953, 0.28695142, -0.062313966, 0.042640977, -0.19088961, 0.021226598) * go_1(pixel.xy, 0, 1);
  result += mat4x4<f32>(-0.09542022, -0.074450545, -0.13662271, 0.0047579734, 0.038643643, 0.0057035317, 0.010948598, 0.11691816, 0.12941894, 0.021103136, -0.09375779, -0.024820587, 0.10518244, 0.11617655, 0.04521192, 0.081855424) * go_1(pixel.xy, 1, -1);
  result += mat4x4<f32>(0.038214758, 0.12035451, -0.42161435, -0.25775856, 0.062097635, -0.09038791, 0.039834194, 0.12608735, -0.3059741, 0.11122705, 0.101475306, -0.16488662, -0.08142406, 0.15159576, -0.24148002, -0.25276068) * go_1(pixel.xy, 1, 0);
  result += mat4x4<f32>(-0.10014693, -0.120480426, 0.106845155, -0.026614334, -0.036622092, -0.16601749, 0.0443842, 0.14661941, 0.008907851, -0.15375392, -0.00032195396, 0.07091635, -0.08842447, -0.027301233, 0.12642208, -0.05739118) * go_1(pixel.xy, 1, 1);
  result += vec4f(-0.020053953, -0.08030914, -0.031667113, -0.057931505);
  
  // Store the result
  textureStore(tex_out, vec2u(pixel.x, pixel.y), result);
}
