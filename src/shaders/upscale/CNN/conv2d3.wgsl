@group(0) @binding(0) var tex_in: texture_2d<f32>;
@group(0) @binding(1) var tex_out: texture_storage_2d<rgba16float, write>;

fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(tex_in, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}

fn go_1(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(tex_in, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}

@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(tex_out);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }

  var result = mat4x4<f32>(0.092348345, 0.011549111, -0.07096583, 0.06318526, -0.34451073, -0.06226293, -0.11486986, -0.28391263, -0.07931199, 0.047377743, 0.11298014, 0.018078646, 0.008847511, -0.085046604, -0.10360512, 0.16585863) * go_0(pixel.xy, -1, -1);
  result += mat4x4<f32>(-0.15492225, 0.066241525, -0.2880374, 0.24267495, -0.1057126, -0.351533, -0.19891146, -0.2209817, 0.2745846, 0.056732643, 0.24722001, -0.025073752, 0.1285598, 0.15161784, 0.22305192, -0.22307764) * go_0(pixel.xy, -1, 0);
  result += mat4x4<f32>(0.043648794, 0.002543572, -0.0053086164, 0.014056233, -0.0025330964, -0.17823894, -0.16875874, -0.22843477, -0.12612578, -0.10728596, 0.1317476, -0.12218237, 0.32138517, 0.012191922, 0.046478216, 0.23892581) * go_0(pixel.xy, -1, 1);
  result += mat4x4<f32>(0.12965497, -0.07608229, -0.10039548, -0.09535607, -0.049215976, -0.018316727, 0.021785105, -0.29035375, -0.062276933, 0.07903935, 0.006138336, -0.17263635, 0.031781826, 0.18434966, 0.17061065, 0.02077058) * go_0(pixel.xy, 0, -1);
  result += mat4x4<f32>(0.38750374, -0.38368112, -0.027802546, 0.063279726, -0.6239663, 0.20014192, -0.40209654, -0.3320961, 0.006900858, 0.6090297, -0.07506234, 0.20160931, -0.047854822, 0.021656018, 0.0049554114, 0.14350726) * go_0(pixel.xy, 0, 0);
  result += mat4x4<f32>(-0.041821595, 0.021657363, 0.13525978, 0.17162056, -0.19015202, -0.25497964, -0.14035563, 0.13719065, 0.17625289, -0.25994387, 0.084760614, 0.22369596, -0.15136376, -0.1385544, 0.068622775, -0.05381221) * go_0(pixel.xy, 0, 1);
  result += mat4x4<f32>(0.028013391, -0.033600815, 0.03991427, 0.07613022, -0.16403502, -0.2936361, -0.2920832, -0.38995817, -0.09273259, 0.2301474, -0.08964003, -0.09027052, 0.12913172, -0.049059182, 0.16466747, 0.15556188) * go_0(pixel.xy, 1, -1);
  result += mat4x4<f32>(0.07706466, 0.20295623, -0.13845254, -0.14086933, -0.045054216, -0.15888304, -0.20826185, -0.53498626, -0.20120667, 0.02944775, -0.20645592, 0.14122348, -0.046863936, -0.08029416, 0.094162844, -0.12828223) * go_0(pixel.xy, 1, 0);
  result += mat4x4<f32>(-0.007267417, -0.0046080705, -0.07930926, 0.014687774, -0.45307216, -0.24690385, -0.23200984, -0.4180271, 0.124578185, 0.13288634, 0.033508055, 0.118447095, -0.037407, -0.20652232, -0.040319838, -0.08660553) * go_0(pixel.xy, 1, 1);
  result += mat4x4<f32>(-0.22856003, 0.08621852, 0.06809734, -0.07325568, 0.01537169, 0.000639635, 0.020709824, -0.07083113, 0.16485776, 0.097905956, -0.006345512, 0.18595028, 0.09344443, -0.3147003, -0.30784383, -0.0057022553) * go_1(pixel.xy, -1, -1);
  result += mat4x4<f32>(0.35297117, -0.07332451, 0.14582145, -0.1953324, -0.26668516, -0.08707401, -0.28034073, 0.13042176, -0.10846176, 0.062066674, -0.12201378, 0.22939827, -0.17046858, -0.075111955, -0.3703659, -0.26530454) * go_1(pixel.xy, -1, 0);
  result += mat4x4<f32>(-0.10224615, 0.091090545, -0.05792418, -0.04401949, -0.21356915, 0.12028008, -0.020852875, -0.054986063, 0.17630918, 0.11274911, -0.03103941, 0.15191038, -0.27852568, -0.053193133, -0.13109528, -0.30675924) * go_1(pixel.xy, -1, 1);
  result += mat4x4<f32>(-0.41568774, 0.27179566, 0.23976654, -0.07440384, 0.10714987, -0.08263661, -0.12746455, -0.08196831, 0.10331742, -0.22144881, -0.14936146, 0.2534529, 0.18653165, -0.031143565, -0.26364815, -0.1777623) * go_1(pixel.xy, 0, -1);
  result += mat4x4<f32>(0.16597204, 0.0054389574, -0.819906, -0.4300934, 0.10858059, -0.10608918, -0.059153773, -0.1643999, 0.2057038, -0.43916315, 0.24373738, -0.040487833, 0.21805379, -0.21550594, -0.4369431, -0.22926703) * go_1(pixel.xy, 0, 0);
  result += mat4x4<f32>(0.17658432, 0.28409827, -0.14008674, -0.11056963, -0.18818034, 0.029623456, -0.028717186, -0.067016356, -0.40485436, -0.089993626, 0.24655615, -0.04519315, -0.20817767, -0.17945032, -0.30033702, -0.06559305) * go_1(pixel.xy, 0, 1);
  result += mat4x4<f32>(0.019520376, -0.042809293, -0.07077904, -0.15429147, 0.15946518, 0.08921542, -0.051255226, 0.1027924, -0.07770598, -0.09715461, 0.21211259, 0.011298821, -0.011093094, -0.021823658, -0.27545053, -0.2373658) * go_1(pixel.xy, 1, -1);
  result += mat4x4<f32>(0.015511425, -0.021879502, 0.19077745, 0.11016199, 0.1106167, 0.13150243, 0.008336127, 0.07087111, 0.20369104, 0.04512683, 0.42380115, 0.11048072, 0.041108422, -0.23399702, -0.50051045, -0.14850679) * go_1(pixel.xy, 1, 0);
  result += mat4x4<f32>(0.09962276, 0.12795202, 0.03406151, -0.022594294, 0.003382893, 0.14019206, 0.010771717, -0.0504001, -0.15400204, -0.2037712, 0.05653853, 0.04790949, -0.008362585, 0.27567932, -0.03961576, -0.23369862) * go_1(pixel.xy, 1, 1);
  result += vec4f(0.14959018, 0.02919448, 0.0326669, 0.06768387);
  
  // Store the result
  textureStore(tex_out, vec2u(pixel.x, pixel.y), result);
}
