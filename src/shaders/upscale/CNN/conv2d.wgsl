@group(0) @binding(0) var tex_in: texture_2d<f32>;
@group(0) @binding(1) var tex_out: texture_storage_2d<rgba16float, write>;

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return textureLoad(tex_in, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0);
}

@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(tex_out);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }

  var result: vec4f = mat4x4<f32>(-0.072145514, 0.00028308097, -0.02246936, 0.024812723, -0.07055249, -0.026193684, 0.06250765, 0.10273287, 0.023989726, 0.059850752, 0.12388443, -0.05610249, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, -1);
  result += mat4x4<f32>(0.09287214, -0.28751278, 0.16856873, -0.15185986, 0.16519044, 0.4119165, 0.07745975, -0.39149612, 0.13748379, 0.19694383, -0.0066408464, 0.035648603, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, 0);
  result += mat4x4<f32>(0.046672463, -8.82265e-05, 0.15009816, 0.102355726, -0.032501314, -0.14876123, -0.1941357, 0.11521068, -0.032267876, 0.14113747, -0.07084842, -0.08086943, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, 1);
  result += mat4x4<f32>(-0.03968421, -0.19019222, -0.07080888, -0.12406084, 0.122626044, 0.15815943, 0.1530841, 0.06688442, 0.1656277, 0.09434839, 0.026673744, 0.030796751, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, -1);
  result += mat4x4<f32>(0.6921126, 0.095474385, -0.0056551266, 0.05798976, 0.7254942, -0.2543809, -1.0393281, -1.035846, -0.08110214, -0.6830166, -0.15731563, 0.39509445, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, 0);
  result += mat4x4<f32>(-0.13021441, 0.1503607, 0.20657627, -0.0663681, 0.033763044, -0.066993274, 0.6008725, -0.1464296, -0.06528626, 0.09392874, 0.061711833, -0.069615036, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, 1);
  result += mat4x4<f32>(-0.30076998, -0.14036414, -0.16433552, -0.08016163, 0.10318603, -0.03843068, -0.09866994, 0.14631474, 0.05388223, 0.034318227, 0.052106798, -0.057668205, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, -1);
  result += mat4x4<f32>(-0.23786129, 0.3727822, -0.36011657, 0.047483545, 0.055704113, -0.20353787, 0.08237646, 0.17585282, -0.02251169, -0.10484316, 0.027232561, -0.13464582, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, 0);
  result += mat4x4<f32>(0.108914025, 0.02642652, 0.107908495, 0.118661806, -0.051034376, 0.0048822667, 0.10991195, 0.08074561, -0.067566656, 0.070840575, -0.04906773, -0.116966926, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, 1);
  result += vec4f(-0.2894205, -0.030624738, 0.3073097, 0.16633725);

  // Store the result
  textureStore(tex_out, vec2u(pixel.x, pixel.y), result);
}
