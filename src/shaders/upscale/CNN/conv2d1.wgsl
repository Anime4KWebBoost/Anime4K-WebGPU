@group(0) @binding(0) var tex_in: texture_2d<f32>;
@group(0) @binding(1) var tex_out: texture_storage_2d<rgba16float, write>;

fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(textureLoad(tex_in, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}

fn go_1(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return max4(-textureLoad(tex_in, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0), 0.0);
}

@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(tex_out);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }

  var result = mat4x4<f32>(0.06147661, 0.08833126, 0.046938453, -0.06018922, 0.018930146, 0.17391251, 0.0968089, 0.16006882, 0.046476644, -0.120067514, 0.00928321, -0.1123082, 0.09198358, -0.113103606, 0.09203268, 0.10243458) * go_0(pixel.xy, -1, -1);
  result += mat4x4<f32>(0.03423173, 0.2505715, 0.031599615, -0.09511331, 0.1426214, -0.15313806, 0.12848975, 0.023286961, 0.11289028, -0.08757947, -0.43745708, 0.06928223, 0.3181391, 0.057651803, 0.026929406, 0.03803578) * go_0(pixel.xy, -1, 0);
  result += mat4x4<f32>(-0.1292945, 0.042583257, -0.2004356, 0.32660207, 0.1276197, -0.056887686, -0.24774489, -0.13177316, -0.081318446, -0.06493321, -0.07007088, -0.055146568, -0.023784764, 0.11433824, -0.3040935, -0.027778838) * go_0(pixel.xy, -1, 1);
  result += mat4x4<f32>(-0.044498716, 0.42280948, 0.062070623, 0.2148611, -0.123194054, -0.25048327, 0.19733655, -0.13551375, -0.009461302, -0.5631941, -0.08607164, 0.13850448, -0.08990211, -0.14915596, -0.066133216, -0.19829673) * go_0(pixel.xy, 0, -1);
  result += mat4x4<f32>(0.21967943, -0.25121883, 0.37952, -0.45724368, -0.2076556, -0.28931007, 0.3471786, 0.122488834, -0.012703499, 0.31451723, 0.21664213, 0.21074998, 0.3702994, 0.15678592, -0.21367137, 0.8268485) * go_0(pixel.xy, 0, 0);
  result += mat4x4<f32>(-0.22125253, -0.110753976, 0.047768846, -0.27023393, 0.13471258, 0.14345424, -0.13693272, 0.038446166, -0.06620079, -0.05445717, 0.039801225, -0.046015315, 0.11203161, 0.26460502, -0.023194747, -0.039629303) * go_0(pixel.xy, 0, 1);
  result += mat4x4<f32>(0.069432564, -0.09272574, 0.12253827, 0.1291694, -0.11224104, 0.16809909, -0.06915314, -0.17369248, 0.05969406, -0.14640228, -0.0057935934, -0.08471993, -0.02034365, 0.29337114, 0.14110939, 0.0361152) * go_0(pixel.xy, 1, -1);
  result += mat4x4<f32>(-0.27787417, 0.009200061, -0.08835913, -0.056134365, -0.21587728, 0.21017273, -0.31632778, -0.25002062, 0.29224077, 0.40650958, 0.1681141, -0.23782323, -0.16064619, -0.19453338, -0.34186718, -0.053081196) * go_0(pixel.xy, 1, 0);
  result += mat4x4<f32>(-0.24282049, -0.11873012, -0.11440592, -0.008417438, -0.034035943, -0.18256468, -0.16165936, 0.03052503, -0.08246184, 0.06311742, 0.04626973, 0.040066913, -0.10866987, -0.04512457, 0.09514122, 0.038252804) * go_0(pixel.xy, 1, 1);
  result += mat4x4<f32>(-0.03537035, -0.13365282, 0.0019187316, 0.039242424, -0.06117977, -0.092283174, -0.13210632, -0.17939499, -0.066161625, 0.13690484, -0.005225468, 0.2245015, -0.13621947, -0.026488775, -0.050598588, -0.14804119) * go_1(pixel.xy, -1, -1);
  result += mat4x4<f32>(-0.107831135, -0.22277409, -0.02657944, -0.038208194, -0.24297678, -0.018400285, -0.26537237, 0.022952996, -0.10555939, 0.261099, 0.43923762, -0.013036105, -0.28890732, -0.0063598123, 0.025646267, -0.013443436) * go_1(pixel.xy, -1, 0);
  result += mat4x4<f32>(0.054750264, -0.016597766, 0.32688782, -0.2769158, -0.09020083, 0.04267472, 0.2602852, 0.08283018, 0.043695193, 0.0037251178, 0.006281472, 0.05668816, -0.030066907, 0.055234175, 0.2986416, 0.16619839) * go_1(pixel.xy, -1, 1);
  result += mat4x4<f32>(0.018525071, -0.4757674, 0.04003113, -0.41883922, 0.107983075, 0.1751906, -0.17759812, 0.08198361, -0.10118877, 0.56437653, -0.010495897, -0.0020253563, 0.08937133, 0.17738473, -0.02704055, -0.24398229) * go_1(pixel.xy, 0, -1);
  result += mat4x4<f32>(0.080102555, 0.47490886, -0.8159124, 0.7260771, 0.37928665, 0.037219018, -0.15212315, -0.2146389, -0.2708812, -0.45721346, 0.01860179, -0.1548227, 0.107198894, -0.03666022, -0.46162957, -0.20030443) * go_1(pixel.xy, 0, 0);
  result += mat4x4<f32>(0.11108713, 0.063587174, -0.20645106, 0.35211852, -0.024195202, -0.13010001, 0.14576577, -0.11711316, 0.030958494, 0.065396935, 0.0071226587, 0.016234476, -0.18657097, -0.24682587, 0.20031837, 0.061695997) * go_1(pixel.xy, 0, 1);
  result += mat4x4<f32>(-0.10664103, 0.21913692, -0.01698097, -0.096373215, 0.07363686, -0.11368008, 0.08352549, 0.11886179, 0.08031944, 0.22339283, -0.040905915, -0.0033878332, 0.03447521, -0.05581082, -0.07779932, 0.005415639) * go_1(pixel.xy, 1, -1);
  result += mat4x4<f32>(0.2127241, -0.110704474, 0.03432127, 0.04623661, 0.22938679, -0.03414845, 0.28390107, 0.21659572, -0.23376194, -0.14149353, -0.17764302, 0.32690096, 0.24899793, -0.18892059, 0.009465065, 0.04142101) * go_1(pixel.xy, 1, 0);
  result += mat4x4<f32>(0.25251555, 0.13680334, 0.22024646, 0.007084259, -0.07390074, 0.1629211, 0.12988287, -0.03469388, 0.064322144, -0.01900559, -0.06668637, -0.0121769, 0.06270774, 0.03689303, -0.016368631, 0.067921266) * go_1(pixel.xy, 1, 1);
  result += vec4f(0.27518556, 0.06594818, 0.06889677, 0.32818964);

  // Store the result
  textureStore(tex_out, vec2u(pixel.x, pixel.y), result);
}
