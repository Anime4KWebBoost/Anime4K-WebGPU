// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x104
// Name: conv2d18tf5
// Inputs: ['conv2d_15_tf', 'conv2d_15_tf1', 'conv2d_15_tf2', 'conv2d_15_tf3', 'conv2d_15_tf4', 'conv2d_15_tf5', 'conv2d_17_tf', 'conv2d_1_tf', 'conv2d_4_tf', 'conv2d_7_tf', 'conv2d_10_tf', 'conv2d_13_tf', 'conv2d_16_tf']
// Output: conv2d_18_tf5
@group(0) @binding(0) var conv2d_15_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_15_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_15_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_15_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_15_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_15_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_17_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_4_tf_tex: texture_2d<f32>;
@group(0) @binding(9) var conv2d_7_tf_tex: texture_2d<f32>;
@group(0) @binding(10) var conv2d_10_tf_tex: texture_2d<f32>;
@group(0) @binding(11) var conv2d_13_tf_tex: texture_2d<f32>;
@group(0) @binding(12) var conv2d_16_tf_tex: texture_2d<f32>;
@group(0) @binding(13) var conv2d_18_tf5_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_17_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_17_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_16(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_17(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_18(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_19(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_20(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_21(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_22(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_23(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_24(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}

fn g_25(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_18_tf5_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(0.056246072, -0.16367151, 0.09586773, -0.09557277, -0.10967658, 0.29330617, -0.13319509, 0.1583132, -0.03072026, -0.13287482, 0.08872677, 0.01658334, -0.030632658, 0.23216708, -0.04874622, -0.19615364) * g_0(pixel.xy);
  result += mat4x4<f32>(0.28258148, 0.23039894, -0.022433521, -0.076286666, -0.013763674, -0.011372233, 0.06338799, -0.14605698, 0.14725849, 0.04564273, -0.29587668, -0.06550259, 0.07033988, 0.056368083, -0.11388523, 0.22788034) * g_1(pixel.xy);
  result += mat4x4<f32>(-0.078506514, 0.050773215, -0.05056612, 0.03687288, -0.06774274, 0.346275, 0.22509691, 0.14400601, 0.053844824, -0.032543994, -0.065815195, 0.05659026, 0.30160823, 0.21798158, -0.13396002, -0.070808604) * g_2(pixel.xy);
  result += mat4x4<f32>(0.1414282, -0.14827503, 0.1398485, -0.07609034, -0.25334343, 0.14950044, -0.23095194, 0.20794556, 0.13395849, -0.016921503, -0.019526243, 0.03422955, -0.12746096, 0.051038973, 0.30596954, 0.08058667) * g_3(pixel.xy);
  result += mat4x4<f32>(-0.16881044, -0.14647691, 0.005999665, -0.2447768, 0.01649153, 0.062070012, -0.046544943, -0.17421006, -0.1569363, -0.13780028, 0.06486153, 0.083640814, 0.10214361, 0.33934087, -0.10050735, 0.101777904) * g_4(pixel.xy);
  result += mat4x4<f32>(0.290694, -0.21645689, 0.051882863, -0.17417477, 0.10914349, 0.08146335, -0.098452374, -0.19601184, 0.12863407, 0.1486865, -0.081353866, 0.041731454, -0.22860748, -0.2768738, 0.22779721, 0.17970768) * g_5(pixel.xy);
  result += mat4x4<f32>(-0.010292755, 0.30307126, 0.070744984, 0.018192705, 0.059022196, -0.2962268, 0.32906732, -0.32876432, -0.21463345, 0.31662, -0.16954084, -0.117625155, -0.10809974, -0.23279764, 0.15617515, -0.12067889) * g_6(pixel.xy);
  result += mat4x4<f32>(-0.09392243, -0.09030095, -0.0074743694, 0.18182948, 0.066194676, -0.06895621, -0.083494544, -0.11739724, -0.025220301, -0.07014885, 0.08474903, -0.15182392, 0.3104019, 0.1361944, -0.07185112, -0.30538258) * g_7(pixel.xy);
  result += mat4x4<f32>(-0.04256853, -0.27519822, 0.4612011, 0.024868855, -0.017590877, 0.029131817, -0.032747604, -0.046608966, 0.047107942, -0.06539844, -0.1362288, 0.016851274, -0.19554174, -0.09681737, -0.09754212, -0.10524043) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.08256224, -0.061173473, -0.0003020941, 0.1565923, -0.003615149, 0.1686191, 0.25915742, -0.1551164, 0.010245293, 0.09092833, 0.0010728717, 0.12982604, -0.13078149, -0.079463206, -0.25684637, 0.022832563) * g_9(pixel.xy);
  result += mat4x4<f32>(0.20522995, 0.088086136, 0.14705934, 0.1724673, 0.21438526, 0.069160245, 0.06703898, 0.06735102, 0.2414119, 0.23313762, -0.14652516, -0.2308932, 0.11138083, -0.35780203, 0.18798493, 0.079498045) * g_10(pixel.xy);
  result += mat4x4<f32>(-0.053529646, 0.05224867, -0.021422606, 0.10177944, 0.2462833, 0.22917953, 0.09228497, -0.017690439, -0.0007594463, 0.08885728, 0.06285097, -0.006133101, 0.35480046, 0.094339065, 0.0025798874, -0.03436115) * g_11(pixel.xy);
  result += mat4x4<f32>(0.29142246, -0.20571099, 0.039097242, 0.16419578, 0.33381957, 0.059117097, 0.3232492, 0.3207798, -0.17321022, 0.28149655, -0.37212068, -0.091761135, -0.29647976, -0.09786893, -0.012315099, -0.098530225) * g_12(pixel.xy);
  result += mat4x4<f32>(-0.08517171, 0.29922923, -0.3016026, 0.18986404, -0.4725503, 0.21458124, -0.019785719, -0.22997737, -0.1803405, -0.3505279, 0.1441317, 0.123748966, 0.16901205, 0.0853246, 0.056168083, -0.12500733) * g_13(pixel.xy);
  result += mat4x4<f32>(-0.05538139, 0.32405415, -0.07422156, 0.11243641, -0.12328553, 0.19872831, 0.11609064, 0.044187672, -0.03900837, 0.14938031, -0.26779997, -0.014325914, 0.08516605, 0.15472183, -0.008160691, -0.1546734) * g_14(pixel.xy);
  result += mat4x4<f32>(0.10224539, 0.05463571, -0.10349991, -0.13967137, 0.013825501, -0.19771369, 0.022759158, -0.02061224, -0.14596504, -0.1389487, -0.023805464, 0.3357339, 0.053674806, -0.29536068, -0.030129524, -0.23420021) * g_15(pixel.xy);
  result += mat4x4<f32>(0.00525935, -0.06187332, -0.21343656, 0.08685601, 0.1973513, 0.023780117, 0.10964963, 0.29554302, 0.23034461, -0.1638336, 0.052997477, -0.09746816, 0.3240945, 0.40397635, 0.14546403, 0.23516071) * g_16(pixel.xy);
  result += mat4x4<f32>(0.12398506, 0.071972124, -0.041258276, 0.039724182, 0.2652426, 0.27666694, 0.23635465, -0.019449247, -0.1527029, -0.22316225, 0.10210884, -0.07005887, -0.30646923, 0.041887626, -0.009516569, 0.036413055) * g_17(pixel.xy);
  result += mat4x4<f32>(0.028276786, 0.16043751, -0.2239881, -0.37586385, 0.31563812, -0.026203927, -0.19180797, 0.10412318, 0.26220286, 0.12667432, 0.23287152, -0.13779306, -0.08798421, -0.08690371, -0.13741593, 0.17836761) * g_18(pixel.xy);
  result += mat4x4<f32>(0.287815, 0.14447291, -0.045042984, 0.29542264, 0.058183044, -0.23302315, 0.21404788, 0.02194636, -0.07718152, 0.013391173, 0.095230855, 0.057383515, 0.034200735, -0.02018772, -0.009704874, 0.022752954) * g_19(pixel.xy);
  result += mat4x4<f32>(-0.21204911, -0.014358223, -0.04669444, 0.07340455, -0.34677908, 0.06096447, 0.07148003, -0.068913, -0.007976721, 0.23779279, -0.13419056, -0.19720857, -0.33705205, 0.044584982, -0.08765776, 0.19233592) * g_20(pixel.xy);
  result += mat4x4<f32>(-0.1133937, 0.17952245, -0.21029858, 0.18934067, 0.09819281, 0.096423194, -0.11639172, -0.018819679, 0.010464611, -0.093951285, -0.014759534, 0.020049462, 0.18295068, 0.19702181, 0.020996286, 0.14536497) * g_21(pixel.xy);
  result += mat4x4<f32>(-0.3783169, 0.33286926, -0.19929482, 0.15028305, 0.065908626, 0.041621454, -0.18216579, 0.043525103, 0.17919035, -0.12875584, 0.065998, -0.21985063, 0.13770798, -0.115711726, -0.088645585, 0.13645406) * g_22(pixel.xy);
  result += mat4x4<f32>(0.1653456, -0.2774588, -0.012783554, 0.29001617, -0.2319765, -0.05957548, 0.13937134, 0.09561029, -0.18725371, 0.19096635, 0.23249848, -0.19607106, 0.11286404, -0.30301368, 0.00872854, -0.11348953) * g_23(pixel.xy);
  result += mat4x4<f32>(0.2649749, -0.110655166, -0.014622274, -0.012837707, -0.25394395, -0.116608076, -0.13025038, 0.24080041, -0.29346582, -0.27480447, -0.14941107, 0.22009355, -0.028492803, -0.55209374, 0.09375013, -0.07632931) * g_24(pixel.xy);
  result += mat4x4<f32>(-0.2204565, -0.20641033, -0.16525632, -0.024253568, 0.22351857, 0.014136642, 0.096259035, 0.011398014, -0.0904076, 0.3691236, 0.34148008, -0.18941431, -0.06418756, 0.16660745, -0.0032392892, 0.18603528) * g_25(pixel.xy);
  result += vec4f(0.107388094, -0.010368161, -0.030843422, -0.045815416);
  textureStore(conv2d_18_tf5_tex, pixel.xy, result);
}
