// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x72
// Name: conv2d6tf
// Inputs: ['conv2d_3_tf', 'conv2d_3_tf1', 'conv2d_3_tf2', 'conv2d_3_tf3', 'conv2d_3_tf4', 'conv2d_3_tf5', 'conv2d_5_tf', 'conv2d_1_tf', 'conv2d_4_tf']
// Output: conv2d_6_tf
@group(0) @binding(0) var conv2d_3_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_3_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_3_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_3_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_3_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_3_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_5_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_4_tf_tex: texture_2d<f32>;
@group(0) @binding(9) var conv2d_6_tf_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_5_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_5_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_16(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_17(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_6_tf_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(0.2814602, 0.2277187, 0.29435065, 0.2408478, 0.105000384, -0.27356383, 0.036709026, -0.082270764, -0.051774833, -0.30756906, 0.22812237, -0.1716299, 0.066388845, 0.071013935, -0.17304003, 0.36941883) * g_0(pixel.xy);
  result += mat4x4<f32>(0.010861255, 0.035956513, 0.15827346, -0.1573738, 0.28040013, -0.14285654, -0.1002935, -0.17466334, 0.23483588, -0.4468472, -0.083240435, -0.28713223, 0.20002778, -0.22584511, -0.017660992, 0.15582836) * g_1(pixel.xy);
  result += mat4x4<f32>(-0.26468986, 0.0936422, -0.043597784, -0.18019813, 0.12215305, 0.30424714, 0.41272894, 0.2958579, -0.1279559, -0.1711416, -0.1494349, -0.15574773, -0.20571063, 0.33361194, 0.31610423, 0.07864312) * g_2(pixel.xy);
  result += mat4x4<f32>(0.16455007, 0.23325196, -0.31887302, -0.02492541, -0.55856234, -0.0031886266, -0.11389042, -0.16259733, -0.25545537, 0.4201699, 0.13217591, 0.07380258, 0.030272568, 0.06883875, -0.16177692, 0.23754956) * g_3(pixel.xy);
  result += mat4x4<f32>(-0.35823125, 0.26168248, 0.06723545, -0.25340518, -0.12674278, 0.16228193, -0.12574689, -0.018757205, 0.11605118, -0.2045155, 0.0029288447, -0.030387532, -0.25938132, -0.22786854, 0.19045345, -0.13012685) * g_4(pixel.xy);
  result += mat4x4<f32>(-0.065970175, 0.0951907, 0.035318363, 0.13688375, 0.059882894, -0.11809705, -0.05243897, -0.352783, 0.39302433, 0.01651681, -0.25153002, 0.08879433, -0.20241016, 0.044586238, -0.41407117, 0.25752586) * g_5(pixel.xy);
  result += mat4x4<f32>(-0.20024903, -0.029611953, -0.28356886, -0.025313022, 0.089501604, -0.033136155, -0.1373444, -0.044254545, 0.039401148, 0.18670277, -0.31939486, 0.21125056, 0.26854888, 0.02871854, 0.19365928, -0.18145144) * g_6(pixel.xy);
  result += mat4x4<f32>(-0.14600311, -0.08483165, 0.018047078, 0.035864647, -0.20588812, 0.2844857, 0.14752424, 0.21875894, -0.30613014, 0.3414608, 0.30383223, 0.2768457, -0.0075907917, 0.40889844, 0.16538632, 0.32830665) * g_7(pixel.xy);
  result += mat4x4<f32>(0.38021183, -0.12041459, 0.14818075, 0.19251712, -0.091613315, -0.27928743, -0.24842967, -0.23841564, -0.11372076, 0.09261184, 0.31207904, 0.16299677, 0.15786624, -0.03707239, -0.052265193, -0.21610543) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.043928284, -0.07245048, 0.17044666, 0.18489574, -0.02868591, 0.06388082, -0.21634308, 0.2171092, -0.25383195, -0.13655554, 0.050747488, 0.11323931, 0.14448066, 0.10746246, 0.021201093, -0.05081431) * g_9(pixel.xy);
  result += mat4x4<f32>(0.010971268, -0.31695822, 0.06632742, 0.2854791, -0.056062803, -0.026609302, -0.011950665, -0.10058546, -0.18215255, 0.081689365, 0.19777119, 0.34793538, 0.30169576, 0.004764223, -0.076669544, 0.044626463) * g_10(pixel.xy);
  result += mat4x4<f32>(0.18681169, 0.210494, 0.19781908, -0.08093209, -0.21912567, 0.11352498, 0.013049184, -0.21621475, 0.03843136, 0.26926485, 0.09463884, 0.23498456, 0.23216794, -0.13159363, 0.16778943, -0.025485182) * g_11(pixel.xy);
  result += mat4x4<f32>(0.19025959, 0.58493006, 0.056999333, 0.05119183, 0.1487993, -0.38447016, -0.17310664, -0.39204964, -0.064214475, 0.08697591, 0.25842324, 0.04074829, 0.078874275, -0.24143232, -0.22189601, 0.024380466) * g_12(pixel.xy);
  result += mat4x4<f32>(-0.10456438, -0.19316635, -0.092004195, -0.10626127, -0.18705751, 0.122325554, 0.07493597, 0.14279996, 0.31013626, 0.060707815, -0.14635678, -0.044795312, 0.006639313, 0.13290113, 0.3026528, -0.033154637) * g_13(pixel.xy);
  result += mat4x4<f32>(0.16083871, 0.036329053, 0.12857045, -0.20901158, 0.071605735, 0.029462824, -0.022499103, -0.2286325, -0.53524, 0.04800241, 0.021400047, -0.39015284, -0.07230238, 0.18508849, -0.032816987, -0.21694009) * g_14(pixel.xy);
  result += mat4x4<f32>(0.1175502, 0.2037501, -0.13257551, 0.101748504, 0.10230803, -0.12004787, -0.20809744, -0.17061722, -0.020457663, -0.3528951, 0.21511243, -0.07210097, 0.107290834, -0.30615744, 0.1965365, 0.18667313) * g_15(pixel.xy);
  result += mat4x4<f32>(0.003279607, -0.13956092, 0.03445401, -0.0033504022, -0.095258705, -0.010740883, 0.014021217, 0.05173165, -0.053114057, -0.03752222, -0.05321192, 0.19231808, 0.11545275, -0.37370005, -0.2259635, 0.096631624) * g_16(pixel.xy);
  result += mat4x4<f32>(0.11959142, 0.08352709, -0.059375286, -0.14197232, 0.04815708, 0.04520147, -0.112980366, 0.14088671, 0.01989498, -0.034033295, -0.08994673, -0.10527029, 0.17595868, -0.03632629, 0.28482202, 0.01762533) * g_17(pixel.xy);
  result += vec4f(0.066603035, 0.016885368, 0.04719387, 0.013140797);
  textureStore(conv2d_6_tf_tex, pixel.xy, result);
}
