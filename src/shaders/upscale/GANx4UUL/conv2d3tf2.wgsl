// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x64
// Name: conv2d3tf2
// Inputs: ['conv2d_tf', 'conv2d_tf1', 'conv2d_tf2', 'conv2d_tf3', 'conv2d_tf4', 'conv2d_tf5', 'conv2d_2_tf', 'conv2d_1_tf']
// Output: conv2d_3_tf2
@group(0) @binding(0) var conv2d_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_2_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_3_tf2_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_2_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_2_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_3_tf2_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.17167501, -0.20074758, -0.091966644, 0.17859644, 0.118206196, 0.34780696, -0.13851282, -0.15981564, -0.076300435, 0.15581897, 0.14410381, -0.15348436, -0.15534315, -0.2340937, -0.11868538, 0.0851946) * g_0(pixel.xy);
  result += mat4x4<f32>(0.054577276, -0.2794922, -0.11732257, 0.120796256, -0.1978545, -0.051208086, -0.07047726, 0.15230909, -0.26737535, -0.0122873, 0.026735889, -0.13376889, -0.15112357, 0.07320343, 0.31711194, -0.2877825) * g_1(pixel.xy);
  result += mat4x4<f32>(-0.20589454, -0.13458282, -0.014493836, -0.007392441, -0.083313756, 0.0069659096, -0.0074436525, -0.02603582, 0.02844895, -0.03466271, -0.15414406, 0.0131968865, -0.023258701, -0.0410315, 0.16994998, 0.11258594) * g_2(pixel.xy);
  result += mat4x4<f32>(0.26200938, 0.086695306, -0.115744606, 0.06443161, -0.2161834, -0.08266891, 0.1765909, -0.20307815, 0.025309294, 0.33511654, -0.0001637002, -0.059903737, 0.101451375, -0.013754625, -0.11448642, -0.09510312) * g_3(pixel.xy);
  result += mat4x4<f32>(-0.18455864, 0.036392804, 0.15850407, 0.4627119, 0.022083975, 0.15103343, 0.19111873, -0.06110459, 0.29009378, -0.089215584, 0.0095581515, -0.08869528, 0.15069005, -0.17065643, 0.26667884, -0.14760415) * g_4(pixel.xy);
  result += mat4x4<f32>(0.047154248, -0.004531016, -0.15437222, -0.31048393, 0.09027498, 0.08990544, 0.2252978, 0.36424273, 0.15726654, -0.56078666, -0.08649826, -0.22744723, 0.16684572, 0.12967846, 0.12568599, -0.104463704) * g_5(pixel.xy);
  result += mat4x4<f32>(0.3277519, 0.05652085, 0.22621375, 0.28361705, -0.19233695, -0.14974803, 0.18974204, 0.2078392, 0.07101538, 0.14084798, 0.11973675, 0.20132545, 0.07275875, 0.093166135, 0.07810121, 0.14855048) * g_6(pixel.xy);
  result += mat4x4<f32>(-0.066067055, 0.07116497, 0.16419168, -0.042009585, 0.048940875, -0.14183162, 0.106968045, -0.18822758, 0.16543157, -0.06218013, -0.15914337, 0.13385944, 0.12195849, -0.17245843, -0.11288994, 0.06605676) * g_7(pixel.xy);
  result += mat4x4<f32>(0.033830874, 0.27364245, -0.13338806, -0.12021034, 0.0624405, -0.10521141, 0.028734906, -0.06998827, 0.088741004, 0.16279134, 0.26099658, -0.046972543, -0.23423652, 0.15810764, 0.0008583185, -0.29681998) * g_8(pixel.xy);
  result += mat4x4<f32>(0.10305078, -0.17637174, -0.07091048, -0.00831249, 0.40148687, 0.20420474, 0.05468663, 0.20745115, -0.12189844, -0.16298126, -0.41976577, 0.018498925, -0.19579916, 0.097037986, 0.110560134, 0.024746) * g_9(pixel.xy);
  result += mat4x4<f32>(-0.31636187, -0.06314442, -0.1491463, -0.36367223, 0.13375707, -0.46219668, -0.08560705, 0.00979978, -0.33054784, -0.048843995, -0.5661279, 0.2450401, 0.049516775, 0.05733291, 0.008123728, 0.13401002) * g_10(pixel.xy);
  result += mat4x4<f32>(-0.09406586, -0.1038661, 0.18738243, 0.4952333, 0.124727175, -0.1438255, -0.12731665, -0.19241591, -0.29327804, 0.1374427, -0.15773357, -0.21447569, 0.0020323892, -0.032879442, 0.019189913, 0.022784567) * g_11(pixel.xy);
  result += mat4x4<f32>(0.27434522, 0.12163328, 0.2289956, -0.12183031, -0.000272515, -0.023530856, 0.099465564, 0.121231996, 0.3175001, 0.124576926, -0.090265624, -0.1386641, -0.20303635, 0.23467141, 0.0842663, 0.42639464) * g_12(pixel.xy);
  result += mat4x4<f32>(0.111336865, -0.10426442, -0.22704108, -0.08042834, -0.13705374, -0.06750703, 0.005238288, -0.020887226, 0.04180084, -0.10919923, -0.2624013, 0.017800566, -0.03857038, 0.21999447, 0.028879922, -0.12443005) * g_13(pixel.xy);
  result += mat4x4<f32>(-0.021032276, 0.25167516, 0.18236992, 0.021120392, -0.14439242, -0.3752765, -0.4087792, 0.12474052, -0.07753308, 0.24097584, 0.01818881, 0.25023264, 0.3096247, -0.21351217, -0.31819695, 0.01839186) * g_14(pixel.xy);
  result += mat4x4<f32>(-0.04455319, -0.33904293, -0.1072782, -0.07438099, 0.21500371, 0.2610481, 0.11105567, -0.07383555, -0.18360671, -0.02730343, -0.19995123, -0.3209995, 0.008217429, -0.1731404, 0.00079199206, 0.058588315) * g_15(pixel.xy);
  result += vec4f(-0.05414109, -0.03095426, 0.058985617, 0.012448636);
  textureStore(conv2d_3_tf2_tex, pixel.xy, result);
}
