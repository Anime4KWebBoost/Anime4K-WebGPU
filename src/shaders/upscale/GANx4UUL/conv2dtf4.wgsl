// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x3x3x3
// Name: conv2dtf4
// Inputs: ['MAIN']
// Output: conv2d_tf4
@group(0) @binding(0) var MAIN_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_tf4_tex: texture_storage_2d<rgba16float, write>;

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return textureLoad(MAIN_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0);
}

@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_tf4_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.06263417, -0.015899068, -0.06673424, -0.29330692, 0.27661222, 0.21981683, 0.009470586, 0.09138456, 0.44470203, 0.1370112, 0.25888672, -0.26252735, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, -1);
  result += mat4x4<f32>(-0.16853511, -0.56013334, -0.083473705, -0.31337133, 0.020068824, -0.56741786, 0.23128, 0.033934496, -0.39917204, 0.006675525, -0.19767813, 0.24100189, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, 0);
  result += mat4x4<f32>(0.2767365, -0.21478292, 0.19800368, 0.04981372, -0.43988076, 0.13038118, -0.0023825555, -0.041225314, 0.055087563, 0.11922491, -0.36424643, 0.24521022, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, 1);
  result += mat4x4<f32>(0.054674063, -0.17308263, 0.06928539, 0.13456745, -0.1371371, 0.06866367, 0.28848526, 0.4235249, 0.08625838, -0.14268667, 0.10068345, -0.09432318, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, -1);
  result += mat4x4<f32>(0.04889649, 0.4082082, 0.2460249, -0.3526585, 0.06668635, 0.054053612, -0.14569403, 0.4200826, 0.043631364, 0.09612367, 0.27758798, 0.30841815, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, 0);
  result += mat4x4<f32>(-0.6218072, -0.16005784, -0.388552, 0.35026243, 0.21814698, 0.12549512, 0.25294197, -0.6248336, 0.53151983, -0.05606831, 0.21320722, 0.0833118, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, 1);
  result += mat4x4<f32>(-0.0938141, -0.045953494, -0.056681573, -0.1889846, -0.22944446, -0.15354922, 0.39270183, 0.05020913, 0.13824314, -0.2219286, 0.17828543, -0.15948938, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, -1);
  result += mat4x4<f32>(0.52495337, -0.074113816, -0.40637568, 0.1596743, 0.11383307, 0.3346896, -0.24222933, -0.21050623, 0.254895, 0.47635737, -0.25384998, -0.28989154, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, 0);
  result += mat4x4<f32>(0.012225922, 0.03979189, 0.5064567, 0.34305865, -0.1555728, -0.08338589, -0.32082558, 0.34781134, -0.4321089, -0.1193855, -0.1264447, -0.10376585, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, 1);
  result += vec4f(-0.020296605, 0.008579932, -0.0016261942, 0.025361473);
  textureStore(conv2d_tf4_tex, pixel.xy, result);
}
