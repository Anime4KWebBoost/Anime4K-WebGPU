// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x3x3x3
// Name: conv2dtf2
// Inputs: ['MAIN']
// Output: conv2d_tf2
@group(0) @binding(0) var MAIN_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_tf2_tex: texture_storage_2d<rgba16float, write>;

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return textureLoad(MAIN_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0);
}

@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_tf2_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.26204622, 0.4223293, -0.08510012, 0.019453628, -0.017182587, 0.40875512, -0.3000382, 0.2466832, 0.18032596, -0.13804369, 0.23681472, -0.5184114, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, -1);
  result += mat4x4<f32>(0.2840186, 0.14369252, -0.0046741674, 0.12592295, 0.10657679, -0.038042028, -0.07698588, 0.27475855, 0.12976117, -0.2198779, 0.46100235, -0.22570461, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, 0);
  result += mat4x4<f32>(0.16426864, -0.043802097, -0.14111784, -0.036953557, -0.32212126, 0.07034313, 0.099273205, -0.18979223, 0.1203169, 0.16851273, -0.095204584, 0.41846615, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, 1);
  result += mat4x4<f32>(0.011586374, -0.4041288, 0.02327077, -0.038964503, -0.020300997, 0.03858248, -0.016609106, 0.4671461, -0.05677658, -0.1051009, 0.32721362, 0.025792936, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, -1);
  result += mat4x4<f32>(0.15935725, 0.578516, -0.6138353, -0.21297511, 0.39311242, -0.39518067, 0.07517545, -0.592613, 0.14880066, -0.27320826, 0.07287175, -0.48092732, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, 0);
  result += mat4x4<f32>(-0.18682362, 0.09657896, -0.014692581, -0.33343104, -0.25030813, 0.08155329, 0.2331368, 0.057343826, -0.4811021, -0.0041507008, 0.28470665, 0.20497215, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, 1);
  result += mat4x4<f32>(-0.1067868, -0.05718925, -0.20147423, 0.23770608, -0.42711017, 0.21191151, -0.011552215, -0.22620037, 0.39481977, -0.30003747, 0.09253048, -0.07504313, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, -1);
  result += mat4x4<f32>(-0.27101615, -0.5613797, -0.05610472, 0.2528841, -0.5252947, 0.3716928, 0.06479668, 0.020567236, -0.033534806, -0.13467468, 0.19145517, 0.010775708, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, 0);
  result += mat4x4<f32>(0.07840132, 0.26650423, 0.28004074, 0.24665453, 0.3865472, 0.013721022, -0.1948635, -0.013643245, 0.44512212, -0.21704042, -0.52104753, 0.51656127, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, 1);
  result += vec4f(-0.035768427, -0.001056053, 0.0340295, 0.006839878);
  textureStore(conv2d_tf2_tex, pixel.xy, result);
}
