// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x112
// Name: conv2d21tf1
// Inputs: ['conv2d_18_tf', 'conv2d_18_tf1', 'conv2d_18_tf2', 'conv2d_18_tf3', 'conv2d_18_tf4', 'conv2d_18_tf5', 'conv2d_20_tf', 'conv2d_1_tf', 'conv2d_4_tf', 'conv2d_7_tf', 'conv2d_10_tf', 'conv2d_13_tf', 'conv2d_16_tf', 'conv2d_19_tf']
// Output: conv2d_21_tf1
@group(0) @binding(0) var conv2d_18_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_18_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_18_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_18_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_18_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_18_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_20_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_4_tf_tex: texture_2d<f32>;
@group(0) @binding(9) var conv2d_7_tf_tex: texture_2d<f32>;
@group(0) @binding(10) var conv2d_10_tf_tex: texture_2d<f32>;
@group(0) @binding(11) var conv2d_13_tf_tex: texture_2d<f32>;
@group(0) @binding(12) var conv2d_16_tf_tex: texture_2d<f32>;
@group(0) @binding(13) var conv2d_19_tf_tex: texture_2d<f32>;
@group(0) @binding(14) var conv2d_21_tf1_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_18_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_18_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_18_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_18_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_18_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_18_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_18_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_18_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_18_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_18_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_18_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_18_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_20_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_20_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_16(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_17(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_18(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_19(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_20(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_21(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_22(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_23(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_24(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}

fn g_25(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}

fn g_26(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_19_tf_tex, pos, 0), 0.0);
}

fn g_27(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_19_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_21_tf1_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.1756655, 0.2394621, -0.08748251, 0.12350313, 0.2136366, 0.07180196, -0.063014165, -0.052154776, -0.048294004, -0.11931733, -0.07316665, -0.016064208, -0.16288999, 0.17369701, -0.035828933, 0.0003992723) * g_0(pixel.xy);
  result += mat4x4<f32>(-0.28360948, 0.05576701, 0.044312038, -0.08181158, -0.17544775, 0.10725244, 0.19446151, -0.19915965, 0.20983706, -0.048648514, -0.06845115, -0.06666123, -0.058113296, -0.1400215, 0.018594868, 0.03359526) * g_1(pixel.xy);
  result += mat4x4<f32>(0.1685084, -0.073783316, -0.20972507, -0.113601886, 0.04464233, 0.1066123, 0.07970566, -0.12577637, -0.050229155, -0.13494389, -0.2558168, -0.0042490545, 0.005460988, 0.0076199966, 0.0025213186, 0.044763103) * g_2(pixel.xy);
  result += mat4x4<f32>(-0.0052317875, 0.0027467392, -0.14741494, 0.07422548, 0.069331884, 0.05495023, 0.011922025, -0.068583466, -0.09747392, -0.03871967, 0.019188546, -0.24301958, -0.09219407, 0.09321753, 0.13795844, 0.028697817) * g_3(pixel.xy);
  result += mat4x4<f32>(0.16926937, -0.0071689105, 0.1393118, -0.05259209, 0.12629338, 0.13920256, 0.12663081, -0.051457815, -0.17981507, 0.12771882, 0.09692452, 0.08349755, -0.09658173, -0.17841125, -0.20769149, -0.0763144) * g_4(pixel.xy);
  result += mat4x4<f32>(-0.21198377, -0.14739051, -0.08248044, 0.1661816, -0.05062238, -0.1363927, 0.13842218, 0.1367609, 0.04016191, -0.17620887, -0.056923762, 0.02746218, -0.07269395, -0.08043915, -0.10160525, 0.062392905) * g_5(pixel.xy);
  result += mat4x4<f32>(-0.14993137, -0.095249705, 0.17030515, -0.012608146, -0.07266432, 0.014926277, -0.0047261617, -0.010011702, 0.009128133, 0.07995534, 0.05507624, -0.26496184, 0.3488721, -0.09683456, 0.020622155, 0.06607447) * g_6(pixel.xy);
  result += mat4x4<f32>(-0.21903756, 0.34106353, 0.17070994, 0.077885374, -0.011344036, 0.012352647, -0.171021, 0.06153072, -0.012573895, -0.085864305, -0.07954067, -0.034453984, 0.0023422232, 0.26898122, -0.086993374, -0.12912525) * g_7(pixel.xy);
  result += mat4x4<f32>(-0.048054293, -0.058729056, 0.058039352, 0.0077087884, 0.07013047, -0.19018608, -0.17199957, 0.12733743, -0.11381175, 0.0036818564, -0.036225986, -0.04890944, 0.1931185, -0.050229732, -0.055666275, 0.010115753) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.10551637, 0.015622803, 0.013705792, -0.2789802, 0.039018016, -0.11402238, 0.14938816, 0.08859123, -0.19127499, -0.21991971, -0.03997634, 0.2888021, 0.5119256, -0.0182172, -0.4097011, 0.0650889) * g_9(pixel.xy);
  result += mat4x4<f32>(-0.15852791, -0.008691007, 0.027062492, -0.021986786, -0.121833265, -0.032671, -0.109205626, -0.026337394, 0.14460158, 0.07089407, -0.16064858, -0.06329875, 0.16661745, 0.10511746, 0.069920555, 0.12870672) * g_10(pixel.xy);
  result += mat4x4<f32>(0.19965324, 0.2015641, 0.05944082, 0.076328635, -0.042850234, 0.100452326, -0.04502685, 0.15974133, 0.0432549, 0.16362476, 0.05391766, -0.20400761, 0.09843942, -0.114038505, -0.044906083, -0.084004216) * g_11(pixel.xy);
  result += mat4x4<f32>(0.0014203127, 0.072613284, 0.18832877, -0.1519538, 0.17094725, 0.023459934, -0.08103932, -0.18414992, 0.050177015, -0.06879559, -0.26551455, -0.20276074, -0.4067025, 0.06735142, -0.02654105, 0.108480014) * g_12(pixel.xy);
  result += mat4x4<f32>(0.11884444, -0.20847607, -0.39635405, -0.027750423, -0.17062746, -0.11462501, 0.03766563, 0.22330031, 0.08840299, -0.02593574, 0.30610138, 0.017082121, -0.073421106, -0.03310496, -0.022566084, 0.12895042) * g_13(pixel.xy);
  result += mat4x4<f32>(0.13146816, 0.03408076, 0.068583496, 0.040359933, 0.058004156, -0.18711473, -0.012030321, 0.054367706, -0.21604696, 0.029737698, -0.18165046, -0.032207813, 0.19296853, -0.06486989, 0.1930012, -0.26257816) * g_14(pixel.xy);
  result += mat4x4<f32>(-0.0003308146, -0.1018507, 0.10688593, -0.086943775, -0.06309165, 0.11305288, 0.40455562, 0.07220006, 0.17344922, 0.21377957, -0.106255956, -0.08522667, -0.081184156, -0.17647071, -0.056697357, -0.030556178) * g_15(pixel.xy);
  result += mat4x4<f32>(0.15709074, 0.13488838, -0.108037606, -0.049638074, 0.16628793, 0.22323613, 0.18880367, 0.110625856, -0.17176348, 0.0442544, -0.24436983, 0.20503913, -0.015147643, -0.087451935, -0.14789064, 0.015226477) * g_16(pixel.xy);
  result += mat4x4<f32>(-0.029338064, -0.058311418, 0.023408614, 0.23031227, 0.10385574, 0.027987834, 0.09013144, 0.28468946, 0.0031934478, -0.19209816, 0.034222614, -0.28228182, 0.16321793, -0.18102172, 0.018543411, -0.16518813) * g_17(pixel.xy);
  result += mat4x4<f32>(0.04458001, -0.13962908, -0.13753751, 0.08451667, -0.25742018, 0.21066302, 0.10019894, -0.15584072, -0.01348787, 0.0033656303, 0.04586261, 0.021628007, -0.036585297, 0.26717108, -0.15728012, 0.103385106) * g_18(pixel.xy);
  result += mat4x4<f32>(0.0044587324, -0.19981517, -0.22820733, -0.022784092, 0.05868396, 0.07768994, -0.03181301, 0.054078016, 0.14406122, 0.2340996, -0.2972908, -0.16759236, -0.27278668, 0.019484127, 0.032888357, -0.17713867) * g_19(pixel.xy);
  result += mat4x4<f32>(0.05132516, 0.002060976, -0.11749896, 0.005121125, -0.07908039, -0.07778476, -0.19288218, -0.113970414, -0.09135908, -0.009404741, -0.15993251, 0.15056853, -0.06927528, -0.03733133, -0.24843821, 0.15608594) * g_20(pixel.xy);
  result += mat4x4<f32>(0.11080882, 0.032175705, -0.04760623, -0.14559296, 0.03192353, 0.101781964, 0.12357085, -0.025075397, 0.12224393, 0.00500326, 0.05720067, -0.087521225, -0.032957695, 0.027808554, 0.13563655, -0.2128763) * g_21(pixel.xy);
  result += mat4x4<f32>(-0.12507181, -0.12221015, -0.024783826, -0.1233778, 0.15383248, 0.19294359, -0.10415819, -0.20353647, 0.119121395, 0.13289572, 0.030740019, -0.015015452, -0.07683901, 0.10667189, -0.041018065, 0.22529341) * g_22(pixel.xy);
  result += mat4x4<f32>(0.1489391, -0.059898213, -0.046357498, 0.022468781, -0.24517635, -0.13018654, 0.2039975, 0.21484332, 0.028208151, -0.20970574, -0.10110034, 0.12773193, 0.07744774, -0.118900456, -0.007357081, 0.018511213) * g_23(pixel.xy);
  result += mat4x4<f32>(0.10130345, 0.2007317, -0.02755449, -0.05844333, -0.09601821, -0.006501421, -0.05792646, -0.02546418, -0.12300777, -0.044581413, 0.08369023, 0.013736111, -0.117478505, -0.03133182, -0.07848863, 0.114977054) * g_24(pixel.xy);
  result += mat4x4<f32>(0.06206287, -0.13663986, -0.2633325, -0.06723374, -0.0368251, 0.10849614, -0.12641706, -0.101314045, 0.1668918, -0.1774165, -0.07337273, -0.14278898, 0.09879653, 0.11570133, 0.049410257, -0.28515536) * g_25(pixel.xy);
  result += mat4x4<f32>(0.075859904, 0.46286193, -0.0065651555, 0.019701669, 0.097126104, -0.21981543, 0.11008625, -0.24778378, 0.22997652, -0.08742972, 0.026607014, 0.0001746832, -0.183374, 0.35722917, -0.054048, -0.12029537) * g_26(pixel.xy);
  result += mat4x4<f32>(0.29831323, -0.24104582, -0.11618897, 0.10247404, 0.0058463574, 0.22800444, -0.069028065, 0.22541459, -0.18233538, -0.32635194, -0.13827065, -0.21868181, 0.25495726, -0.30253872, 0.055982653, 0.07193308) * g_27(pixel.xy);
  result += vec4f(0.13571368, -0.145653, 0.09633155, 0.022155894);
  textureStore(conv2d_21_tf1_tex, pixel.xy, result);
}
