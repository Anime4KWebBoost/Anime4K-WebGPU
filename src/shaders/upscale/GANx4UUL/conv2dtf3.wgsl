// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x3x3x3
// Name: conv2dtf3
// Inputs: ['MAIN']
// Output: conv2d_tf3
@group(0) @binding(0) var MAIN_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_tf3_tex: texture_storage_2d<rgba16float, write>;

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return textureLoad(MAIN_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0);
}

@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_tf3_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.32331285, -0.030736726, 0.0042050784, 0.010926396, -0.23282023, -0.08763307, 0.37141582, 0.19859134, -0.1666083, -0.04315098, 0.07296003, 0.2861034, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, -1);
  result += mat4x4<f32>(-0.21563695, 0.14021617, 0.051348813, 0.4983129, -0.34992227, 0.18443501, -0.24389337, 0.06418108, -0.20921838, 0.18868116, -0.2684946, 0.55774176, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, 0);
  result += mat4x4<f32>(-0.024550043, -0.10363326, 0.1043099, -0.14632092, 0.17236416, -0.16043803, 0.38332343, 0.024406519, -0.03126577, 0.20712042, -0.037903644, -0.13856749, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, 1);
  result += mat4x4<f32>(-0.07120149, -0.33019403, 0.33729857, -0.4915631, 0.4082891, -0.15672709, 0.0030756786, -0.43779042, 0.097300366, 0.002372967, 0.368441, 0.17531842, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, -1);
  result += mat4x4<f32>(-0.24669729, 0.35728258, 0.26481852, -0.32095483, -0.031781197, 0.5217997, -0.4768402, -0.3411008, -0.093396775, 0.31235504, 0.17860144, -0.09074654, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, 0);
  result += mat4x4<f32>(0.34211978, -0.067475505, -0.11130485, -0.027638488, 0.037768893, -0.1094967, -0.07283058, 0.5916835, 0.28903356, 0.0857213, -0.0060110637, -0.04816759, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, 1);
  result += mat4x4<f32>(0.3059696, 0.14136712, -0.32771704, -0.17229499, -0.14343582, 0.3470735, 0.3778098, -0.34243533, 0.2264067, -0.24548753, 0.38490316, 0.058428574, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, -1);
  result += mat4x4<f32>(0.1412657, 0.33788598, -0.2157324, 0.040746648, -0.21837659, 0.33166492, 0.12508798, 0.4859738, -0.16807358, -0.22612841, -0.051258437, -0.24188246, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, 0);
  result += mat4x4<f32>(0.04993394, -0.33221748, -0.044392366, -0.3946246, -0.30577514, 0.13761942, -0.022273945, 0.21460211, 0.19924824, 0.043031078, -0.22369152, -0.13072547, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, 1);
  result += vec4f(-0.0057866867, -0.031637643, 0.0723021, 0.04260856);
  textureStore(conv2d_tf3_tex, pixel.xy, result);
}
