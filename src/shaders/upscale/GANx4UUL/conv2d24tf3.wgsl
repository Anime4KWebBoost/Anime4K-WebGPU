// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x120
// Name: conv2d24tf3
// Inputs: ['conv2d_21_tf', 'conv2d_21_tf1', 'conv2d_21_tf2', 'conv2d_21_tf3', 'conv2d_21_tf4', 'conv2d_21_tf5', 'conv2d_23_tf', 'conv2d_1_tf', 'conv2d_4_tf', 'conv2d_7_tf', 'conv2d_10_tf', 'conv2d_13_tf', 'conv2d_16_tf', 'conv2d_19_tf', 'conv2d_22_tf']
// Output: conv2d_24_tf3
@group(0) @binding(0) var conv2d_21_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_21_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_21_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_21_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_21_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_21_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_23_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_4_tf_tex: texture_2d<f32>;
@group(0) @binding(9) var conv2d_7_tf_tex: texture_2d<f32>;
@group(0) @binding(10) var conv2d_10_tf_tex: texture_2d<f32>;
@group(0) @binding(11) var conv2d_13_tf_tex: texture_2d<f32>;
@group(0) @binding(12) var conv2d_16_tf_tex: texture_2d<f32>;
@group(0) @binding(13) var conv2d_19_tf_tex: texture_2d<f32>;
@group(0) @binding(14) var conv2d_22_tf_tex: texture_2d<f32>;
@group(0) @binding(15) var conv2d_24_tf3_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_21_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_21_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_21_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_21_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_21_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_21_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_21_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_21_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_21_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_21_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_21_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_21_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_23_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_23_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_16(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_17(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_18(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_19(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_20(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_21(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_22(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_23(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_24(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}

fn g_25(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}

fn g_26(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_19_tf_tex, pos, 0), 0.0);
}

fn g_27(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_19_tf_tex, pos, 0), 0.0);
}

fn g_28(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_22_tf_tex, pos, 0), 0.0);
}

fn g_29(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_22_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_24_tf3_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.011141579, 0.09674723, -0.13645004, -0.10970149, -0.04369547, 0.08311355, 0.021767681, -0.08375845, 0.022200847, 0.05360177, 0.16593163, -0.15328388, 0.08149341, -0.09137854, -0.040580057, 0.08350056) * g_0(pixel.xy);
  result += mat4x4<f32>(-0.0026481631, -0.004045956, 0.012659179, 0.09567999, -0.04221551, 0.10712957, -0.056656756, -0.27661186, -0.053574864, -0.089751564, -0.17745095, 0.16676143, 0.34287563, -0.13643502, 0.33259082, 0.27071705) * g_1(pixel.xy);
  result += mat4x4<f32>(0.18119478, -0.11287872, 0.24201767, -0.009600413, 0.048217695, 0.062931724, -0.06455807, 0.0013528515, 0.1764802, -0.08022894, 0.01977552, 0.014862132, -0.119611226, 0.06065237, -0.2003538, 0.057908155) * g_2(pixel.xy);
  result += mat4x4<f32>(0.10390714, 0.03061146, 0.07345203, 0.020925567, -0.03771494, -0.055771235, -0.10182023, -0.0453298, 0.030018989, 0.020321988, -0.13780262, -0.10419699, -0.1531079, 0.08695891, -0.10523552, 0.0031262166) * g_3(pixel.xy);
  result += mat4x4<f32>(0.013357037, 0.11706443, 0.02651922, 0.12551948, -0.03562916, 0.07041351, -0.22412951, 0.19341606, -0.06120095, 0.1594309, -0.25910634, 0.03911061, -0.030200286, 0.039532397, -0.04693854, 0.107756086) * g_4(pixel.xy);
  result += mat4x4<f32>(0.26856127, -0.062083863, 0.26156938, -0.06557537, -0.06786968, 0.061135814, -0.18566874, -0.11154961, 0.06399305, 0.068129785, -0.0010524218, 0.039409623, 0.0527229, 0.16223872, 0.11896118, 0.13470948) * g_5(pixel.xy);
  result += mat4x4<f32>(-0.09019031, -0.11750688, 0.08919765, 0.06305572, -0.110997446, -0.09387827, -0.024580022, -0.1923812, -0.011291289, -0.06320932, 0.15289676, -0.14364418, 0.041966986, 0.25329712, -0.19619554, 0.035929594) * g_6(pixel.xy);
  result += mat4x4<f32>(-0.06743388, -0.08509898, -0.07433386, -0.025805349, 0.01812382, -0.02492702, -0.2482932, 0.28510815, 0.119341426, 0.2147701, 0.06835619, -0.07081952, -0.038794495, 0.10975482, -0.2239901, -0.124213785) * g_7(pixel.xy);
  result += mat4x4<f32>(-0.026220966, 0.14319815, -0.1700538, -0.0335693, 0.07769912, 0.12722708, -0.26494396, -0.10431099, -0.08059116, 0.12723474, -0.15197968, 0.0060984325, -0.013070423, -0.25334156, 0.2920123, 0.110061795) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.25060546, 0.057933453, 0.041256662, -0.11589921, 0.3209416, 0.12978804, -0.017460592, 0.19088507, 0.08740428, 0.038495142, 0.26864913, -0.08148351, 0.05588537, -0.027696, 0.47028908, -0.08718974) * g_9(pixel.xy);
  result += mat4x4<f32>(-0.028379083, -0.16510524, -0.0720884, 0.024243379, 0.030889094, -0.09380263, 0.10451546, -0.21832433, 0.20901899, -0.055639133, -0.051839713, 0.033683445, -0.029481068, 0.048284974, -0.08840896, 0.17702715) * g_10(pixel.xy);
  result += mat4x4<f32>(-0.13655269, -0.009485257, -0.27257246, -0.027732212, 0.11677922, -0.08578314, 0.1272782, -0.033684663, -0.070519574, 0.01601166, 0.11166362, -0.2742834, 0.17340335, -0.19997278, -0.040465057, -0.2970155) * g_11(pixel.xy);
  result += mat4x4<f32>(-0.20593609, 0.07950713, 0.05642528, 0.19129497, 0.3180778, -0.07194427, -0.19385284, -0.09050803, 0.23494293, 0.02127147, -0.014160815, 0.16873649, -0.045696944, -0.025910616, 0.10135493, -0.07330387) * g_12(pixel.xy);
  result += mat4x4<f32>(0.11845643, -0.06579577, -0.10600301, 0.12729774, -0.30510858, 0.0974965, 0.114875704, 0.06391382, 0.14807853, 0.22989006, -0.072495855, 0.1800837, 0.028062822, 0.044472497, 0.27929953, -0.037439365) * g_13(pixel.xy);
  result += mat4x4<f32>(-0.29070517, 0.2584094, -0.12230044, 0.29064023, -0.23902515, 0.29584745, 0.20774792, 0.41733524, 0.06608569, -0.04484478, 0.15128273, -0.3068231, 0.22654179, -0.080022156, -0.48213294, -0.037669115) * g_14(pixel.xy);
  result += mat4x4<f32>(0.17929457, -0.073897004, 0.033858683, -0.24681814, 0.38705662, -0.31330046, -0.3057931, -0.30628645, 0.06434401, -0.040364057, -0.30331135, 0.09151124, -0.15681383, 0.29307282, 0.28045842, -0.06732098) * g_15(pixel.xy);
  result += mat4x4<f32>(0.024120888, 0.06291463, -0.39767843, -0.199806, -0.18294619, 0.44507617, -0.20719141, 0.022910457, -0.04779181, 0.07508541, 0.12258552, 0.019429758, -0.10943762, -0.20337181, 0.072106324, -0.18230085) * g_16(pixel.xy);
  result += mat4x4<f32>(-0.010640077, -0.15392596, 0.042594627, -0.0009270454, 0.3621191, -0.28109482, 0.080440365, -0.2073678, 0.052669737, 0.01759761, -0.0909907, -0.0051524066, 0.025632787, 0.15993036, -0.04525641, 0.05836689) * g_17(pixel.xy);
  result += mat4x4<f32>(0.20725772, 0.05976848, 0.15562478, -0.22970834, -0.006273422, -0.0024398018, -0.15024984, -0.06983079, 0.037917525, -0.06959094, -0.30672732, 0.11463107, -0.103878215, 0.16795799, 0.123742215, -0.076316774) * g_18(pixel.xy);
  result += mat4x4<f32>(-0.041884482, -0.048946526, -0.040261485, 0.145805, 0.18649343, -0.0044576614, -0.2316234, 0.08005378, 0.13540603, -0.13486005, -0.048867103, -0.039551396, 0.015187719, -0.113004565, -0.09270747, 0.053628337) * g_19(pixel.xy);
  result += mat4x4<f32>(0.026232086, -0.05916773, 0.09088294, 0.059865057, -0.08295995, 0.04218031, 0.0016741708, 0.08783662, 0.12226684, -0.0601888, 0.14152455, -0.15758237, -0.118071996, -0.053882107, 0.22713134, -0.08549201) * g_20(pixel.xy);
  result += mat4x4<f32>(0.030266033, 0.08861499, 0.04543061, -0.09845329, 0.29042727, -0.1387298, -0.27544942, 0.06959186, -0.06818984, -0.07793028, -0.26279172, 0.051999256, 0.13853306, -0.028943995, -0.1616878, 0.0055545145) * g_21(pixel.xy);
  result += mat4x4<f32>(0.06571001, -0.15409341, -0.10983791, -0.10024373, 0.06786836, -0.034203686, 0.06702562, -0.13785091, 0.014078426, -0.118333764, 0.10679032, -0.11793583, -0.17936374, 0.08035579, -0.065410405, 0.012682481) * g_22(pixel.xy);
  result += mat4x4<f32>(-0.08627442, 0.09910777, 0.06451081, -0.032909464, 0.016304161, 0.11485424, 0.075068, 0.17560685, -0.21859545, 0.03553843, -0.029545823, 0.0020583326, -0.09749895, 0.10549555, -0.13807511, 0.04073702) * g_23(pixel.xy);
  result += mat4x4<f32>(0.013445668, -0.106096625, -0.14386144, -0.047453087, 0.030295242, -0.07128061, 0.18820919, -0.14116964, -0.08358127, 0.017694646, -0.22504877, -0.0870977, 0.159292, 0.1511803, 0.13363734, 0.059592243) * g_24(pixel.xy);
  result += mat4x4<f32>(0.09585648, 0.13820451, -0.025589576, 0.14250357, -0.098605, -0.033331417, -0.26585752, 0.046970017, 0.0064765653, 0.15291844, 0.2051226, -0.033412863, -0.15486592, -0.10399778, -0.11634391, 0.00032476272) * g_25(pixel.xy);
  result += mat4x4<f32>(0.09576212, -0.052482244, -0.11748363, -0.022807717, 0.18996853, -0.119998, -0.11650178, 0.15346055, -0.056865185, 0.17039599, 0.019453784, -0.15516305, -0.07541472, 0.05255179, -0.18442616, 0.13752738) * g_26(pixel.xy);
  result += mat4x4<f32>(0.08866666, -0.037314344, -0.08462723, 0.01123993, -0.048002165, 0.08966719, -0.008348263, 0.022855654, -0.13039067, -0.026170973, 0.22115219, 0.061224397, 0.16689171, 0.06845198, -0.08873581, -0.050191987) * g_27(pixel.xy);
  result += mat4x4<f32>(-0.08112671, -0.1593253, 0.19252764, 0.060990997, 0.29255992, 0.2258008, 0.05192984, -0.22563158, -0.005943522, 0.092420675, 0.12934043, 0.1422232, 0.0047882204, 0.034547567, -0.03979875, -0.13211358) * g_28(pixel.xy);
  result += mat4x4<f32>(0.19852357, -0.09415307, 0.18439335, 0.09917704, -0.0036918402, -0.11341272, 0.14594431, 0.036229003, -0.3779797, -0.1963225, -0.05158393, -0.286296, 0.09826625, -0.11089739, 0.08578653, 0.032530606) * g_29(pixel.xy);
  result += vec4f(0.044129565, -0.091767386, -0.075459845, 0.066399455);
  textureStore(conv2d_24_tf3_tex, pixel.xy, result);
}
