// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x128
// Name: conv0ups
// Inputs: ['conv2d_24_tf', 'conv2d_24_tf1', 'conv2d_24_tf2', 'conv2d_24_tf3', 'conv2d_24_tf4', 'conv2d_24_tf5', 'conv2d_23_tf', 'conv2d_1_tf', 'conv2d_4_tf', 'conv2d_7_tf', 'conv2d_10_tf', 'conv2d_13_tf', 'conv2d_16_tf', 'conv2d_19_tf', 'conv2d_22_tf', 'conv2d_25_tf']
// Output: conv0ups
@group(0) @binding(0) var conv2d_24_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_24_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_24_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_24_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_24_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_24_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_23_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_4_tf_tex: texture_2d<f32>;
@group(0) @binding(9) var conv2d_7_tf_tex: texture_2d<f32>;
@group(0) @binding(10) var conv2d_10_tf_tex: texture_2d<f32>;
@group(0) @binding(11) var conv2d_13_tf_tex: texture_2d<f32>;
@group(0) @binding(12) var conv2d_16_tf_tex: texture_2d<f32>;
@group(0) @binding(13) var conv2d_19_tf_tex: texture_2d<f32>;
@group(0) @binding(14) var conv2d_22_tf_tex: texture_2d<f32>;
@group(0) @binding(15) var conv2d_25_tf_tex: texture_2d<f32>;
@group(0) @binding(16) var conv0ups_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_24_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_24_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_24_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_24_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_24_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_24_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_24_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_24_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_24_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_24_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_24_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_24_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_23_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_23_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_16(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_17(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_18(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_19(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_20(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_21(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_22(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_23(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_24(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}

fn g_25(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}

fn g_26(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_19_tf_tex, pos, 0), 0.0);
}

fn g_27(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_19_tf_tex, pos, 0), 0.0);
}

fn g_28(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_22_tf_tex, pos, 0), 0.0);
}

fn g_29(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_22_tf_tex, pos, 0), 0.0);
}

fn g_30(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_25_tf_tex, pos, 0), 0.0);
}

fn g_31(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_25_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv0ups_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.10379351, 0.18366472, -0.014283382, 0.037760813, -0.19799379, -0.0018981653, -0.059591044, 0.13041328, 0.022382444, 0.08731348, 0.059271958, 0.03694388, 0.038578022, -0.15092373, -0.2403975, 0.15757182) * g_0(pixel.xy);
  result += mat4x4<f32>(-0.13118985, 0.09737578, 0.04058633, 0.15121624, -0.050244283, -0.058344584, 0.056500804, -0.025770865, -0.005228628, -0.12770256, 0.21192689, -0.12730236, 0.07307438, 0.089528576, -0.14202845, 0.16739286) * g_1(pixel.xy);
  result += mat4x4<f32>(-0.09291285, 0.049908094, -0.08641805, -0.0994023, -0.13827445, 0.06629267, -0.012042626, 0.14321536, -0.20399944, -0.09279058, 0.08082924, 0.22459853, 0.101080395, -0.03917803, -0.0055141104, -0.056043904) * g_2(pixel.xy);
  result += mat4x4<f32>(0.09961629, 0.018202445, 0.070070334, -0.08061635, -0.025480092, 0.07361016, -0.09318115, 0.0467741, -0.08614961, -0.2969266, -0.044264156, -0.034117006, 0.0013521328, 0.14935707, -0.11521471, -0.18149963) * g_3(pixel.xy);
  result += mat4x4<f32>(-0.02796338, 0.07482737, 0.077914014, 0.008720861, 0.113995664, -0.16486213, 0.02044073, -0.26344302, -0.022359366, 0.10770358, -0.28904364, 0.1708076, 0.048541255, 0.056811094, 0.009464462, -0.15483724) * g_4(pixel.xy);
  result += mat4x4<f32>(0.21674214, -0.056123927, 0.026049627, -0.24166808, 0.106360875, 0.13033913, 0.06690134, -0.102156475, -0.2146559, 0.043410923, 0.052054137, 0.07441795, -0.19243327, 0.080124944, 0.050383605, -0.031940952) * g_5(pixel.xy);
  result += mat4x4<f32>(0.15253735, -0.14331368, 0.11689908, 0.19804358, 0.09282296, 0.13205051, 0.01873634, -0.16300555, 0.0960226, -0.16211699, 0.108940765, -0.0054207807, -0.10787891, 0.12311903, 0.15282704, 0.02691786) * g_6(pixel.xy);
  result += mat4x4<f32>(-0.060586907, -0.08894053, -0.11878285, 0.16953108, -0.012478705, -0.053086035, -0.17722923, 0.08350076, 0.07320384, 0.058841225, 0.06174459, 0.17676029, 0.020537157, -0.08562913, 0.19099198, -0.17127311) * g_7(pixel.xy);
  result += mat4x4<f32>(0.16016012, 0.013196712, 0.014020182, -0.04458684, 0.09496452, -0.013175905, 0.117158264, -0.06100676, 0.035590272, 0.23623185, 0.04740066, -0.16814622, -0.04528422, 0.054107446, -0.007874635, -0.05462888) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.064958826, 0.062455025, -0.060231823, 0.04726689, -0.08692075, -0.13570185, 0.027609564, 0.058563568, -0.08078551, 0.026376098, -0.092572846, 0.1144904, 0.16768721, -0.055053793, 0.08884567, -0.0039492855) * g_9(pixel.xy);
  result += mat4x4<f32>(0.08873042, 0.034452096, -0.08266588, -0.064171374, -0.014811351, -0.031750735, 0.039068844, 0.15075831, 0.1469489, -0.15084769, 0.045364805, -0.110339, 0.06251466, 0.032046065, 0.057865307, 0.08985475) * g_10(pixel.xy);
  result += mat4x4<f32>(-0.07245567, 0.051501337, 0.0042395876, 0.033770293, -0.031408194, -0.05472587, 0.09442824, -0.11996058, 0.24455559, -0.018954042, -0.16885613, -0.01632158, -0.0013987822, 0.06844135, -0.0111589795, 0.05573825) * g_11(pixel.xy);
  result += mat4x4<f32>(0.004076213, 0.01192855, -0.015088375, -0.08436373, 0.021499854, 0.11274089, -0.10327082, 0.059402663, -0.07375569, 0.07293562, 0.04328945, 0.07769358, -0.00626241, 0.00084008416, -0.085746236, 0.023070317) * g_12(pixel.xy);
  result += mat4x4<f32>(-0.09255245, 0.085858874, 0.05233346, 0.06957257, 0.0484713, -0.14642376, 0.12319201, -0.19496371, -0.08323385, -0.06796162, 0.10835355, 0.0060179066, -0.18043493, 0.06015162, 0.10672543, -0.005817063) * g_13(pixel.xy);
  result += mat4x4<f32>(0.3232499, -0.1989966, -0.049172856, 0.076056555, 0.33830073, -0.21595804, -0.10094274, -0.004869525, 0.10147264, -0.04128893, 0.10962383, -0.2672602, -0.0242305, 0.08097903, -0.19162776, -0.10605484) * g_14(pixel.xy);
  result += mat4x4<f32>(-0.22968711, 0.02579494, 0.11823294, 0.059410084, -0.3657473, 0.035860255, 0.24233946, 0.015638743, -0.30643675, -0.05283249, 0.017403604, 0.29657462, 0.056514356, -0.10457145, 0.13097277, -0.01019346) * g_15(pixel.xy);
  result += mat4x4<f32>(0.13813877, -0.20461698, -0.23769434, -0.044042442, -0.0980774, -0.16314495, -0.18455383, -0.22081804, 0.08652147, -0.005959925, 0.08006801, -0.056305975, 0.27703115, -0.19184026, -0.20616496, 0.05559955) * g_16(pixel.xy);
  result += mat4x4<f32>(-0.051795844, 0.00823916, -0.029457001, 0.11031028, 0.3818378, -0.10899863, -0.0840712, 0.2996256, -0.11754779, -0.07541523, 0.013602051, -0.056690898, -0.10979357, 0.079053424, 0.08714793, -0.061318632) * g_17(pixel.xy);
  result += mat4x4<f32>(-0.11119865, -0.20492773, 0.054974385, -0.07364314, -0.1528288, 0.028022958, -0.00607566, 0.086783506, 0.04634063, -0.032565832, -0.045977455, 0.101378955, -0.09641133, 0.0043743537, 0.08885213, 0.33897394) * g_18(pixel.xy);
  result += mat4x4<f32>(-0.04481023, 0.097230285, 0.10430489, 0.10649403, 0.21939069, -0.1500718, 0.05880893, -0.10914413, -0.044258267, 0.05826005, 0.066263, -0.06499524, 0.07086308, -0.044233378, 0.021092411, -0.24664259) * g_19(pixel.xy);
  result += mat4x4<f32>(0.005507752, -0.012920197, -0.073212765, -0.02703035, 0.13821156, 0.08859407, -0.1497461, -0.021670796, 0.10447694, 0.021847986, 0.040287685, 0.08332262, -0.113355346, -0.05927782, 0.0033077523, 0.016749239) * g_20(pixel.xy);
  result += mat4x4<f32>(-0.13260053, 0.08340849, -0.057220932, 0.050883524, 0.046069406, 0.02517257, 0.07518926, -0.1041817, 0.04734083, -0.13760519, -0.06936529, -0.1629241, 0.06663661, 0.051238295, 0.0026632578, 0.026618795) * g_21(pixel.xy);
  result += mat4x4<f32>(0.043251, -0.00019805098, -0.0067067496, -0.008556112, -0.07886367, 0.047598533, 0.12148756, -0.21429478, 0.010308021, 0.018492302, -0.089294665, 0.026199404, -0.07520715, 0.0356786, 0.015251901, 0.022741525) * g_22(pixel.xy);
  result += mat4x4<f32>(0.11324991, -0.048524857, 0.04142719, -0.023030233, 0.014004447, -0.13249397, -0.07014101, 0.07292874, 0.074551955, -0.13850869, -0.0725583, -0.031064156, 0.10623482, -0.013893804, -0.041833505, 0.0536592) * g_23(pixel.xy);
  result += mat4x4<f32>(0.024236089, 0.021549981, -0.020722905, 0.1031231, -0.06631272, 0.021624254, 0.0040281564, 0.121802464, 0.07268475, -0.13640176, -0.014991021, -0.03396125, 0.012678531, -0.030477472, 0.007851547, 0.032361716) * g_24(pixel.xy);
  result += mat4x4<f32>(-0.10445165, -0.054380383, 0.116709106, -0.120440856, 0.065207876, -0.037177384, -0.0010802799, -0.09903962, -0.014772104, -0.015991863, -0.011176849, 0.08159087, -0.04181037, -0.045783844, 0.05329981, -0.017217785) * g_25(pixel.xy);
  result += mat4x4<f32>(0.07567822, 0.047062293, 0.03619995, -0.04219767, 0.10531482, -0.08139784, 0.04502375, 0.01837867, 0.039460644, -0.034145698, -0.14567985, 0.10103348, 0.051675834, -0.068317145, 0.0077824956, -0.09261776) * g_26(pixel.xy);
  result += mat4x4<f32>(-0.030655192, -0.11313884, -0.12541282, -0.0032168734, -0.005504764, 0.004722538, 0.09903894, -0.10796175, -0.0062598013, 0.06569805, 0.070193775, -0.039988127, 0.09546041, -0.04402558, -0.037034012, 0.014417219) * g_27(pixel.xy);
  result += mat4x4<f32>(-0.17705046, 0.088174336, -0.01729608, 0.19739969, 0.028319644, -0.021543927, -0.031175073, 0.1129947, 0.03287802, 0.10785583, -0.06357378, 0.005723139, -0.04233204, 0.15263905, 0.046576403, 0.038148563) * g_28(pixel.xy);
  result += mat4x4<f32>(0.1636625, -0.100117125, -0.070475556, -0.12688895, 0.05384177, -0.12399162, -0.10938886, -0.003527758, -0.025538636, 0.083223015, -0.07737418, -0.030358527, 0.02227781, -0.114781424, -0.016678223, 0.034633335) * g_29(pixel.xy);
  result += mat4x4<f32>(0.09671474, -0.015161189, -0.032330167, -0.027161723, -0.016465846, 0.033814523, -0.22615166, 0.047766432, -0.028019844, -0.003297678, 0.035333525, 0.0144364005, -0.25640464, 0.23690245, 0.1899895, 0.11149848) * g_30(pixel.xy);
  result += mat4x4<f32>(-0.012340286, 0.029724559, 0.0727296, -0.03882306, -0.0059372387, 0.010122618, 0.0059355027, 0.034666758, -0.031731993, 0.03645842, -0.23056214, -0.050197847, 0.1743216, -0.10116961, -0.28167897, -0.05476145) * g_31(pixel.xy);
  result += vec4f(0.056676798, -0.061795954, 0.009313649, -0.0061434037);
  textureStore(conv0ups_tex, pixel.xy, result);
}
