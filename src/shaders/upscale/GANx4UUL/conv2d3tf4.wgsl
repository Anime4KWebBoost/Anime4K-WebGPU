// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x64
// Name: conv2d3tf4
// Inputs: ['conv2d_tf', 'conv2d_tf1', 'conv2d_tf2', 'conv2d_tf3', 'conv2d_tf4', 'conv2d_tf5', 'conv2d_2_tf', 'conv2d_1_tf']
// Output: conv2d_3_tf4
@group(0) @binding(0) var conv2d_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_2_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_3_tf4_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_2_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_2_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_3_tf4_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(0.113150194, -0.012228015, -0.10810589, 0.18282048, -0.14255662, 0.37686804, -0.34455574, -0.17653705, -0.10299696, 0.17156567, 0.06475307, 0.21704634, 0.05987743, -0.20447443, -0.22365163, 0.26045614) * g_0(pixel.xy);
  result += mat4x4<f32>(0.25273082, 0.28410602, 0.13341063, 0.15524255, -0.038504723, -0.2987473, 0.5113095, -0.041018266, 0.15720472, -0.07154719, -0.104476094, -0.36850104, -0.09235334, -0.02460906, 0.1918179, 0.108431995) * g_1(pixel.xy);
  result += mat4x4<f32>(-0.16259582, -0.14792964, 0.01875614, 0.19722176, 0.30285388, 0.17894153, 0.02760128, -0.1352214, 0.28634933, -0.0074598296, -0.09348916, 0.12859564, -0.08578008, -0.30871972, -0.19463369, 0.029592479) * g_2(pixel.xy);
  result += mat4x4<f32>(0.41718173, -0.08798418, -0.12914781, -0.016728701, -0.004022609, -0.36890173, 0.009880859, -0.1725598, -0.1853788, 0.06624611, 0.010526983, 0.11285315, 0.22359152, 0.04253032, -0.28357792, -0.106521696) * g_3(pixel.xy);
  result += mat4x4<f32>(0.23125984, 0.063943766, -0.1724623, -0.17019297, 0.08842359, 0.18506196, 0.20219392, -0.07514321, -0.152088, 0.40809697, 0.22866395, 0.29942676, -0.10514515, 0.14835912, 0.255409, 0.005298396) * g_4(pixel.xy);
  result += mat4x4<f32>(0.118000366, 0.040876955, -0.15260358, -0.34197953, 0.16392517, 0.037801206, 0.26511702, -0.16595386, -0.3013676, 0.032535754, 0.2059592, 0.20713131, -0.074489266, -0.0827021, -0.0930588, 0.12812042) * g_5(pixel.xy);
  result += mat4x4<f32>(0.12129869, -0.19799119, -0.42776105, -0.15996172, 0.19189952, -0.48698276, 0.14109898, 0.033108126, -0.06918676, -0.28060475, 0.067065634, -0.117751226, 0.07274701, 0.016352981, 0.11877358, -0.30382705) * g_6(pixel.xy);
  result += mat4x4<f32>(-0.037769582, -0.0039873547, -0.27957156, -0.027259788, -0.005021477, 0.20690842, -0.43643278, 0.12125521, 0.095314205, 0.13150905, -0.1545535, 0.5004901, 0.078181274, 0.1480264, -0.037564073, -0.07784829) * g_7(pixel.xy);
  result += mat4x4<f32>(0.03755771, 0.22955105, -0.03231175, -0.16500925, -0.2564081, -0.13914458, -0.031046085, 0.10951839, -0.14864902, -0.068928115, 0.0909355, -0.14147623, -0.1901003, 0.35303396, 0.07698175, -0.09974956) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.050013836, 0.21334587, 0.107435666, 0.22424911, -0.20007136, 0.5500792, -0.40816012, 0.25101343, 0.19421935, 0.035117567, 0.20783037, 0.17410451, -0.28405052, 0.06190316, 0.38027903, 0.051337413) * g_9(pixel.xy);
  result += mat4x4<f32>(-0.46978363, -0.11272793, 0.12973092, 0.021777695, -0.020381203, -0.1912334, -0.16367903, 0.32833096, 0.08339247, 0.008160841, 0.37062842, -0.014087529, 0.094892465, -0.012870317, -0.010378546, 0.015417017) * g_10(pixel.xy);
  result += mat4x4<f32>(-0.030511223, -0.08355093, 0.08717814, 0.32149768, 0.19554101, 0.2929336, -0.07563172, 0.2604295, 0.2978335, -0.20227137, 0.1991364, 0.04514103, 0.12003651, -0.12325602, 0.10554548, -0.012967588) * g_11(pixel.xy);
  result += mat4x4<f32>(0.20080462, -0.0441012, -0.12478753, 0.072197564, -0.11796578, 0.1803613, 0.16319636, 0.05116462, -0.025635032, 0.18309167, 0.016345788, 0.19902118, -0.27134508, -0.24213642, -0.12992004, 0.42813647) * g_12(pixel.xy);
  result += mat4x4<f32>(0.11977094, 0.010334066, 0.100837916, 0.1320789, 0.1863875, -0.31015033, -0.0759456, 0.033703748, 0.11986626, -0.28383213, 0.26054385, 0.09489738, -0.0829573, 0.05104106, -0.103039704, -0.3475618) * g_13(pixel.xy);
  result += mat4x4<f32>(-0.3418708, 0.095728405, -0.046365432, -0.15324275, -0.15171754, 0.12827595, 0.061078403, 0.12247848, -0.32564154, 0.27075362, -0.03819952, -0.41804206, -0.22586496, -0.06467655, 0.055885177, 0.104513146) * g_14(pixel.xy);
  result += mat4x4<f32>(0.025562786, -0.12636441, -0.12522306, -0.1816289, -0.21966882, 0.075359344, 0.095027685, -0.27646592, 0.12653323, -0.08085943, 0.09971742, 0.24018568, 0.053527232, -0.0054027676, 0.07405578, -0.14746837) * g_15(pixel.xy);
  result += vec4f(0.0619906, -0.042231698, -0.01461747, 0.016205417);
  textureStore(conv2d_3_tf4_tex, pixel.xy, result);
}
