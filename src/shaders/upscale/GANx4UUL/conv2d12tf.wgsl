// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x88
// Name: conv2d12tf
// Inputs: ['conv2d_9_tf', 'conv2d_9_tf1', 'conv2d_9_tf2', 'conv2d_9_tf3', 'conv2d_9_tf4', 'conv2d_9_tf5', 'conv2d_11_tf', 'conv2d_1_tf', 'conv2d_4_tf', 'conv2d_7_tf', 'conv2d_10_tf']
// Output: conv2d_12_tf
@group(0) @binding(0) var conv2d_9_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_9_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_9_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_9_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_9_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_9_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_11_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_4_tf_tex: texture_2d<f32>;
@group(0) @binding(9) var conv2d_7_tf_tex: texture_2d<f32>;
@group(0) @binding(10) var conv2d_10_tf_tex: texture_2d<f32>;
@group(0) @binding(11) var conv2d_12_tf_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_9_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_9_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_9_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_9_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_9_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_9_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_9_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_9_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_9_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_9_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_9_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_9_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_11_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_11_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_16(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_17(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_18(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_19(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_20(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_21(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_12_tf_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.018240726, -0.023228848, -0.037755717, 0.009697539, -0.06391762, -0.22754766, 0.32287842, 0.0321051, -0.081117265, 0.09789689, 0.13194586, 0.033958163, -0.16528013, 0.25348902, 0.013538278, -0.122477636) * g_0(pixel.xy);
  result += mat4x4<f32>(0.21895553, 0.32368854, 0.09295876, 0.008549726, -0.17221816, -0.009608649, 0.008025734, -0.12808394, 0.095984474, -0.055960163, 0.1857312, -0.01410566, -0.29036984, -0.11915815, -0.22480978, -0.010984804) * g_1(pixel.xy);
  result += mat4x4<f32>(0.021460485, -0.069948144, -0.20457397, -0.06368738, 0.041937023, 0.058391638, 0.08521619, -0.14939685, -0.17603025, -0.2704823, 0.1297126, 0.08506167, -0.036500573, -0.15101454, 0.2705927, -0.11495338) * g_2(pixel.xy);
  result += mat4x4<f32>(-0.015002146, -0.11097708, -0.04153528, 0.009949436, 0.05756999, 0.0021354982, 0.011803671, -0.059338056, 0.14856763, 0.1583689, -0.18323529, -0.061641436, -0.15716806, -0.0712248, -0.26153558, 0.1281614) * g_3(pixel.xy);
  result += mat4x4<f32>(0.12309243, -0.019010289, -0.48949012, 0.22548608, 0.06878324, 0.06457863, -0.16647714, -0.19459985, -0.2501109, -0.1472345, -0.04101737, 0.30518964, 0.07157429, 0.03916779, 0.17215528, -0.27554017) * g_4(pixel.xy);
  result += mat4x4<f32>(0.04666684, 0.21871185, -0.06709083, -0.05889728, 0.16164586, 0.057062894, 0.13912962, 0.02538998, 0.28736678, -0.11419385, 0.06581755, 0.17950252, -0.0021713986, -0.21133782, 0.18057212, -0.13002412) * g_5(pixel.xy);
  result += mat4x4<f32>(0.07720478, -0.059798796, 0.10859078, -0.054959364, -0.17407586, 0.12507877, -0.03956437, 0.13279653, 0.10017548, -0.29822072, -0.023122882, 0.09967618, 0.09163447, -0.26512557, -0.019125078, -0.26062354) * g_6(pixel.xy);
  result += mat4x4<f32>(0.007360602, -0.05319189, 0.26773262, 0.21440737, 0.041763037, -0.0078692185, 0.104448885, 0.10134778, -0.0907065, 0.024284367, 0.003045257, -0.047127664, -0.25469595, -0.028164914, -0.043226935, 0.057833903) * g_7(pixel.xy);
  result += mat4x4<f32>(0.055060904, 0.12964465, 0.0100004645, 0.11081481, -0.18145356, -0.06301884, 0.002863084, -0.09317529, -0.032467086, 0.053214524, -0.20222305, -0.17389554, -0.02374549, 0.081627876, 0.13586336, -0.13289934) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.12577327, 0.10578063, 0.2519808, 0.026089173, 0.10365033, 0.2503572, 0.08068646, -0.13609827, 0.0993266, -0.18147932, -0.24582084, -0.0027736255, 0.22986256, 0.0027441771, -0.2843601, -0.24845399) * g_9(pixel.xy);
  result += mat4x4<f32>(0.407128, 0.02000054, -0.025044682, -0.07539943, 0.123638265, 0.13025928, 0.06359813, -0.06765932, 0.25122678, -0.07864227, -0.2603126, -0.4042432, -0.14067987, -0.23111042, 0.22302234, 0.2521762) * g_10(pixel.xy);
  result += mat4x4<f32>(-0.1394529, -0.31797844, -0.19563127, 0.06399499, 0.10406692, 0.12298246, -0.08451652, 0.067356326, -0.10545609, 0.1542806, -0.09520273, -0.4893699, 0.016285073, -0.05184254, 0.01668572, 0.28672934) * g_11(pixel.xy);
  result += mat4x4<f32>(0.18358573, 0.07086077, 0.081096895, 0.08466328, -0.037679147, -0.010346395, -0.10832653, 0.24460128, -0.035456736, 0.20034707, -0.09119996, 0.026973516, 0.018956725, -5.4123822e-05, -0.022495521, 0.022271384) * g_12(pixel.xy);
  result += mat4x4<f32>(0.2034902, -0.33097568, -0.06138338, 0.0043093674, 0.2108118, 0.07654584, 0.12894695, 0.06086084, 0.09708061, 0.08280423, 0.03982084, -0.013282445, 0.1286689, -0.014037032, -0.028497966, 0.3555501) * g_13(pixel.xy);
  result += mat4x4<f32>(-0.07103243, -0.13886544, -0.14505245, -0.16215186, 0.19933704, 0.20801912, 0.11129495, -0.060560636, 0.022709953, 0.030686028, 0.048585244, -0.1738981, -0.27648082, -0.05651471, -0.45279422, -0.110658295) * g_14(pixel.xy);
  result += mat4x4<f32>(-0.010698494, -0.014529519, 0.06092168, -0.13276085, -0.31590307, -0.034779727, 0.13390115, -0.2154148, 0.31362757, -0.16912729, -0.17177378, 0.04694781, 0.2817023, -0.20776759, 0.051466487, 0.0033499447) * g_15(pixel.xy);
  result += mat4x4<f32>(0.14116827, -0.004569741, -0.34971637, 0.14838621, -0.23526837, 0.12044124, 0.24962978, -0.47152176, 0.42074892, -0.08043922, -0.029038593, -0.0067655854, -0.074845135, -0.06440738, 0.19292484, 0.22176756) * g_16(pixel.xy);
  result += mat4x4<f32>(0.1824485, 0.14171454, 0.17320803, 0.12185365, 0.114776775, 0.06394961, 0.26359382, -0.4180487, -0.16079833, 0.0073073236, -0.12868631, -0.15573654, -0.07210191, -0.012453217, -0.14852667, 0.016012993) * g_17(pixel.xy);
  result += mat4x4<f32>(-0.0665514, -0.23494612, 0.098041154, -0.13429102, -0.09597223, -0.02225127, 0.3641938, -0.11276776, -0.116225325, -0.09660111, 0.24925885, 0.26824257, -0.013628071, -0.024492549, 0.056771886, -0.039691154) * g_18(pixel.xy);
  result += mat4x4<f32>(0.1038324, -0.13783209, -0.29168722, -0.13033277, -0.111158535, -0.12511612, -0.08763829, 0.05513153, 0.0047156885, 0.13744187, 0.07963748, 0.00240008, -0.13253629, 0.019641487, -0.113318674, 0.11268771) * g_19(pixel.xy);
  result += mat4x4<f32>(0.017130049, -0.050066452, -0.1321411, 0.12105113, -0.19122683, 0.12728047, -0.11631363, 0.11703079, -0.16408561, 0.073255256, 0.18040007, -0.027916772, 0.117218666, -0.18100376, -0.059619226, -0.10517939) * g_20(pixel.xy);
  result += mat4x4<f32>(-0.21253966, 0.2606339, 0.10612866, 0.1311986, 0.19595386, 0.07200261, -0.22423409, -2.2849147e-06, 0.28697285, 0.036045954, -0.19823448, -0.054925486, -0.12410156, 0.30472383, 0.2330069, -0.12509976) * g_21(pixel.xy);
  result += vec4f(0.022758514, -0.03611776, 0.0064447913, 0.00068006525);
  textureStore(conv2d_12_tf_tex, pixel.xy, result);
}
