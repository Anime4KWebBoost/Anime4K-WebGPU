@group(0) @binding(0) var mySampler: sampler;
@group(0) @binding(1) var tex_0: texture_2d<f32>;
@group(0) @binding(2) var tex_1: texture_2d<f32>;
@group(0) @binding(3) var tex_2: texture_2d<f32>;

fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn go_0(fragUV: vec2<f32>, x_off: f32, y_off: f32) -> vec4f {
    var uv = fragUV;
    let dim: vec2f = vec2f(textureDimensions(tex_0));
    uv += vec2f(x_off / dim.x, y_off / dim.y) * 0.66666666666666;
    return max4(textureSample(tex_0, mySampler, uv), 0.0);
}

fn go_1(fragUV: vec2<f32>, x_off: f32, y_off: f32) -> vec4f {
    var uv = fragUV;
    let dim: vec2f = vec2f(textureDimensions(tex_1));
    uv += vec2f(x_off / dim.x, y_off / dim.y) * 0.66666666666666;
    return max4(textureSample(tex_1, mySampler, uv), 0.0);
}

fn go_2(fragUV: vec2<f32>, x_off: f32, y_off: f32) -> vec4f {
    var uv = fragUV;
    let dim: vec2f = vec2f(textureDimensions(tex_2));
    uv += vec2f(x_off / dim.x, y_off / dim.y) * 0.66666666666666;
    return max4(textureSample(tex_2, mySampler, uv), 0.0);
}

fn go_3(fragUV: vec2<f32>, x_off: f32, y_off: f32) -> vec4f {
    var uv = fragUV;
    let dim: vec2f = vec2f(textureDimensions(tex_0));
    uv += vec2f(x_off / dim.x, y_off / dim.y) * 0.66666666666666;
    return max4(-textureSample(tex_0, mySampler, uv), 0.0);
}

fn go_4(fragUV: vec2<f32>, x_off: f32, y_off: f32) -> vec4f {
    var uv = fragUV;
    let dim: vec2f = vec2f(textureDimensions(tex_1));
    uv += vec2f(x_off / dim.x, y_off / dim.y) * 0.66666666666666;
    return max4(-textureSample(tex_1, mySampler, uv), 0.0);
}

fn go_5(fragUV: vec2<f32>, x_off: f32, y_off: f32) -> vec4f {
    var uv = fragUV;
    let dim: vec2f = vec2f(textureDimensions(tex_2));
    uv += vec2f(x_off / dim.x, y_off / dim.y) * 0.66666666666666;
    return max4(-textureSample(tex_2, mySampler, uv), 0.0);
}

@fragment
fn main(@location(0) fragUV: vec2<f32>) -> @location(0) vec4<f32> {
  var result: vec4f = mat4x4<f32>(0.070670135, -0.026429666, 0.09446684, -0.04920855, -0.08720965, -0.022478819, -0.15962029, 0.29240617, -0.10499224, 0.10415364, 0.11922523, -0.08293139, 0.07846739, -0.15612845, -0.19753109, -0.033664245) * go_0(fragUV, -1.0, -1.0);
  result += mat4x4<f32>(-0.10003188, 0.088794544, -0.028137686, -0.1375475, 0.079632774, -0.012540568, -0.092962824, 0.10438857, -0.12865996, -0.040098958, -0.030862473, 0.009116932, -0.14513193, 0.13843827, -0.14862274, 0.27156416) * go_0(fragUV, -1.0, 0.0);
  result += mat4x4<f32>(0.03148634, -0.13966283, -0.022684515, 0.080294125, -0.013548243, -0.01112399, 0.021930493, -0.24562296, -0.029252343, -0.0053704586, 0.088651545, -0.10468119, 0.0077052945, 0.027455118, -0.008439029, -0.08633876) * go_0(fragUV, -1.0, 1.0);
  result += mat4x4<f32>(-0.073491044, 0.11097277, -0.02937573, 0.045977436, -0.015563786, 0.04763272, -0.17349051, 0.02479734, 0.12201058, -0.09606755, -0.064500526, -0.068423286, -0.10828311, 0.0025430934, 0.060595006, 0.10702606) * go_0(fragUV, 0.0, -1.0);
  result += mat4x4<f32>(-0.10012673, -0.026187293, 0.039673958, 0.25377232, 0.16539277, 0.015475691, -0.017826023, -0.037547242, 0.27426562, 0.039105, -0.29495236, -0.20741108, 0.3893781, -0.00018520994, 0.18736628, 0.016120607) * go_0(fragUV, 0.0, 0.0);
  result += mat4x4<f32>(-0.0902328, -0.035078812, 0.0423949, 0.10428684, -0.012309703, -0.0022217801, 0.12843162, 0.008824024, 0.10457806, -0.13958204, 0.042961385, -0.17798209, 0.13051195, -0.2078117, 0.014258071, 0.27743495) * go_0(fragUV, 0.0, 1.0);
  result += mat4x4<f32>(0.0037268966, -0.002057136, -0.086700045, -0.04034686, -0.039582066, -0.05536445, -0.013854305, 0.13898304, 0.08383669, -0.1389377, 0.09724791, 0.27256468, 0.0012985421, 0.026786802, -0.09553305, -0.08505046) * go_0(fragUV, 1.0, -1.0);
  result += mat4x4<f32>(0.047094945, -0.15165734, -0.16622189, 0.27696493, 0.04804586, 0.017589863, -0.048407666, -0.1423487, -0.18051605, -0.037678123, -0.083375834, 0.21356659, 0.056051373, 0.058305956, 0.020808164, 0.20114677) * go_0(fragUV, 1.0, 0.0);
  result += mat4x4<f32>(-0.06873173, 0.056631878, -0.09389161, -0.026553899, -0.005246827, 0.011163956, 0.0807366, 0.018891184, 0.037806395, -0.08414753, -0.29572666, 0.12225136, 0.028108165, -0.12746434, -0.1242189, 0.06427617) * go_0(fragUV, 1.0, 1.0);
  result += mat4x4<f32>(-0.054436807, 0.0463667, -0.3160585, -0.26496625, -0.0016307884, 0.0027304688, 0.13524249, 0.14023106, 0.15203272, -0.0055950717, -0.047067486, -0.1299749, -0.023347244, -0.011924935, 0.04708069, 0.14064) * go_1(fragUV, -1.0, -1.0);
  result += mat4x4<f32>(-0.15567084, -0.03462954, 0.014766895, 0.28104082, -0.015955932, 0.048590813, 0.14149605, 0.016979203, 0.15654798, -0.124170296, -0.000571697, 0.18732761, -0.15969957, 0.036891263, -0.08222836, 0.007162299) * go_1(fragUV, -1.0, 0.0);
  result += mat4x4<f32>(-0.027358167, -0.05515796, -0.21783291, -0.061588667, 0.14288566, 0.034540724, -0.0779948, -0.004935965, 0.087642424, -0.03457867, 0.26657468, -0.08798545, 0.06278833, 0.01650169, -0.15035287, 0.043133624) * go_1(fragUV, -1.0, 1.0);
  result += mat4x4<f32>(0.05577383, 0.058146708, 0.0057744626, -0.043521628, 0.14279243, -0.22507532, 0.0896487, -0.03373711, -0.29882178, 0.12674153, 0.21856095, -0.03654502, 0.09770278, 0.011492664, 0.01397184, 0.11037485) * go_1(fragUV, 0.0, -1.0);
  result += mat4x4<f32>(0.14057921, -0.18916433, -0.10062621, -0.19464967, -0.19286343, -0.08279728, 0.0062218676, -0.15246014, 0.0960211, -0.3964747, -0.016336296, 0.028859172, -0.047788087, 0.032031618, 0.054299697, -0.11431765) * go_1(fragUV, 0.0, 0.0);
  result += mat4x4<f32>(-0.15350376, 0.1362609, -0.011803502, 0.2660655, -0.037387744, 0.18536955, -0.0015025261, -0.011900626, -0.023042146, -0.15995252, 0.060023192, 0.08954088, 0.07074839, 0.059100557, -0.08593189, -0.045180846) * go_1(fragUV, 0.0, 1.0);
  result += mat4x4<f32>(-0.031948235, 0.07176401, -0.007034352, -0.12552954, 0.049458012, -0.07971771, 0.0093457, -0.10731874, 0.07024961, 0.27386668, 0.07679444, -0.28798524, -0.06428793, -0.0057761013, 0.014161652, -0.0065095956) * go_1(fragUV, 1.0, -1.0);
  result += mat4x4<f32>(-0.1427731, 0.0833077, 0.13927783, 0.016691789, -0.16832228, 0.10298729, 0.1446675, -0.2656778, 0.0788247, 0.13420862, 0.050337754, -0.08008961, 0.07605825, 0.04659439, -0.054331373, 0.074493684) * go_1(fragUV, 1.0, 0.0);
  result += mat4x4<f32>(0.07614274, -0.050090652, -0.066727035, 0.055715825, -0.07636078, 0.08155946, -0.061731443, -0.022193443, 0.057011697, -0.009381379, 0.176684, -0.05981099, -0.04690691, 0.051825907, -0.019666756, 0.0017494732) * go_1(fragUV, 1.0, 1.0);
  result += mat4x4<f32>(0.12878093, -0.091072194, 0.03426444, -0.0014821129, 0.04648442, -0.056241687, 0.12965083, -0.2177644, 0.03271057, 0.013664906, -0.27382636, 0.009116637, -0.020398485, 0.026515692, 0.0059792865, -0.10869647) * go_2(fragUV, -1.0, -1.0);
  result += mat4x4<f32>(0.017064014, 0.012380988, 0.015886486, 0.041969348, -0.056818817, 0.057386417, -0.19103225, 0.02042478, 0.022307403, -0.16955635, -0.25923833, -0.19144051, 0.044084065, 0.09931404, 0.08665806, -0.17140177) * go_2(fragUV, -1.0, 0.0);
  result += mat4x4<f32>(-0.034919903, -0.00735085, -0.0040107057, 0.013110185, 0.008756165, -0.11104751, -0.03863784, 0.20081028, 0.008359515, 0.056265604, 0.0035791632, 0.14127707, 0.008306366, -0.061028276, -0.01180833, 0.11239347) * go_2(fragUV, -1.0, 1.0);
  result += mat4x4<f32>(-0.055210557, -0.0047766017, -0.040911432, 0.04214669, 0.015301695, 0.035733294, -0.09534393, 0.3189227, -0.043539703, 0.10847848, 0.052175194, 0.25319937, -0.075755194, 0.07450996, -0.2392008, 0.17029741) * go_2(fragUV, 0.0, -1.0);
  result += mat4x4<f32>(0.008697264, -0.062783785, 0.23503996, 0.06680282, -0.10700762, -0.05921618, 0.12575574, 0.12539467, 0.21779932, -0.27365687, -0.08419621, -0.23255387, -0.097952545, -0.33015022, -0.27839977, 0.54275817) * go_2(fragUV, 0.0, 0.0);
  result += mat4x4<f32>(0.043178167, -0.07644931, -0.002126049, -0.0041748723, 0.12747553, 0.05624526, 0.08894693, 0.1273868, 0.13564228, -0.029284991, -0.1010155, 0.0144336475, -0.067769796, 0.12993337, 0.23458317, -0.1404509) * go_2(fragUV, 0.0, 1.0);
  result += mat4x4<f32>(0.037086505, 0.04712714, 0.00080463936, 0.026554452, -0.032055024, -0.0346718, 0.14792679, 0.025423491, 0.045839246, 0.040022433, -0.010968567, -0.03638554, 0.03469138, -0.048995998, -0.080627054, -0.15703341) * go_2(fragUV, 1.0, -1.0);
  result += mat4x4<f32>(0.0022719046, -0.11156194, -0.1660571, 0.07095863, 0.06325309, 0.03638195, 0.011129683, -0.16795434, 0.05859281, -0.050576515, 0.025492875, 0.14741158, 0.16042823, -0.021238782, -0.10693587, 0.062508605) * go_2(fragUV, 1.0, 0.0);
  result += mat4x4<f32>(0.04699144, -0.06268154, -0.032550193, 0.1368816, -0.046266492, -0.09626834, 0.035877157, -0.017621659, -0.025884021, 0.016501589, -0.033517126, -0.16266182, 0.0063534426, -0.034565207, 0.107733876, -0.19080792) * go_2(fragUV, 1.0, 1.0);
  result += mat4x4<f32>(-0.01089889, -0.046437796, -0.2864276, -0.059123863, 0.010273228, 0.035363402, -0.18365921, 0.002496715, 0.010531512, -0.044639286, -0.14159343, -0.04712995, 0.031355694, 0.041651487, 0.04172989, -0.072659165) * go_3(fragUV, -1.0, -1.0);
  result += mat4x4<f32>(-0.29903612, 0.016968794, 0.2026591, 0.14354537, 0.210121, -0.1271222, 0.11928214, 0.075612746, 0.07222206, -0.113600664, -0.031380497, -0.04970697, -0.040690526, -0.024844045, -0.14514743, 0.10170265) * go_3(fragUV, -1.0, 0.0);
  result += mat4x4<f32>(0.00901007, -0.0077540767, -0.16780637, -0.0772044, -0.08349278, 0.035623573, -0.0036132522, -0.1559422, 0.079474956, -0.024358552, 0.05147624, -0.095216155, -0.001963766, 0.026185913, 0.041633602, -0.068779185) * go_3(fragUV, -1.0, 1.0);
  result += mat4x4<f32>(0.11536367, 0.06698426, -0.019352471, -0.027348887, 0.12543406, -0.017715944, -0.22333942, -0.07524913, -0.023550004, 0.09020137, 0.15082505, -0.019156344, 0.014714152, -0.100751296, -0.10988814, 0.013269792) * go_3(fragUV, 0.0, -1.0);
  result += mat4x4<f32>(0.23938964, -0.015321653, -0.085038215, -0.21858668, -0.15793826, -0.1725926, 0.16878416, -0.15579711, -0.21086636, -0.023652412, -0.10312092, 0.047774162, 0.11063097, 0.02804365, -0.049057744, -0.20330532) * go_3(fragUV, 0.0, 0.0);
  result += mat4x4<f32>(0.058630574, 0.10365072, -0.112122595, -0.10462442, -0.04204145, 0.0060419035, -0.038622607, -0.22971797, -0.081746876, 0.110261, -0.03279762, 0.10083948, -0.07525642, 0.096350044, -0.15403591, 0.01831559) * go_3(fragUV, 0.0, 1.0);
  result += mat4x4<f32>(-0.013126955, 0.11560779, 0.06401061, -0.014257845, -0.078378044, 0.07452937, 0.030035159, 0.07133207, -0.072352365, -0.049404953, -0.2006817, -0.04745451, -0.0645119, 0.0849615, 0.053003483, 0.07766129) * go_3(fragUV, 1.0, -1.0);
  result += mat4x4<f32>(0.07683494, -0.47826648, 0.05708172, 0.12041683, 0.18084203, -0.08476069, 0.093064874, 0.016264802, 0.06801874, -0.01283242, -0.13347803, -0.035351828, -0.0011718989, -0.12699558, -0.0240836, -0.08060763) * go_3(fragUV, 1.0, 0.0);
  result += mat4x4<f32>(0.0521042, -0.062541164, 0.05483789, 0.14211908, 0.08606814, 0.06433033, -0.23270494, 0.05307593, 0.09299324, 0.04586578, -0.1193637, 0.12056507, -0.06442679, 0.06762315, -0.010547303, 0.031680685) * go_3(fragUV, 1.0, 1.0);
  result += mat4x4<f32>(-0.09215318, -0.115724616, -0.061507307, 0.08273653, 0.0265886, -0.092683844, -0.22037667, -0.023114366, 0.028223295, -0.029118685, -0.088996224, 0.1023557, -0.089898214, 0.15436162, 0.16985597, 0.1431367) * go_4(fragUV, -1.0, -1.0);
  result += mat4x4<f32>(0.10560199, 0.13460231, 0.024534458, 0.1370791, 0.16920403, 0.013769043, -0.004941373, -0.22188903, -0.1193022, 0.07823969, -0.097713776, 0.044269208, 0.036816355, -0.11568587, -0.07947363, 0.022213666) * go_4(fragUV, -1.0, 0.0);
  result += mat4x4<f32>(0.002128253, 0.014331295, 0.09004623, -0.12958615, 0.0048723617, -0.072075516, 0.024190098, 0.011900665, 0.038696863, 0.07110043, -0.10347002, 0.082676366, 0.017796163, 0.004747536, 0.11188511, -0.21652836) * go_4(fragUV, -1.0, 1.0);
  result += mat4x4<f32>(-0.051317807, 0.13453357, 0.05310306, -0.033790052, -0.06231268, 0.11130248, -0.075370945, 0.2774124, 0.04305133, -0.045057327, -0.04373203, -0.10055409, 0.042824138, -0.021799369, -0.08762204, -0.16729161) * go_4(fragUV, 0.0, -1.0);
  result += mat4x4<f32>(0.08727262, -0.074025065, -0.113067836, -0.07882044, 0.04476854, -0.14519121, -0.0434838, -0.010525559, -0.0425304, 0.106957085, -0.28644025, -0.105096966, 0.12650728, -0.15108573, 0.013723224, 0.5163331) * go_4(fragUV, 0.0, 0.0);
  result += mat4x4<f32>(-0.021519013, -0.05317946, 0.0036545463, 0.0003156711, 0.12984163, -0.11362556, 0.061670557, -0.030158816, 0.04674806, 0.16352096, -0.23135264, 0.074876174, 0.0047455966, -0.120593436, 0.032926966, -0.20865184) * go_4(fragUV, 0.0, 1.0);
  result += mat4x4<f32>(-0.029197322, -0.09204084, -0.13026133, -0.020570219, 0.043402288, -0.016610064, 0.08961119, -0.09460752, -0.057213686, -0.14044005, 0.080606215, 0.12573113, 0.094055034, 0.06523493, -0.16264567, -0.0716556) * go_4(fragUV, 1.0, -1.0);
  result += mat4x4<f32>(-0.020557933, 0.077145614, 0.04620034, 0.22271551, 0.114781894, 0.11590448, -0.03233266, 0.13224865, -0.054499403, -0.01435028, -0.09684464, 0.022300925, 0.16768926, -0.019053463, 0.08804071, -0.14398381) * go_4(fragUV, 1.0, 0.0);
  result += mat4x4<f32>(0.0025323853, -0.016476262, 0.12608051, 0.016324151, -0.0035798363, 0.020308342, 0.06474364, -0.042083416, -0.08742628, 0.016960703, -0.120870225, 0.07373239, -0.06463355, -0.018745359, -0.02229239, -0.1039809) * go_4(fragUV, 1.0, 1.0);
  result += mat4x4<f32>(-0.008440462, -0.15268475, -0.09420959, -0.07718843, 0.35601637, -0.0010803771, 0.050411247, -0.09859693, -0.008227993, 0.06407621, -0.19121973, -0.15547852, -0.033705134, 0.023920614, -0.12611681, 0.021967601) * go_5(fragUV, -1.0, -1.0);
  result += mat4x4<f32>(-0.24474435, 0.07716706, -0.24876165, -0.18184067, -0.020811914, 0.07414089, -0.21809489, 0.015727887, 0.12278457, -0.08471355, -0.06071567, -0.07017344, -0.064291485, -0.07627711, 0.076017715, 0.2072293) * go_5(fragUV, -1.0, 0.0);
  result += mat4x4<f32>(0.013676314, -0.04966636, 0.06895822, 0.15210962, 0.07330876, -0.034188077, -0.0173066, 0.11160374, -0.12326202, -0.002551885, 0.0015338673, 0.1079974, 0.03733164, 0.077835836, -0.07733004, -0.0058571417) * go_5(fragUV, -1.0, 1.0);
  result += mat4x4<f32>(-0.1854433, 0.02924247, -0.14843488, 0.18941449, -0.17652206, -0.13730201, -0.29041716, -0.12161381, -0.04599312, 0.16662349, 0.045855995, -0.005569671, -0.050993398, 0.019462017, -0.10552683, -0.19930908) * go_5(fragUV, 0.0, -1.0);
  result += mat4x4<f32>(0.08246259, 0.2602547, 0.16599776, -0.12149122, -0.048151806, 0.12042248, -0.16163243, 0.00087805535, 0.0536958, 0.05350576, 0.08406917, -0.060227945, 0.19056156, -0.2276745, -0.13755281, 0.39423308) * go_5(fragUV, 0.0, 0.0);
  result += mat4x4<f32>(-0.0775391, 0.105803244, 0.08474868, -0.019011196, 0.026801828, -0.036453005, -0.018443616, -0.03005072, -0.10748735, 0.080679856, 0.07718584, 0.07871323, 0.030023575, 0.022230582, -0.090973295, -0.1363233) * go_5(fragUV, 0.0, 1.0);
  result += mat4x4<f32>(-0.14770739, -0.09530047, 0.10400556, -0.115337685, 0.14459239, 0.1432794, -0.070606485, -0.053847175, 0.09378594, -0.09445331, 0.088633865, 0.071158156, 0.04437499, -0.04694172, -0.059354205, -0.00041449978) * go_5(fragUV, 1.0, -1.0);
  result += mat4x4<f32>(0.016041227, -0.2313572, -0.011389983, 0.030348316, 0.07260269, 0.009828401, -0.06116872, 0.026138552, -0.15607156, 0.042709354, 0.079162516, -0.16348995, -0.019872159, 0.13251646, 0.020712351, -0.16324571) * go_5(fragUV, 1.0, 0.0);
  result += mat4x4<f32>(-0.08813695, 0.093021385, 0.019460218, 0.096429825, -0.010391231, 0.0216966, -0.1490125, -0.04100963, -0.024641959, 0.044109546, 0.08043847, -0.03676336, -0.026315603, 0.025947884, -0.10771212, 0.0010732685) * go_5(fragUV, 1.0, 1.0);
  result += vec4f(0.003290131, -0.0154397, 0.04528908, -0.04218369);

  return result;
}
