// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x64
// Name: conv2d3tf
// Inputs: ['conv2d_tf', 'conv2d_tf1', 'conv2d_tf2', 'conv2d_tf3', 'conv2d_tf4', 'conv2d_tf5', 'conv2d_2_tf', 'conv2d_1_tf']
// Output: conv2d_3_tf
@group(0) @binding(0) var conv2d_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_2_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_3_tf_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_2_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_2_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_3_tf_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.11662476, 0.30973792, 0.21844758, 0.19193952, 0.10547289, -0.28103492, 0.153185, 0.22902022, 0.14545941, -0.36453786, 0.27674347, 0.082761206, 0.018604625, -0.15195464, -0.014881725, -0.3170343) * g_0(pixel.xy);
  result += mat4x4<f32>(-0.09369265, 0.0030548668, 0.123169556, 0.29990658, 0.0059669684, -0.30507565, 0.22437601, 0.26314184, 0.055285115, 0.08910655, -0.07781467, 0.34908244, 0.12883523, -0.1218909, 0.46330363, -0.00058599625) * g_1(pixel.xy);
  result += mat4x4<f32>(-0.13166216, -0.11733475, 0.3777369, -0.11452789, -0.012198889, 0.019259788, 0.19055355, 0.14045803, 0.2352836, 0.18440361, -0.119568326, 0.15006012, 0.12928642, 0.2181605, -0.1755796, -0.1481423) * g_2(pixel.xy);
  result += mat4x4<f32>(0.20824851, 0.1454897, 0.016380647, 0.08601717, -0.0287675, -0.17842998, 0.24576826, 0.024758099, -0.06907304, -0.33883977, -0.18469703, -0.11530369, -0.13971063, 0.09056448, 0.10467011, 0.087848045) * g_3(pixel.xy);
  result += mat4x4<f32>(0.47120807, -0.15463045, 0.03930625, 0.18975684, 0.17118797, 0.077672035, 0.029735595, -0.0064234287, 0.35503763, 0.23442392, 0.09259758, 0.06642276, 0.16423592, 0.16245009, 0.043012362, -0.16605885) * g_4(pixel.xy);
  result += mat4x4<f32>(0.14847134, -0.41317105, 0.21329704, -0.115592465, -0.04099491, 0.22865698, -0.011546307, 0.124923006, 0.02029704, 0.014588208, -0.0032878371, 0.09777601, 0.27264157, 0.26693115, -0.083503485, -0.11275104) * g_5(pixel.xy);
  result += mat4x4<f32>(0.0073214495, -0.30733636, -0.28372166, -0.23081271, -0.24020568, 0.17335413, -0.08835816, -0.1407258, 0.043210473, 0.29907116, -0.15998003, -0.10616064, -0.19272846, 0.07347569, 0.065403186, 0.21924807) * g_6(pixel.xy);
  result += mat4x4<f32>(0.1390639, 0.07071387, -0.10704547, -0.22267987, 0.14110383, 0.31690794, -0.14299001, -0.2633626, -0.37578335, -0.11325702, -0.012588563, 0.05235386, -0.05790653, 0.29747054, -0.11362069, -0.034965772) * g_7(pixel.xy);
  result += mat4x4<f32>(0.334025, 0.06966542, -0.30425888, -0.049219113, 0.05522049, -0.064109504, -0.19639532, -0.06540687, -0.3323081, -0.11462512, 0.12793858, -0.044268914, -0.13001205, -0.4268851, 0.09755515, 0.22260398) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.070916615, -0.032426283, -0.031039508, 0.113172114, -0.083208784, 0.09998266, -0.057585325, -0.017305639, 0.07392591, 0.11129369, -0.12461519, -0.13633083, 0.11811745, -0.049483757, -0.16540588, -0.19690844) * g_9(pixel.xy);
  result += mat4x4<f32>(-0.0761509, 0.06887501, -0.17220098, -0.2689129, -0.15664133, 0.014503109, 0.013423933, 0.07106888, 0.08206795, -0.26531503, -0.19532347, -0.09172804, -0.0701496, 0.029842263, -0.15747191, 0.03876475) * g_10(pixel.xy);
  result += mat4x4<f32>(0.05873964, 0.21549611, -0.15765984, 0.11783242, 0.09904579, -0.1505368, 0.009470319, 0.11437343, 0.07330138, -0.12074719, 0.046029083, 0.07719378, -0.14860357, 0.012415384, -0.15716434, 0.096243195) * g_11(pixel.xy);
  result += mat4x4<f32>(0.38489017, 0.10751408, 0.28326878, 0.10983613, -0.08363852, 0.060594987, -0.1407845, -0.2330205, -0.0033884577, -0.025575818, -0.21328409, -0.013343768, 0.37102774, -0.018506272, 0.15474491, 0.20658477) * g_12(pixel.xy);
  result += mat4x4<f32>(-0.21097998, 0.11116577, 0.0066421195, -0.053172227, 0.041547738, -0.115422554, 0.18638755, 0.15930174, -0.11901881, -0.14221598, 0.113654196, -0.035343777, 0.0037377405, 0.0054536746, -0.16508429, -0.112160645) * g_13(pixel.xy);
  result += mat4x4<f32>(-0.168217, 0.33982185, -0.14226285, -0.061567828, 0.38622376, 0.16323963, 0.009866034, 0.24718387, 0.15684012, 0.16934262, -0.07659216, -0.27921352, 0.31008887, -0.117847964, 0.033022024, -0.0028089648) * g_14(pixel.xy);
  result += mat4x4<f32>(0.13425586, -0.1403824, -0.14900951, 0.044306386, -0.39742225, -0.086779915, 0.023442117, -0.015157307, -0.33325103, 0.07626949, -0.14105129, 0.3872729, -0.09532729, 0.21603268, 0.08987563, -0.048167326) * g_15(pixel.xy);
  result += vec4f(-0.045520097, -0.028044129, 0.01954312, -0.04157413);
  textureStore(conv2d_3_tf_tex, pixel.xy, result);
}
