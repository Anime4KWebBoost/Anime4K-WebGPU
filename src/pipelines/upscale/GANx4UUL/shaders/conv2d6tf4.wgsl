// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x72
// Name: conv2d6tf4
// Inputs: ['conv2d_3_tf', 'conv2d_3_tf1', 'conv2d_3_tf2', 'conv2d_3_tf3', 'conv2d_3_tf4', 'conv2d_3_tf5', 'conv2d_5_tf', 'conv2d_1_tf', 'conv2d_4_tf']
// Output: conv2d_6_tf4
@group(0) @binding(0) var conv2d_3_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_3_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_3_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_3_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_3_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_3_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_5_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_4_tf_tex: texture_2d<f32>;
@group(0) @binding(9) var conv2d_6_tf4_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_5_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_5_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_16(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_17(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_6_tf4_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.21972683, 0.075138226, 0.10989088, 0.15510671, -0.1459443, -0.0016620584, 0.061098658, 0.31031737, 0.066652276, -0.028504146, -0.2547878, 0.05934589, -0.097173244, -0.02434052, 0.00775221, -0.1422285) * g_0(pixel.xy);
  result += mat4x4<f32>(0.107364714, -0.04124382, 0.15790261, -0.06481956, 0.17907274, -0.060845222, 0.12766309, -0.00051298866, -0.102316536, -0.15852973, -0.08159873, -0.044251855, 0.27320522, -0.058971684, 0.10957703, 0.11716146) * g_1(pixel.xy);
  result += mat4x4<f32>(-0.013670836, 0.24698958, -0.22751978, -0.0073335706, 0.056770742, -0.030483782, 0.02582211, 0.08631351, 0.037981253, -0.19984269, -0.0027441583, -0.0624548, -0.0073825894, 0.19920917, 0.025273615, 0.08608597) * g_2(pixel.xy);
  result += mat4x4<f32>(-0.0662924, -0.07036538, 0.18532504, -0.2299518, -0.17168434, 0.10680291, -0.32843417, 0.18283479, -0.014981234, -0.3074193, 0.25829783, 0.13314934, -0.29796004, -0.24784647, 0.107523575, -0.06354826) * g_3(pixel.xy);
  result += mat4x4<f32>(-0.27304897, 0.021216365, 0.19145995, -0.08837303, 0.002489904, -0.14517735, -0.11758484, 0.017706083, 0.11964576, 0.07262963, -0.02875841, 0.058490552, 0.36016595, -0.17619327, -0.14238013, -0.06569956) * g_4(pixel.xy);
  result += mat4x4<f32>(-0.17569791, 0.018018663, -0.06937724, -0.19693184, 0.005096431, 0.24887225, -0.26054552, -0.08146536, 0.31367835, 0.3301311, 0.32667178, 0.28089377, 0.1244409, -0.031515893, 0.036075663, 0.19611663) * g_5(pixel.xy);
  result += mat4x4<f32>(0.17254318, 0.2789707, -0.023289531, 0.0384691, 0.056068007, -0.21530272, -0.12280407, -0.27022615, 0.0869075, -0.005402115, 0.31068063, -0.28706273, -0.055334765, 0.08997763, 0.16977838, -0.050881755) * g_6(pixel.xy);
  result += mat4x4<f32>(0.038418837, -0.016408218, 0.08852962, -0.014304706, -0.12245269, 0.32564455, 0.008428901, -0.12942936, 0.014469481, 0.19589558, 0.05143627, 0.015018481, -0.18424125, 0.31541458, 0.15289177, -0.015950657) * g_7(pixel.xy);
  result += mat4x4<f32>(-0.24448341, -0.12913765, 0.14086853, 0.23801136, 0.053969346, -0.00888275, -0.16412334, 0.12726937, -0.16968949, 0.23890501, 0.00017258813, -0.009174681, 0.16712539, -0.24415763, 0.15660262, -0.065232545) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.050856017, 0.202047, -0.18741634, -0.046839286, 0.10381434, -0.18508428, 0.2024435, -0.058891546, -0.06494971, -0.13396326, -0.0043475446, 0.080295786, -0.03888818, 0.20266065, -0.11657034, -0.044489022) * g_9(pixel.xy);
  result += mat4x4<f32>(-0.072022684, 0.03736022, -0.18028143, 0.084992565, 0.071270995, 0.17529677, 0.21173926, -0.04662527, -0.114107236, -0.0499027, -0.023457017, -0.14902714, -0.16848294, 0.29582912, -0.031783022, -0.21024497) * g_10(pixel.xy);
  result += mat4x4<f32>(0.12895544, 0.031505328, 0.07695562, 0.345239, -0.23573573, -0.35058022, 0.16588537, -0.37892917, -0.25666252, 0.04829329, 0.015923034, -0.06639003, -0.19299003, 0.19805184, 0.062723555, -0.16471659) * g_11(pixel.xy);
  result += mat4x4<f32>(-0.0048171217, -0.3616856, 0.10861591, -0.112293005, 0.22894251, 0.007305623, -0.15964155, -0.11533153, -0.04575267, -0.054644916, 0.102498904, -0.10909718, 0.06384877, 0.03547178, 0.036990482, 0.11729651) * g_12(pixel.xy);
  result += mat4x4<f32>(0.12198726, 0.049392004, 0.030775595, -0.0439167, 0.05127687, 0.006836142, 0.25043175, 0.41561976, 0.18109778, 0.036204416, -0.18115522, -0.11104906, -0.13888827, -0.030574424, -0.15439117, -0.023217283) * g_13(pixel.xy);
  result += mat4x4<f32>(0.037748005, 0.115257904, 0.0013052573, -0.08927453, 0.15113032, 0.0036705493, -0.036586095, 0.082375705, -0.14908089, 0.19808415, 0.10144146, -0.13911691, 0.18034998, -0.09426868, -0.28695896, -0.07120951) * g_14(pixel.xy);
  result += mat4x4<f32>(-0.15097517, -0.23736724, -0.011011207, 0.15136749, -0.1099934, -0.054979928, 0.19652224, 0.18154691, -0.104135856, 0.14703101, 0.10374482, -0.14010042, -0.08321475, -0.15499261, 0.12135948, -0.09310376) * g_15(pixel.xy);
  result += mat4x4<f32>(0.1298599, 0.09743068, -0.13728131, 0.15002461, 0.16739184, 0.1680788, -0.13828343, -0.0080054095, 0.10013758, -0.123607814, 0.045337323, -0.09940934, -0.13998291, -0.012435486, -0.2050455, 0.40441212) * g_16(pixel.xy);
  result += mat4x4<f32>(-0.4145493, -0.041918173, -0.029234748, -0.04663795, 0.068999134, -0.13911937, -0.10113266, -0.004217848, 0.049335115, 0.26279005, -0.1096574, -0.009956439, -0.18413721, 0.25698513, 0.03403163, 0.050992493) * g_17(pixel.xy);
  result += vec4f(-0.03271656, -0.03322799, 0.033719946, -0.039838646);
  textureStore(conv2d_6_tf4_tex, pixel.xy, result);
}
