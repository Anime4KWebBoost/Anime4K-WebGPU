// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x64
// Name: conv2d3tf1
// Inputs: ['conv2d_tf', 'conv2d_tf1', 'conv2d_tf2', 'conv2d_tf3', 'conv2d_tf4', 'conv2d_tf5', 'conv2d_2_tf', 'conv2d_1_tf']
// Output: conv2d_3_tf1
@group(0) @binding(0) var conv2d_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_2_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_3_tf1_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_2_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_2_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_3_tf1_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.045708127, 0.042588994, 0.20735477, -0.051771507, 0.09030856, -0.018859424, 0.070019834, -0.12951517, -0.09864889, 0.0039071254, -0.2471996, -0.4045421, -0.13531524, 0.3199352, 0.18798132, -0.05220945) * g_0(pixel.xy);
  result += mat4x4<f32>(-0.01900776, 0.14814821, -0.011676551, 0.05281246, -0.31253627, 0.07759687, 0.14841238, 0.15767692, 0.022344964, 0.03369595, 0.11200526, 0.24555564, 0.32339647, -0.08221667, 0.369651, 0.07480396) * g_1(pixel.xy);
  result += mat4x4<f32>(0.15557157, -0.2438033, 0.2904723, 0.37869072, 0.031437404, -0.32791093, -0.30852196, 0.032672517, -0.29223853, 0.14301808, -0.13372968, -0.17571832, -0.24015012, -0.062435087, -0.5865883, 0.025141397) * g_2(pixel.xy);
  result += mat4x4<f32>(0.018575411, -0.05546697, 0.0722868, -0.27057, -0.010986958, -0.1824116, 0.066343606, 0.1160373, 0.019109331, 0.1384729, -0.27752632, -0.09579411, 0.05585664, -0.16496943, -0.22690243, -0.035963364) * g_3(pixel.xy);
  result += mat4x4<f32>(-0.24451451, 0.008807087, -0.050169405, -0.02992327, -0.029381998, 0.10529693, 0.3212115, 0.047833674, 0.19737382, -0.064389326, 0.07481576, 0.04658625, 0.16120902, 0.38747096, -0.017129492, 0.036965623) * g_4(pixel.xy);
  result += mat4x4<f32>(0.024272425, 0.33644682, 0.57385606, 0.06969318, -0.18557239, 0.03263415, -0.098865986, -0.010410991, -0.27383336, 0.12643056, 0.13473713, -0.0072413897, 0.19951838, -0.26192865, -0.32222465, -0.03310627) * g_5(pixel.xy);
  result += mat4x4<f32>(0.19670399, 0.21887897, -0.14813757, 0.13861343, -0.21291518, 0.11673954, -0.09706275, 0.1927499, 0.26426026, 0.15662387, -0.0998039, 0.20456441, 0.082849964, -0.3486019, 0.042286832, 0.111299105) * g_6(pixel.xy);
  result += mat4x4<f32>(-0.17601213, 0.10744524, -0.13022378, -0.08145177, 0.17951357, -0.031804252, -0.11589841, -0.2375892, -0.17614031, -0.03204455, -0.3600058, -0.03791698, -0.18281102, -0.029681103, -0.5616249, -0.19369541) * g_7(pixel.xy);
  result += mat4x4<f32>(-0.15129189, 0.062397495, -0.26206407, -0.35008666, 0.05224934, 0.32542625, 0.1367121, -0.06498142, 0.03794349, 0.10062078, 0.24966402, 0.16598183, 0.14065337, 0.021026433, 0.4124626, -0.04739923) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.42675805, -0.08062075, 0.24400486, 0.24982014, 0.013383713, -0.030127892, 0.21306989, -0.420491, 0.27569297, 0.1844745, 0.18380351, -0.007122975, 0.02176471, 0.11719434, 0.20086622, 0.09863608) * g_9(pixel.xy);
  result += mat4x4<f32>(0.15059754, -0.060954567, -0.048324715, 0.06281138, -0.035452355, -0.105307326, -0.2821464, -0.17947711, -0.21891887, 0.31264433, 0.08331072, -0.23028368, -0.07125341, -0.25531566, -0.034880344, -0.10972097) * g_10(pixel.xy);
  result += mat4x4<f32>(-0.26111153, -0.21509336, -0.40953597, -0.22704326, -0.06265872, -0.0076560513, 0.3454225, 0.036587927, -0.25836223, -0.017044103, -0.39408937, -0.04515616, -0.013889385, 0.21049121, -0.05811886, 0.11039355) * g_11(pixel.xy);
  result += mat4x4<f32>(-0.5012236, -0.3288161, 0.76283616, -0.22785094, 0.15983264, 0.17595172, -0.19039781, -0.017620942, 0.088379174, -0.2810294, 0.14195396, -0.10567756, -0.26113996, -0.59151506, 0.064743236, 0.089407794) * g_12(pixel.xy);
  result += mat4x4<f32>(0.09782677, 0.15405431, -0.38398, 0.025821349, -0.11564193, -0.2344232, 0.048547853, -0.0013135487, -0.021783575, -0.14494252, 0.10181801, 0.15313332, 0.22384043, 0.08691754, -0.18728645, 0.058859203) * g_13(pixel.xy);
  result += mat4x4<f32>(0.30570078, 0.34977347, -0.2548985, 0.2440776, -0.12693292, 0.42302638, -0.2579403, -0.12731943, 0.02704416, -0.028827233, -0.103797026, 0.16991018, 0.18460067, -0.1430559, -0.40419313, -0.046166003) * g_14(pixel.xy);
  result += mat4x4<f32>(-0.24799332, -0.4023106, 0.20775889, -0.1347491, 0.22718747, -0.5363376, -0.0045881635, -0.08498401, 0.12643133, -0.18700986, -0.031182116, 0.10537964, -0.12853408, 0.1540884, 0.14051637, 0.14159201) * g_15(pixel.xy);
  result += vec4f(-0.0549599, -0.005265513, 0.033013426, -0.018428912);
  textureStore(conv2d_3_tf1_tex, pixel.xy, result);
}
