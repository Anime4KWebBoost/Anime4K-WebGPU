// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x3x3x3
// Name: conv2dtf1
// Inputs: ['MAIN']
// Output: conv2d_tf1
@group(0) @binding(0) var MAIN_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_tf1_tex: texture_storage_2d<rgba16float, write>;

fn go_0(pos: vec2u, x_off: i32, y_off: i32) -> vec4f {
  return textureLoad(MAIN_tex, vec2i(i32(pos.x) + x_off, i32(pos.y) + y_off), 0);
}

@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_tf1_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(0.14643213, 0.34573826, 0.022253275, 0.093370445, 0.12842871, 0.05782831, -0.29587168, 0.105391145, -0.009612344, -0.48199305, 0.10708218, -0.06391322, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, -1);
  result += mat4x4<f32>(0.0075725354, 0.10891411, -0.37711775, -0.33482045, 0.075842425, 0.0006257457, -0.11693903, 0.04950486, 0.50191665, -0.10584904, 0.101994015, -0.076776676, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, 0);
  result += mat4x4<f32>(0.23182836, -0.20573832, -0.25540918, 0.1005638, 0.29947993, -0.17835905, -0.17877467, 0.026681015, -0.16849746, 0.3294309, -0.19993272, -0.04395935, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, -1, 1);
  result += mat4x4<f32>(-0.29155123, -0.012395516, 0.3944017, 0.057145286, -0.053443987, 0.06875274, -0.044569965, -0.13700297, 0.26493445, 0.07362078, -0.04562383, -0.3087175, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, -1);
  result += mat4x4<f32>(-0.14925154, 0.014966679, 0.15118442, 0.27622026, 0.14897393, 0.47124943, 0.3271807, 0.6352069, -0.21967705, -0.04371573, 0.34770805, 0.14594477, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, 0);
  result += mat4x4<f32>(-0.55078465, -0.25394475, 0.06182166, -0.08577288, 0.12739705, -0.35062942, 0.26408008, -0.09406672, 0.28381905, -0.0075195543, -0.27176276, 0.5115337, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 0, 1);
  result += mat4x4<f32>(0.4059103, 0.09464142, -0.30987218, 0.07346718, 0.16917384, -0.39596874, 0.06289742, -0.48918217, -0.34323612, -0.25985125, 0.048182715, 0.23947199, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, -1);
  result += mat4x4<f32>(0.30781844, -0.075438604, 0.079587184, -0.341671, -0.2998036, 0.44415385, 0.29075965, -0.019560292, -0.0062685623, 0.4052073, -0.32235056, -0.5399795, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, 0);
  result += mat4x4<f32>(0.048963144, -0.20907535, 0.22934057, 0.14790095, -0.29026937, 0.40542123, -0.25430593, -0.00913707, -0.2250077, -0.17099477, 0.07582159, 0.16813178, 0.0, 0.0, 0.0, 0.0) * go_0(pixel.xy, 1, 1);
  result += vec4f(0.0648949, 0.028727708, -0.0060908287, 0.04652166);
  textureStore(conv2d_tf1_tex, pixel.xy, result);
}
