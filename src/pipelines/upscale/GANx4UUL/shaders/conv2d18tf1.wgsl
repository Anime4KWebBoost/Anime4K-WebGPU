// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x104
// Name: conv2d18tf1
// Inputs: ['conv2d_15_tf', 'conv2d_15_tf1', 'conv2d_15_tf2', 'conv2d_15_tf3', 'conv2d_15_tf4', 'conv2d_15_tf5', 'conv2d_17_tf', 'conv2d_1_tf', 'conv2d_4_tf', 'conv2d_7_tf', 'conv2d_10_tf', 'conv2d_13_tf', 'conv2d_16_tf']
// Output: conv2d_18_tf1
@group(0) @binding(0) var conv2d_15_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_15_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_15_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_15_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_15_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_15_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_17_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_4_tf_tex: texture_2d<f32>;
@group(0) @binding(9) var conv2d_7_tf_tex: texture_2d<f32>;
@group(0) @binding(10) var conv2d_10_tf_tex: texture_2d<f32>;
@group(0) @binding(11) var conv2d_13_tf_tex: texture_2d<f32>;
@group(0) @binding(12) var conv2d_16_tf_tex: texture_2d<f32>;
@group(0) @binding(13) var conv2d_18_tf1_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_17_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_17_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_16(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_17(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_18(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_19(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_20(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_21(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_22(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_23(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_24(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}

fn g_25(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_18_tf1_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.03043192, -0.11382309, 0.15258959, 0.0018671904, -0.07262079, -0.15530646, 0.088956885, 0.0068843844, 0.18098354, -0.13130096, 0.019414594, 0.021504048, 0.12169795, 0.15837122, 0.09828637, -0.47963795) * g_0(pixel.xy);
  result += mat4x4<f32>(0.14249554, -0.022084357, 0.06666183, -0.043699186, 0.014650524, 0.1188985, 0.0454781, -0.050885927, -0.20757285, 0.5144112, -0.48320413, -0.14140959, -0.13466966, 0.22992888, -0.005597194, -0.06725975) * g_1(pixel.xy);
  result += mat4x4<f32>(0.06208693, -0.112261705, -0.1686331, 0.018273335, -0.09682144, 0.068702586, 0.045484196, 0.08813325, -0.11541148, -0.008004347, 0.036507435, 0.06754519, 0.011923774, -0.03168652, 0.015487991, 0.10111531) * g_2(pixel.xy);
  result += mat4x4<f32>(-0.008023328, 0.1137135, -0.07264171, -0.120196424, -0.043222312, -0.22171052, 0.102924, -0.11386958, 0.21182953, -0.072151154, 0.04207932, 0.04245426, 0.074935004, -0.042641435, -0.098739915, -0.13941646) * g_3(pixel.xy);
  result += mat4x4<f32>(-0.010649323, 0.009664776, 0.041474525, -0.06732602, -0.18728773, -0.14357336, -0.2223795, 0.22192913, -0.0651367, -0.11535945, -0.19640021, 0.116560034, -0.025604805, 0.019647487, 0.25854686, -0.1392261) * g_4(pixel.xy);
  result += mat4x4<f32>(0.1567528, 0.10124439, -0.06609058, 0.11552276, 0.057271544, -0.065696426, 0.12358736, 0.15948243, -0.032239728, 0.011985731, 0.18371308, -0.08555982, -0.06528452, 0.11953871, 0.11031671, -0.029863868) * g_5(pixel.xy);
  result += mat4x4<f32>(0.1311102, -0.1305194, -0.18688914, 0.05448602, -0.06396861, -0.12188008, 0.121559285, 0.088412315, -0.09227041, 0.35888135, -0.21576284, -0.09567888, -0.1135963, -0.30975553, -0.019740306, 0.23325934) * g_6(pixel.xy);
  result += mat4x4<f32>(0.013327147, 0.069052495, 0.0853812, 0.13866353, 0.060591422, 0.1950111, 0.063291125, 0.06301278, 0.16034324, -0.03186552, -0.015433267, 0.21410994, 0.017428825, -0.095040835, -2.532167e-06, -0.19249855) * g_7(pixel.xy);
  result += mat4x4<f32>(-0.10042209, 0.051823184, 0.06878474, 0.039450742, -0.02151693, -0.125688, -0.080015615, 0.101158395, -0.023944302, -0.3210737, 0.19029768, -0.080297835, 0.03199306, 0.0999303, 0.22268118, 0.08898154) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.06613979, -0.10264432, 0.06768314, 0.16863261, 0.23254016, 0.049546715, -0.22763276, 0.042342335, -0.20712924, 0.092378855, -0.022331564, -0.04691188, -0.027093714, 0.098690435, -0.19893834, -0.04930573) * g_9(pixel.xy);
  result += mat4x4<f32>(-0.122772284, -0.11104652, -0.018459626, 0.115983605, 0.12493899, 0.16507398, 0.21478258, -0.15713362, 0.055545174, 0.05634718, 0.1609001, 0.046624824, 0.08476838, 0.024616027, -0.0030971076, 0.040258918) * g_10(pixel.xy);
  result += mat4x4<f32>(-0.030780645, 0.10763727, 0.2205602, -0.22281945, 0.08244692, -0.12237726, -0.26415175, -0.16127835, -0.01633197, -0.12299418, -0.012012627, -0.084443405, 0.012664263, 0.07389567, 0.01104131, 0.01305866) * g_11(pixel.xy);
  result += mat4x4<f32>(-0.28838482, 0.15918796, -0.119311474, -0.053310875, -0.07448111, -0.13836008, -0.22057253, 0.2299248, 0.009213285, 0.0044759554, -0.058288343, 0.19605552, -0.062922835, 0.081783056, -0.20190218, 0.008294941) * g_12(pixel.xy);
  result += mat4x4<f32>(0.16755526, 0.08699512, -0.18997741, -0.0014094117, -0.06733589, -0.15045306, 0.25367445, -0.17017934, 0.017913489, -0.015539376, 0.088074, -0.05331681, 0.04171007, 0.14498031, 0.06460646, -0.00037390782) * g_13(pixel.xy);
  result += mat4x4<f32>(0.04930183, 0.12424497, -0.0722411, 0.09628479, -0.043124642, 0.04497056, 0.18794456, -0.03480863, -0.09988751, 0.053120367, -0.1482433, -0.145739, 0.09281689, 0.026481925, -0.10084, -0.15488812) * g_14(pixel.xy);
  result += mat4x4<f32>(-0.004074055, 0.04565656, -0.015633525, 0.035065204, 0.11478302, 0.020277338, -0.048027817, -0.010702974, -0.083617836, 0.010090728, -0.22310819, 0.15971296, 0.06781031, -0.16845126, 0.39758167, 0.22460622) * g_15(pixel.xy);
  result += mat4x4<f32>(-0.09374665, -0.042104498, -0.033132017, 0.08122814, -0.08190475, 0.27325064, -0.08330755, -0.3144509, -0.12476947, 0.07372691, -0.005574465, 0.19122915, 0.03066927, -0.018531645, 0.19734049, 0.002256408) * g_16(pixel.xy);
  result += mat4x4<f32>(0.013257584, -0.10722849, 0.03737538, -0.12670442, 0.07042824, 0.0074753985, 0.061389714, -0.3798834, 0.012847999, 0.08157751, 0.015498391, -0.06905376, -0.27448237, 0.002926611, -0.0022811508, -0.1625364) * g_17(pixel.xy);
  result += mat4x4<f32>(0.07984379, 0.16429926, -0.08719054, 0.084147796, -0.08544172, 0.049447432, -0.3133747, -0.024927497, -0.003863256, 0.18635638, -0.059786454, -0.052997295, -0.07169392, 0.11241022, -0.19898133, -0.007140295) * g_18(pixel.xy);
  result += mat4x4<f32>(-0.108855434, -0.09246034, 0.04956623, 0.028047003, -0.039407548, 0.031223932, 0.015852997, -0.050448515, -0.04515231, -0.1598301, -0.08276407, 0.17720093, 0.2920873, -0.021305554, 0.028241735, -0.18086697) * g_19(pixel.xy);
  result += mat4x4<f32>(0.047492385, -0.1599947, -0.20104182, 0.16174223, -0.071828544, -0.12785994, -0.12311588, 0.012565137, 0.016804317, -0.03577294, -0.09488874, 0.06645059, -0.00015702203, 0.16082056, 0.03234071, -0.08351094) * g_20(pixel.xy);
  result += mat4x4<f32>(-0.032639805, -0.010861794, 0.030566638, 0.014637599, 0.120822355, 0.12297292, -0.05141305, -0.016473597, -0.048908286, 0.07600826, -0.0022954363, -0.113686286, -0.20952684, 0.09235576, -0.15726195, -0.2348195) * g_21(pixel.xy);
  result += mat4x4<f32>(0.13191621, -0.002480696, -0.14792813, 0.15621583, 0.100709975, -0.21280108, 0.045120943, -0.02165414, -0.1447397, 0.24282482, -0.1569735, 0.11792232, 0.012485835, 0.0029504807, 0.067921594, -0.25737903) * g_22(pixel.xy);
  result += mat4x4<f32>(-0.11145241, 0.27000552, -0.19557719, -0.16048421, 0.012310486, 0.07280107, -0.13137956, 0.27061656, -0.25022137, 0.07077271, 0.3398045, -0.10735134, 0.124004506, -0.03584192, -0.042106874, 0.13895391) * g_23(pixel.xy);
  result += mat4x4<f32>(0.11946389, 0.10225672, -0.057140473, 0.09698616, 0.13223277, -0.19595279, -0.15960483, -0.017795812, 0.120322645, -0.0914318, -0.2300714, 0.14489214, 0.2006262, -0.0036377236, 0.14416055, 0.247531) * g_24(pixel.xy);
  result += mat4x4<f32>(0.2734717, -0.26736638, -0.06574077, -0.041792296, -0.13349292, 0.23770794, -0.0032957396, 0.07614033, -0.11995782, 0.25061053, -0.017311087, -0.3048492, -0.07940496, 0.166133, -0.2777709, 0.0010628162) * g_25(pixel.xy);
  result += vec4f(0.015130698, -0.049747583, 0.006816977, -0.09670764);
  textureStore(conv2d_18_tf1_tex, pixel.xy, result);
}
