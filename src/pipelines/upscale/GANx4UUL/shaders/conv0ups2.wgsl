// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x128
// Name: conv0ups2
// Inputs: ['conv2d_24_tf', 'conv2d_24_tf1', 'conv2d_24_tf2', 'conv2d_24_tf3', 'conv2d_24_tf4', 'conv2d_24_tf5', 'conv2d_23_tf', 'conv2d_1_tf', 'conv2d_4_tf', 'conv2d_7_tf', 'conv2d_10_tf', 'conv2d_13_tf', 'conv2d_16_tf', 'conv2d_19_tf', 'conv2d_22_tf', 'conv2d_25_tf']
// Output: conv0ups2
@group(0) @binding(0) var conv2d_24_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_24_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_24_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_24_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_24_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_24_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_23_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_4_tf_tex: texture_2d<f32>;
@group(0) @binding(9) var conv2d_7_tf_tex: texture_2d<f32>;
@group(0) @binding(10) var conv2d_10_tf_tex: texture_2d<f32>;
@group(0) @binding(11) var conv2d_13_tf_tex: texture_2d<f32>;
@group(0) @binding(12) var conv2d_16_tf_tex: texture_2d<f32>;
@group(0) @binding(13) var conv2d_19_tf_tex: texture_2d<f32>;
@group(0) @binding(14) var conv2d_22_tf_tex: texture_2d<f32>;
@group(0) @binding(15) var conv2d_25_tf_tex: texture_2d<f32>;
@group(0) @binding(16) var conv0ups2_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_24_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_24_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_24_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_24_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_24_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_24_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_24_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_24_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_24_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_24_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_24_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_24_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_23_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_23_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_16(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_17(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_18(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_19(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_20(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_21(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_22(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_23(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_24(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}

fn g_25(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}

fn g_26(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_19_tf_tex, pos, 0), 0.0);
}

fn g_27(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_19_tf_tex, pos, 0), 0.0);
}

fn g_28(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_22_tf_tex, pos, 0), 0.0);
}

fn g_29(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_22_tf_tex, pos, 0), 0.0);
}

fn g_30(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_25_tf_tex, pos, 0), 0.0);
}

fn g_31(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_25_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv0ups2_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(0.23695897, 0.0008707441, -0.09535488, -0.107918955, -0.053035147, -0.012367683, -0.12371392, -0.09360587, 0.0070371917, 0.03025939, -0.067142904, -0.30728218, 0.0043842546, 0.06634453, 0.0034304627, -0.21123153) * g_0(pixel.xy);
  result += mat4x4<f32>(-0.052475177, 0.13422863, -0.10639677, -0.0040811207, -0.26918682, -0.10198708, 0.18605421, 0.10457146, -0.118532345, -0.08069245, -0.0146069005, 0.06658151, -0.008995181, 0.12555914, -0.0065608234, -0.26427776) * g_1(pixel.xy);
  result += mat4x4<f32>(-0.10251951, -0.08644078, 0.06929046, 0.12174946, 0.036641974, 0.060216624, 0.0073353215, -0.0030551606, 0.08728512, 0.15798406, -0.11238869, 0.042528275, -0.08227845, -0.06437879, -0.29687157, 0.035045058) * g_2(pixel.xy);
  result += mat4x4<f32>(-0.2118616, -0.28126746, -0.0044101025, 0.032711912, 0.13250305, 0.112085946, 0.11919149, 0.019229135, -0.01793138, 0.0706358, -0.2932021, 0.032647975, -0.16981576, 0.15942986, 0.19010448, 0.12454923) * g_3(pixel.xy);
  result += mat4x4<f32>(0.1315925, -0.1174062, 0.04584264, 0.10420388, -0.09118308, 0.055226937, -0.21253887, -0.17592257, -0.108380735, 0.082634084, 0.046399225, -0.10313927, 0.048476033, -0.2919353, 0.12174614, 0.22060218) * g_4(pixel.xy);
  result += mat4x4<f32>(-0.23951934, -0.2581748, -0.10439337, 0.12529592, -0.08995228, -0.020404166, 0.03317947, 0.10584384, 0.03332401, 0.009280485, 0.022306783, -0.021489294, 0.25585315, 0.141186, 0.24060152, -0.18092757) * g_5(pixel.xy);
  result += mat4x4<f32>(-0.11795161, 0.083966084, -0.03625905, -0.014661008, 0.104938276, -0.017483791, 0.34065375, 0.2541225, -0.044073306, 0.024952037, -0.14324227, 0.15807992, 0.07525055, -0.07074876, 0.09318746, 0.09101949) * g_6(pixel.xy);
  result += mat4x4<f32>(-0.032153923, -0.13424215, 0.12560824, 0.08011693, 0.12895289, 0.13427536, -0.19034676, -0.14222759, -0.020231325, 0.12888151, -0.061404597, -0.13986583, 0.00984618, -0.17769751, -0.022091439, 0.16932856) * g_7(pixel.xy);
  result += mat4x4<f32>(0.12616049, 0.2158069, -0.018368874, -0.09398254, -0.03559572, -0.084191844, -0.05094808, 0.051870555, 0.00082472386, -0.19847158, 0.23022321, 0.01599307, 0.03259911, 0.13212477, 0.12290365, -0.123374574) * g_8(pixel.xy);
  result += mat4x4<f32>(0.15702528, 0.17880908, -0.09648207, 0.11680119, -0.28308877, -0.07930958, -0.039864592, 0.1533101, -0.0639061, -0.06088989, 0.092195325, -0.18879996, 0.12157474, -0.16310088, -0.0705742, -0.13419336) * g_9(pixel.xy);
  result += mat4x4<f32>(-0.08162867, 0.17165285, -0.009754279, -0.09535414, -0.05133128, -0.05637743, 0.08150842, 0.017400654, 0.01506642, -0.16506091, 0.17735358, 0.1311172, 0.042689405, 0.22685364, -0.049387306, -0.14177462) * g_10(pixel.xy);
  result += mat4x4<f32>(0.07369564, 0.14358056, -0.0123517625, 0.027063616, 0.026721044, -0.036328644, 0.01727211, -0.004169973, -0.06480533, 0.05179935, -0.089173846, 0.014242428, -0.026303759, -0.09621599, -0.19990425, 0.20575584) * g_11(pixel.xy);
  result += mat4x4<f32>(-0.08702241, -0.11758268, 0.056043744, -0.15513507, 0.041612398, 0.06331151, 0.13647927, 0.078682, -0.0037741002, 0.08883121, -0.029957289, 0.03741986, -0.012796586, -0.005116995, -0.005864093, 0.032396786) * g_12(pixel.xy);
  result += mat4x4<f32>(0.071541294, 0.2706407, -0.1646492, 0.06099449, -0.1382612, -0.086235724, -0.083391994, 0.09620373, 0.030570114, -0.032223936, -0.028057259, 0.060482156, 0.052891836, -0.035898015, 0.12505446, 0.1045583) * g_13(pixel.xy);
  result += mat4x4<f32>(0.1836627, 0.18400975, -0.06898472, 0.15293436, 0.17102835, 0.2577789, -0.1431052, -0.010170343, 0.041604683, -0.47781685, -0.19841458, 0.20508106, -0.1168606, 0.14722034, -0.15521841, -0.112339936) * g_14(pixel.xy);
  result += mat4x4<f32>(-0.2590894, -0.1739389, 0.097751245, -0.1625812, -0.09160245, -0.26803684, -0.08304184, -0.039023403, -0.06551546, 0.7900237, 0.09004902, -0.2700218, 0.3924898, -0.22098823, 0.14447868, 0.09300293) * g_15(pixel.xy);
  result += mat4x4<f32>(0.1459711, 0.076514535, -0.27012572, -0.05584663, -0.19236547, 0.3263724, 0.123078234, -0.36640257, -0.063692175, -0.10517102, 0.079691075, 0.03320508, -0.18557668, 0.09733424, -0.038860522, -0.03146454) * g_16(pixel.xy);
  result += mat4x4<f32>(0.19119984, -0.017070724, 0.020692987, -0.06097901, -0.31390896, -0.3539774, -0.011533943, 0.10555, 0.14474893, 0.13138455, -0.07301415, 0.020723976, 0.09968003, -0.21684577, -0.137175, -0.07195843) * g_17(pixel.xy);
  result += mat4x4<f32>(-0.09807417, -0.024705391, -0.10559853, -0.036330625, 0.026295185, 0.21305019, -0.1816326, -0.089984804, -0.0364186, 0.08726375, -0.16934377, 0.11783747, -0.046499886, 0.17409094, 0.08606283, -0.1168394) * g_18(pixel.xy);
  result += mat4x4<f32>(0.061683584, 0.11610398, -0.08963952, -0.04148586, 0.07784646, -0.09693603, -0.05919322, 0.06880165, 0.09901537, -0.053908728, 0.2938966, 0.08008906, 0.027354255, -0.17792425, -0.23622033, 0.07445066) * g_19(pixel.xy);
  result += mat4x4<f32>(-0.04568423, -0.00313172, -0.024554191, -0.063268654, -0.06823803, -0.035975594, -0.10337797, 0.04157335, -0.032975934, -0.13067393, 0.20014502, 0.1481426, -0.06280778, -0.018023374, -0.09856674, 0.03219835) * g_20(pixel.xy);
  result += mat4x4<f32>(-0.0044540535, 0.03704335, 0.031475496, -0.0067796065, 0.08216529, -0.021360176, 0.22419196, 0.099668056, 0.08082446, 0.14377055, -0.14571224, -0.013343019, 0.04265009, 0.021519618, -0.048166685, 0.11342666) * g_21(pixel.xy);
  result += mat4x4<f32>(-0.1029852, 0.084569484, -0.005401726, -0.05848864, 0.112962306, 0.061313655, -0.016030408, -0.023173615, -0.039970405, 0.016853292, 0.16551012, 0.08645207, 0.0019092544, -0.0044910526, -0.058364812, -0.044804156) * g_22(pixel.xy);
  result += mat4x4<f32>(0.021829009, -0.028762918, -0.079494335, -0.08709858, -0.064889856, -0.012763213, -0.042257447, -0.097328104, -0.0061033736, -0.12146131, -0.09006795, -0.072025664, -0.11667517, -0.05674677, 0.028285908, 0.024131753) * g_23(pixel.xy);
  result += mat4x4<f32>(0.11134934, 0.0702602, -0.10646791, -0.06896185, 0.13430294, 0.083099216, 0.019172838, -0.11650263, 0.0350792, 0.030151369, -0.062105265, -0.03180261, -0.006595122, -0.008993945, -0.09649205, 0.0076333126) * g_24(pixel.xy);
  result += mat4x4<f32>(0.026408633, -0.015846157, 0.019721631, 0.10062779, -0.09073072, -0.046461828, 0.03372097, 0.06839955, -0.10907823, -0.04953608, -0.0047381003, -0.014376053, 0.018715208, 0.031804316, 0.053606145, 0.040583223) * g_25(pixel.xy);
  result += mat4x4<f32>(-0.07934853, -0.01886096, 0.036152482, 0.036394343, 0.084199846, 0.07159742, -0.09901409, 0.055700894, -0.07464093, -0.0674405, 0.007886281, 0.0023414039, -0.04075728, -0.031404145, -0.090607546, -0.02444832) * g_26(pixel.xy);
  result += mat4x4<f32>(0.09701536, 0.10618154, -0.18954206, -0.014639526, 0.030508006, -0.05885271, 0.026794225, -0.05864953, -0.047004845, 0.03347945, -0.08720657, -0.044724233, 0.07059345, 0.022511845, -0.06694698, -0.0028311196) * g_27(pixel.xy);
  result += mat4x4<f32>(-0.05472616, 0.006845548, 0.15480581, -0.03908139, 0.037825912, 0.08026918, 0.123195745, 0.022326771, -0.05692749, -0.06646566, 0.25716424, 0.026999693, 0.051669773, 0.08991333, 0.07640691, -0.046126388) * g_28(pixel.xy);
  result += mat4x4<f32>(0.18714797, 0.029189898, -0.10664823, -0.14234583, 0.014911294, 0.062173508, -0.18819608, -0.16823918, -0.09951189, 0.014782654, -0.11520717, -0.07961905, -0.063739575, -0.023488827, 0.06487948, -0.014286412) * g_29(pixel.xy);
  result += mat4x4<f32>(0.092983104, -0.044436947, -0.039822012, -0.08590545, -0.13959287, -0.042890385, 0.2564963, -0.026489962, -0.08040444, -0.06900039, 0.3113829, 0.114533454, 0.22869009, 0.054564685, 0.08793378, 0.14634606) * g_30(pixel.xy);
  result += mat4x4<f32>(-0.13077435, 0.04096513, 0.023417156, 0.10560146, 0.20399679, 0.025704898, -0.23313741, -0.0064721326, 0.16098051, 0.04165071, -0.08543627, -0.17094019, -0.3327795, -0.06824183, 0.107437834, -0.03377226) * g_31(pixel.xy);
  result += vec4f(0.05935789, -0.027414799, -0.105965964, -0.015992867);
  textureStore(conv0ups2_tex, pixel.xy, result);
}
