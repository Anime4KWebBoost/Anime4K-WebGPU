// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x104
// Name: conv2d18tf3
// Inputs: ['conv2d_15_tf', 'conv2d_15_tf1', 'conv2d_15_tf2', 'conv2d_15_tf3', 'conv2d_15_tf4', 'conv2d_15_tf5', 'conv2d_17_tf', 'conv2d_1_tf', 'conv2d_4_tf', 'conv2d_7_tf', 'conv2d_10_tf', 'conv2d_13_tf', 'conv2d_16_tf']
// Output: conv2d_18_tf3
@group(0) @binding(0) var conv2d_15_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_15_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_15_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_15_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_15_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_15_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_17_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_4_tf_tex: texture_2d<f32>;
@group(0) @binding(9) var conv2d_7_tf_tex: texture_2d<f32>;
@group(0) @binding(10) var conv2d_10_tf_tex: texture_2d<f32>;
@group(0) @binding(11) var conv2d_13_tf_tex: texture_2d<f32>;
@group(0) @binding(12) var conv2d_16_tf_tex: texture_2d<f32>;
@group(0) @binding(13) var conv2d_18_tf3_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_15_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_15_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_17_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_17_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_16(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_17(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_18(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_19(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_20(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_21(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_22(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_23(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_13_tf_tex, pos, 0), 0.0);
}

fn g_24(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}

fn g_25(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_16_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_18_tf3_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.3913639, 0.10863686, 0.036568943, -0.13616984, -0.12256661, 0.04261365, 0.08361712, 0.024963316, -0.03783324, -0.10835608, 0.1809994, -0.04891911, -0.07477347, 0.0005572628, 0.053801652, -0.17294465) * g_0(pixel.xy);
  result += mat4x4<f32>(-0.21240501, 0.048232567, -0.099440515, 0.110053435, -0.006807463, -0.10109199, -0.22602126, 0.11079698, -0.1816435, -0.3379471, -0.021888362, 0.012671836, -0.06788005, -0.019659603, 0.16906545, 0.1445488) * g_1(pixel.xy);
  result += mat4x4<f32>(0.040371295, -0.11197462, 0.00079611357, 0.23602307, -0.014053341, -0.16986679, 0.43132487, -0.12045111, 0.04180373, 0.08479918, -0.19931872, -0.17834274, -0.09733228, -0.20826107, 0.10239968, -0.13434827) * g_2(pixel.xy);
  result += mat4x4<f32>(0.020251004, 0.05971277, 0.18788993, 0.22893736, -0.08358592, -0.0119363805, -0.028455067, 0.116514385, -0.07311193, 0.22235078, -0.002239371, -0.074645266, 0.06231244, -0.13092813, 0.21043214, 0.50299895) * g_3(pixel.xy);
  result += mat4x4<f32>(0.47271565, 0.16325614, -0.15088516, -0.05982057, -0.2840374, 0.09182066, 0.06488062, -0.04938649, 0.1414061, 0.23092744, -0.21936595, -0.039149538, 0.20567922, 0.0246051, 0.098648764, 0.08579129) * g_4(pixel.xy);
  result += mat4x4<f32>(-0.39960098, 0.08434482, 0.13802652, 0.009295323, -0.20654808, -0.012721733, 0.21201523, 0.031257343, -0.11945277, 0.0916237, 0.06440069, -0.007590389, 0.23944661, -0.014860424, 0.06284065, -0.07135138) * g_5(pixel.xy);
  result += mat4x4<f32>(-0.0721573, 0.055787597, -0.02767052, 0.067403264, -0.02324729, 0.17466933, -0.042196542, -0.14136551, 0.09058359, -0.076865345, -0.015435375, 0.067640945, 0.011448769, 0.028046837, 0.04713673, 0.09483546) * g_6(pixel.xy);
  result += mat4x4<f32>(0.2546167, 0.022421336, 0.092746, -0.32795382, -0.33241096, 0.026107095, 0.06289775, -0.21036743, -0.27947587, -0.07762511, 0.2963245, -0.2832532, 0.063718654, 0.0619972, -0.061061345, -0.18399453) * g_7(pixel.xy);
  result += mat4x4<f32>(0.15909304, 0.07303675, -0.38512105, 0.029276537, 0.009517432, 0.05652419, -0.014813123, -0.095283724, -0.01813517, -0.15192051, -0.15530504, 0.2359332, -0.12923944, 0.01736479, -0.2677732, -0.3177703) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.23776342, 0.10257757, 0.11439193, -0.18072441, 0.3792303, 0.100887515, -0.05491485, 0.27023515, 0.08301177, -0.21621186, 0.06266283, 0.086530656, 0.10006346, -0.053092614, -0.15547004, 0.35645944) * g_9(pixel.xy);
  result += mat4x4<f32>(-0.098499954, 0.039016157, 0.0524485, -0.10033457, 0.103584886, -0.11934437, 0.07800956, -0.15115607, -0.041158408, 0.117455296, 0.06669016, 0.0035908893, -0.13599664, -0.030012745, -0.30871254, 0.059126258) * g_10(pixel.xy);
  result += mat4x4<f32>(0.24690406, -0.091217, -0.0504622, 0.24518415, -0.12884134, 0.1323742, 0.0038479774, 0.09842381, 0.008500783, -0.06559568, 0.05146583, 0.059599597, 0.0071321735, -0.10342487, -0.19067638, -0.06347009) * g_11(pixel.xy);
  result += mat4x4<f32>(0.016936122, -0.11043261, -0.28285822, 0.33104372, -0.06869837, -0.019808812, 0.10947519, 0.2072341, 0.12953152, 0.0066205165, -0.14361404, 0.21440293, 0.107933156, 0.25248542, 0.35479957, 0.04657107) * g_12(pixel.xy);
  result += mat4x4<f32>(0.003236877, 0.03476854, 0.14876802, 0.23711428, 0.04649911, -0.071351595, 0.031896085, -0.10594211, 0.00069857674, 0.10305368, -0.09314995, -0.32680586, 0.04570868, 0.14266723, -0.034397174, 0.20164481) * g_13(pixel.xy);
  result += mat4x4<f32>(-0.020077765, 0.048004072, 0.090358, -0.089907974, 0.20100264, 0.07662578, -0.026522158, -0.022249233, 0.004584297, 0.049182866, 0.21047321, 0.2006713, -0.04797985, -0.120389566, 0.08469395, 0.17327283) * g_14(pixel.xy);
  result += mat4x4<f32>(0.03438223, -0.009089888, 0.02548027, 0.330411, -0.20711938, -0.09044422, -0.085573465, -0.0015074041, 0.19686691, -0.27738565, 0.1842882, 0.25633478, 0.05049097, -0.04747395, 0.12880976, 0.2955938) * g_15(pixel.xy);
  result += mat4x4<f32>(0.060284127, -0.052791417, 0.17430194, 0.2734774, 0.033497952, 0.07028606, 0.13602622, 0.3844893, -0.16202293, -0.0112891495, -0.10688323, 0.030814776, 0.014681261, 0.026908493, -0.008830593, 0.01871953) * g_16(pixel.xy);
  result += mat4x4<f32>(-0.07465978, -0.175989, 0.09637529, 0.040558986, 0.2981238, 0.16432516, 0.1452289, 0.5645152, 0.1293484, 0.074065246, -0.050162554, 0.21817929, 0.0609144, -0.10554228, -0.011225634, 0.36546203) * g_17(pixel.xy);
  result += mat4x4<f32>(-0.02294336, 0.08113419, 0.1710403, 0.18030314, -0.09124345, -0.035692204, 0.12966245, 0.19688453, -0.14478156, 0.08348002, -0.1238327, 0.084183216, -0.11615483, 0.06405909, -0.25661626, 0.16786002) * g_18(pixel.xy);
  result += mat4x4<f32>(0.036198474, -0.09861699, 0.012380308, -0.0666469, 0.054049894, -0.066349685, -0.04150571, 0.052891124, -0.06718455, -0.09419681, 0.15026417, -0.004487838, -0.24373291, -0.24006884, 0.33599952, -0.16203383) * g_19(pixel.xy);
  result += mat4x4<f32>(-0.084336184, 0.0033727193, -0.036314957, 0.04644337, 0.018204624, -0.16930482, 0.08446394, -0.056894217, 0.048310533, -0.12286224, 0.047029763, 0.15852791, -0.10254443, 0.009188206, -0.18071724, -0.09453931) * g_20(pixel.xy);
  result += mat4x4<f32>(0.2575106, 0.11234036, 0.03598674, 0.17742175, -0.09323855, -0.029400691, 0.066994734, -0.11069254, -0.014193176, -0.24321175, -0.0047728037, 0.09166242, 0.052884653, -0.10701044, 0.06771872, -0.10142581) * g_21(pixel.xy);
  result += mat4x4<f32>(0.007486696, 0.1029968, 0.14142233, 0.08376258, 0.12990831, 0.17370157, 0.006009723, -0.19141605, 0.13205655, -0.09506749, 0.12058968, 0.19471712, 0.009516709, 0.096770726, 0.14443186, 0.12925056) * g_22(pixel.xy);
  result += mat4x4<f32>(0.0475854, -0.09714674, -0.31917745, -0.20503542, 0.07705934, 0.040050905, -0.014721256, -0.058823906, 0.14376932, 0.012064556, 0.13286169, -0.19186401, 0.1831485, -0.27443576, -0.006654469, 0.103141926) * g_23(pixel.xy);
  result += mat4x4<f32>(0.044394996, -0.31224364, -0.07683899, 0.053486146, -0.4123616, 0.086337365, -0.09587909, -0.03808539, -0.18129647, -0.11455093, 0.1632373, 0.25741103, 0.17294647, -0.11041576, -0.2997262, 0.15817544) * g_24(pixel.xy);
  result += mat4x4<f32>(0.3266296, 0.085812286, -0.16668066, 0.030034138, -0.08862288, 0.06389938, 0.067171246, 0.01578496, 0.031137405, -0.06823438, -0.17424862, 0.3733615, -0.28492418, -0.14051028, -0.11076368, 0.0816732) * g_25(pixel.xy);
  result += vec4f(0.015868783, -0.03145758, 0.060429975, 0.0045110146);
  textureStore(conv2d_18_tf3_tex, pixel.xy, result);
}
