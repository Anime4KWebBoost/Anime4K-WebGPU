// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x88
// Name: conv2d12tf5
// Inputs: ['conv2d_9_tf', 'conv2d_9_tf1', 'conv2d_9_tf2', 'conv2d_9_tf3', 'conv2d_9_tf4', 'conv2d_9_tf5', 'conv2d_11_tf', 'conv2d_1_tf', 'conv2d_4_tf', 'conv2d_7_tf', 'conv2d_10_tf']
// Output: conv2d_12_tf5
@group(0) @binding(0) var conv2d_9_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_9_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_9_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_9_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_9_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_9_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_11_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_4_tf_tex: texture_2d<f32>;
@group(0) @binding(9) var conv2d_7_tf_tex: texture_2d<f32>;
@group(0) @binding(10) var conv2d_10_tf_tex: texture_2d<f32>;
@group(0) @binding(11) var conv2d_12_tf5_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_9_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_9_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_9_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_9_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_9_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_9_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_9_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_9_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_9_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_9_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_9_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_9_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_11_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_11_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_16(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_17(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_18(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_19(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_7_tf_tex, pos, 0), 0.0);
}

fn g_20(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}

fn g_21(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_10_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_12_tf5_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.10146893, -0.06355417, -0.0066939867, -0.112247504, 0.15743892, 0.2661364, -0.24241701, -0.17822737, 0.11587934, -0.029756429, 0.0928847, -0.10046272, 0.14444917, 0.12547572, -0.2114753, 0.023556458) * g_0(pixel.xy);
  result += mat4x4<f32>(-0.047596626, 0.09543128, 0.23701866, -0.08471554, 0.51885915, -0.1704686, -0.04001014, -0.054579906, -0.07877735, -0.09762826, -0.146179, 0.0787038, 0.22635859, -0.31619364, 0.073862836, 0.25550374) * g_1(pixel.xy);
  result += mat4x4<f32>(0.27489266, 0.03828787, 0.1788482, -0.07628321, -0.007864044, -0.25208792, 0.37145224, -0.05436547, 0.17768216, 0.06377889, -0.029021077, 0.060763232, -0.020521913, 0.15733998, -0.10828051, 0.13728242) * g_2(pixel.xy);
  result += mat4x4<f32>(-0.21597046, 0.021131428, 0.114165306, -0.017311715, -0.12344303, 0.048893873, -0.04941004, 0.06477217, 0.1573259, -0.07459121, 0.09720801, 0.12087764, -0.1889173, 0.15563762, 0.09565472, -0.16171652) * g_3(pixel.xy);
  result += mat4x4<f32>(0.25529733, -0.030553222, 0.19627945, 0.21340033, -0.0357832, -0.14596821, -0.14145969, -0.17806748, -0.053110838, 0.20665482, 0.08333174, -0.02258432, 0.1662624, -0.14893246, 0.02501433, 0.21777983) * g_4(pixel.xy);
  result += mat4x4<f32>(-0.09700643, 0.05642473, -0.29080915, -0.07261638, 0.08252391, 0.22238337, 0.008129421, -0.18302573, -0.4751298, 0.03521261, 0.16102098, 0.22523795, 0.106175326, 0.097425245, -0.056549445, -0.058554217) * g_5(pixel.xy);
  result += mat4x4<f32>(0.2115773, 0.060346328, 0.07946409, -0.17166963, 0.0878238, 0.032195155, 0.053393956, 0.2399919, -0.03793802, -0.1799568, -0.14780137, -0.019833531, -0.060654577, 0.086268514, 0.2597936, 0.24647377) * g_6(pixel.xy);
  result += mat4x4<f32>(-0.15642072, -0.14679217, -0.100522175, 0.11584608, 0.09088178, 0.13054077, 0.04432568, -0.118127726, -0.041004654, -0.06222515, -0.09301348, 0.046497803, 0.010794347, -0.015452295, -0.052613236, 0.06925519) * g_7(pixel.xy);
  result += mat4x4<f32>(-0.19688836, -0.22052658, -0.16386695, 0.08732065, 0.111491896, 0.19614422, 0.0256523, 0.06947972, 0.03396227, -0.13961029, -0.008658522, 0.24620731, 0.13377586, -0.07979868, 0.36551273, 0.39424098) * g_8(pixel.xy);
  result += mat4x4<f32>(-0.30495998, 0.2224925, 0.027218822, 0.04317854, -0.06996757, 0.048042685, 0.06731089, -0.23949164, 0.20741203, 0.08487502, 0.2277233, -0.08041561, 0.16487156, -0.25665572, 0.07448175, -0.19871257) * g_9(pixel.xy);
  result += mat4x4<f32>(0.161757, -0.18321225, 0.006443096, -0.03942912, 0.30194885, 0.17840338, 0.089457296, -0.111660995, -0.25981718, -0.18808901, -0.008459478, 0.12424914, 0.38462314, 0.031231843, 0.055111516, -0.28973204) * g_10(pixel.xy);
  result += mat4x4<f32>(0.104183905, -0.12262509, 0.15137221, -0.23025867, 0.040099107, -0.05383875, -0.04934622, 0.1180123, 0.10198143, 0.27173567, -0.15230067, -0.099421, -0.08984255, 0.11140736, -0.045036234, 0.18769833) * g_11(pixel.xy);
  result += mat4x4<f32>(-0.07531492, -0.024759036, -0.03848608, -0.036268033, -0.03411223, 0.094500594, 0.00280404, 0.062361084, 0.03790362, 0.037668772, -0.0514829, 0.09995965, 0.283923, -0.5238069, -0.06496828, -0.0055070156) * g_12(pixel.xy);
  result += mat4x4<f32>(0.28150153, 0.14254282, -0.05911421, -0.12254332, -0.022384, -0.14173482, 0.014685391, -0.18164866, -0.22542116, -0.19810574, -0.09996172, 0.10686331, -0.08414146, -0.025034428, 0.11224387, -0.0063977554) * g_13(pixel.xy);
  result += mat4x4<f32>(-0.17710046, -0.17579278, 0.00020095073, -0.1109482, -0.020255143, 0.08271713, -0.10690405, 0.08052975, -0.062588565, 0.089410976, -0.13496846, 0.03015718, -0.22929737, 0.15872306, 0.2993516, 0.11859886) * g_14(pixel.xy);
  result += mat4x4<f32>(-0.035919335, 0.19236436, -0.25442082, 0.021053115, -0.10868948, -0.015284599, 0.33936346, -0.008365188, 0.043490786, 0.13828352, 0.20429905, 0.28155825, 0.127419, 0.057945773, -0.06780165, -0.017564125) * g_15(pixel.xy);
  result += mat4x4<f32>(-0.13482623, -0.065182775, 0.08911843, 0.2783017, 0.11952674, 0.06991993, 0.299208, -0.10903764, 0.18224056, 0.03948293, -0.21087712, -0.11832146, 0.10328364, -0.07665122, 0.18435805, -0.11931017) * g_16(pixel.xy);
  result += mat4x4<f32>(0.034891166, -0.13113704, -0.17151785, -0.27690044, 0.11699234, -0.0034974716, -0.0656246, 0.07852395, 0.15545385, 0.0013671276, -0.046343226, 0.0034052336, 0.2453219, 0.13581915, -0.13983195, 0.007911855) * g_17(pixel.xy);
  result += mat4x4<f32>(-0.011330336, 0.24790573, -0.15979306, 0.19069764, -0.40002748, 0.011870201, 0.0031194224, -0.17847504, -0.0150662465, 0.13579376, 0.0030671223, -0.11590648, 0.18090703, -0.08737256, 0.39159694, -0.22220485) * g_18(pixel.xy);
  result += mat4x4<f32>(-0.11186643, 0.21464026, -0.09462943, -0.14211422, 0.36246783, -0.097312845, 0.21176222, -0.20439352, 0.08605301, -0.0007772716, -0.047504634, 0.035329465, 0.01759311, -0.042337477, -0.14740078, 0.28027928) * g_19(pixel.xy);
  result += mat4x4<f32>(0.124633305, 0.49622107, -0.1905822, -0.032103766, -0.09118705, -0.071040735, -0.17103319, 0.21466342, -0.06857113, 0.030909235, 0.08125023, 0.2334075, 0.06821963, -0.21760683, 0.25531697, 0.15648827) * g_20(pixel.xy);
  result += mat4x4<f32>(-0.12612516, 0.16043583, -0.049337797, 0.0980794, -0.17805529, 0.0054840203, 0.171222, -0.017960507, 0.33597863, -0.27860585, -0.08922912, -0.12972547, -0.16144331, -0.039900865, -0.263512, 0.089571014) * g_21(pixel.xy);
  result += vec4f(-0.06092896, 0.0026034676, -0.0045185564, -0.045552935);
  textureStore(conv2d_12_tf5_tex, pixel.xy, result);
}
