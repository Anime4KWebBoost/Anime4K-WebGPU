// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x72
// Name: conv2d6tf3
// Inputs: ['conv2d_3_tf', 'conv2d_3_tf1', 'conv2d_3_tf2', 'conv2d_3_tf3', 'conv2d_3_tf4', 'conv2d_3_tf5', 'conv2d_5_tf', 'conv2d_1_tf', 'conv2d_4_tf']
// Output: conv2d_6_tf3
@group(0) @binding(0) var conv2d_3_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_3_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_3_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_3_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_3_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_3_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_5_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_4_tf_tex: texture_2d<f32>;
@group(0) @binding(9) var conv2d_6_tf3_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_3_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_3_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_5_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_5_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_16(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}

fn g_17(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_4_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_6_tf3_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(-0.0947985, 0.2332559, -0.024840387, -0.12695168, -0.011602261, -0.14465079, 0.08024385, -0.22528623, 0.1340458, -0.07059673, -0.3695891, 0.12334664, 0.20933141, -0.09326808, -0.2975661, 0.061081678) * g_0(pixel.xy);
  result += mat4x4<f32>(-0.11507307, 0.35812494, -0.17707227, -0.014434964, -0.15823618, 0.13134694, -0.18273474, -0.14312805, 0.12061932, 0.1496361, -0.03527865, 0.08025679, 0.21869129, 0.07058963, -0.16300866, 0.047147434) * g_1(pixel.xy);
  result += mat4x4<f32>(-0.044750545, -0.009959345, -0.099832825, 0.05492685, -0.08516999, -0.05746863, -0.15037218, -0.12047596, 0.027117934, 0.08349217, -0.064510226, 0.19004482, 0.016504517, -0.19758373, -0.029387178, 0.024999566) * g_2(pixel.xy);
  result += mat4x4<f32>(-0.19270788, -0.15476836, 0.24117126, -0.0379194, 0.3743418, -0.103265874, 0.13830991, -0.036348045, 0.0559878, -0.10660704, 0.13829483, -0.16407472, -0.11997183, 0.01790227, 0.14605843, -0.07279059) * g_3(pixel.xy);
  result += mat4x4<f32>(0.28092733, -0.16125645, -0.2748912, 0.26881403, 0.059113085, -0.054873332, -0.021884039, 0.089765035, -0.1258933, -0.039875403, 0.08049244, 0.14648421, 0.15913528, 0.11868216, 0.26197466, 0.20166811) * g_4(pixel.xy);
  result += mat4x4<f32>(0.15582782, 0.404659, 0.0015323871, 0.042285357, 0.03543343, 0.28058854, 0.09269268, -0.1961485, -0.050092928, 0.23627135, 0.18665306, -0.2269804, 0.019387577, -0.27056855, -0.032678973, -0.1313305) * g_5(pixel.xy);
  result += mat4x4<f32>(0.041672353, -0.11869399, -0.10265229, -0.08001758, -0.083409294, 0.27257153, 0.029960267, 0.009504049, -0.25293326, -0.028966684, -0.26568112, 0.07192321, -0.45549354, 0.00988489, 0.2838676, -0.15658323) * g_6(pixel.xy);
  result += mat4x4<f32>(-0.0969234, -0.44853622, 0.1312735, 0.36762837, 0.29700848, -0.055008043, -0.107015595, 0.26205721, -0.025227455, -0.26865402, 0.037786532, 0.14742893, -0.21797921, -0.09365055, 0.1648379, 0.11523759) * g_7(pixel.xy);
  result += mat4x4<f32>(-0.08800255, -0.22999708, 0.15386356, -0.15094003, -0.1857585, 0.11688115, 0.23875357, 0.19499353, 0.0412525, -0.024864528, 0.22446378, -0.2659101, 0.08516812, 0.45923305, 0.10732433, -0.09354394) * g_8(pixel.xy);
  result += mat4x4<f32>(0.20697595, -0.20005412, -0.035901353, -0.13551861, -0.025914649, -0.28284183, -0.11218443, -0.10993567, -0.07797817, 0.1730173, -0.09316322, 0.03815029, 0.10571366, -0.038362827, -0.1914281, -0.09927578) * g_9(pixel.xy);
  result += mat4x4<f32>(-0.14568554, -0.11636077, 0.19675533, -0.041014023, -0.25883666, -0.12882718, 0.31183702, -0.0011882539, 0.14754722, 0.024993556, 0.0168953, 0.067850605, -0.19463025, 0.034864627, 0.041240662, -0.03222681) * g_10(pixel.xy);
  result += mat4x4<f32>(-0.1426807, 0.15183157, 0.15200667, -0.14715526, -0.17436193, -0.2790302, 0.092628404, 0.17627066, 0.08689362, -0.12282142, -0.22965756, 0.0715357, -0.06378668, -0.038817883, 0.006680897, -0.16652597) * g_11(pixel.xy);
  result += mat4x4<f32>(-0.112664886, 0.16732118, -0.082690485, -0.36430246, 0.1043046, -0.20746218, -0.26694834, 0.118057035, -0.005464113, 0.16917925, -0.007820917, 0.0140616475, -0.074033186, -0.21199086, 0.03959589, -0.024746282) * g_12(pixel.xy);
  result += mat4x4<f32>(0.11506031, 0.23876894, -0.08834736, 0.21521813, -0.074349664, 0.13053001, -0.11863015, 0.0024896788, 0.031616643, -0.24681048, 0.1621546, 0.038487136, -0.001199782, 0.14914162, 0.013806334, 0.01951855) * g_13(pixel.xy);
  result += mat4x4<f32>(-0.008453833, 0.26529935, -0.11500479, -0.44277295, 0.043010518, -0.15156142, -0.17212024, -0.13284442, 0.14113069, 0.076676466, -0.120249875, -0.10003942, 0.36022985, 0.35055906, -0.021890117, 0.13908324) * g_14(pixel.xy);
  result += mat4x4<f32>(0.074958876, 0.18787664, 0.11494537, 0.3821255, 0.07704636, 0.175412, 0.024792312, 0.111158736, -0.060063202, -0.08937286, 0.21284722, 0.09321436, 0.050422233, -0.10608569, 0.13923599, 0.11934222) * g_15(pixel.xy);
  result += mat4x4<f32>(-0.07895042, -0.019823313, -0.042007383, -0.044339843, 0.050560612, -0.13500823, -0.1591223, 0.2070823, 0.3217226, 0.0050152694, -0.08454321, 0.15309334, 0.1487958, 0.23113962, -0.037693724, -0.011872479) * g_16(pixel.xy);
  result += mat4x4<f32>(-0.08302536, 0.12064725, 0.015102583, 0.019917564, -0.15781376, -0.03290087, -0.365194, -0.010774219, -0.15353476, 0.0021079888, 0.14096913, 0.015317738, -0.21820316, -0.18941125, -0.07205566, 0.16917731) * g_17(pixel.xy);
  result += vec4f(-0.05091759, 0.03221878, 0.05122183, -0.009628421);
  textureStore(conv2d_6_tf3_tex, pixel.xy, result);
}
