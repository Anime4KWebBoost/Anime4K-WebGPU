// Layer: Anime4K-v4.1-Upscale-GAN-x4-(UUL)-Conv-4x1x1x64
// Name: conv2d3tf5
// Inputs: ['conv2d_tf', 'conv2d_tf1', 'conv2d_tf2', 'conv2d_tf3', 'conv2d_tf4', 'conv2d_tf5', 'conv2d_2_tf', 'conv2d_1_tf']
// Output: conv2d_3_tf5
@group(0) @binding(0) var conv2d_tf_tex: texture_2d<f32>;
@group(0) @binding(1) var conv2d_tf1_tex: texture_2d<f32>;
@group(0) @binding(2) var conv2d_tf2_tex: texture_2d<f32>;
@group(0) @binding(3) var conv2d_tf3_tex: texture_2d<f32>;
@group(0) @binding(4) var conv2d_tf4_tex: texture_2d<f32>;
@group(0) @binding(5) var conv2d_tf5_tex: texture_2d<f32>;
@group(0) @binding(6) var conv2d_2_tf_tex: texture_2d<f32>;
@group(0) @binding(7) var conv2d_1_tf_tex: texture_2d<f32>;
@group(0) @binding(8) var conv2d_3_tf5_tex: texture_storage_2d<rgba16float, write>;
fn max4(vector: vec4f, value: f32) -> vec4f {
  return max(vector, vec4f(value));
}

fn g_0(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf_tex, pos, 0), 0.0);
}

fn g_1(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf1_tex, pos, 0), 0.0);
}

fn g_2(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf2_tex, pos, 0), 0.0);
}

fn g_3(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf3_tex, pos, 0), 0.0);
}

fn g_4(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf4_tex, pos, 0), 0.0);
}

fn g_5(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_tf5_tex, pos, 0), 0.0);
}

fn g_6(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf_tex, pos, 0), 0.0);
}

fn g_7(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf1_tex, pos, 0), 0.0);
}

fn g_8(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf2_tex, pos, 0), 0.0);
}

fn g_9(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf3_tex, pos, 0), 0.0);
}

fn g_10(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf4_tex, pos, 0), 0.0);
}

fn g_11(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_tf5_tex, pos, 0), 0.0);
}

fn g_12(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_2_tf_tex, pos, 0), 0.0);
}

fn g_13(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_2_tf_tex, pos, 0), 0.0);
}

fn g_14(pos: vec2u) -> vec4f {
  return max4(textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}

fn g_15(pos: vec2u) -> vec4f {
  return max4(-textureLoad(conv2d_1_tf_tex, pos, 0), 0.0);
}


@compute
@workgroup_size(8, 8)
fn computeMain(@builtin(global_invocation_id) pixel: vec3u) {
  // OOB check
  let dim_out: vec2u = textureDimensions(conv2d_3_tf5_tex);
  if (pixel.x >= dim_out.x || pixel.y >= dim_out.y) {
    return;
  }
  
  var result: vec4f = vec4f(0.0);
  result += mat4x4<f32>(0.056609534, -0.072912574, -0.08224053, -0.27446464, 0.06299807, 0.17494963, 0.02013175, -0.3135523, -0.20414291, -0.002206245, -0.19089301, -0.035810925, -0.15909109, 0.23343667, 0.043236874, -0.05090461) * g_0(pixel.xy);
  result += mat4x4<f32>(0.071143255, 0.2344495, -0.08178796, 0.19529581, -0.15652603, -0.08692345, 0.15054622, -0.24628481, 0.13293579, 0.099183284, -0.14319651, -0.21706218, 0.18046993, -0.046167973, -0.2622163, 0.14739317) * g_1(pixel.xy);
  result += mat4x4<f32>(0.028098702, 0.16937847, -0.31955224, -0.13086726, 0.035734467, -0.12136727, -0.05286461, 0.13372248, -0.012013819, -0.013996318, 0.09585827, -0.0980455, -0.18155457, 0.058416523, 0.05363468, 0.2844176) * g_2(pixel.xy);
  result += mat4x4<f32>(-0.040509474, -0.040644035, -0.14309056, 0.109604076, -0.089917555, -0.05080418, -0.06218365, 0.08950535, -0.13581185, 0.30530998, 0.35584477, 0.25160718, 0.11817752, -0.15588048, -0.18560979, -0.021720303) * g_3(pixel.xy);
  result += mat4x4<f32>(0.19979374, -0.24442586, 0.06666042, -0.12413865, 0.0723267, -0.08070183, -0.050162878, 0.053533528, -0.23414859, 0.14660425, 0.0535612, 0.1824936, -0.06853291, 0.028537972, 0.08894496, -0.3005856) * g_4(pixel.xy);
  result += mat4x4<f32>(0.053230897, -0.14692295, -0.010351058, -0.03423785, -0.34997204, 0.17045908, -0.20471387, -0.05596227, 0.37312284, -0.166506, 0.027370568, -0.19885068, 0.22860329, -0.34381005, 0.13689034, 0.100899346) * g_5(pixel.xy);
  result += mat4x4<f32>(0.100836754, 0.172524, 0.14670734, 0.19648418, -0.22542813, -0.14784352, 0.16542062, 0.31592578, 0.09034929, 0.029557507, 0.016295122, 0.06270892, 0.119690046, -0.039440215, 0.1076754, 0.055114914) * g_6(pixel.xy);
  result += mat4x4<f32>(0.22560626, -0.19063824, 0.2289656, -0.12238879, 0.062091034, -0.17536564, -0.1097042, 0.18370546, 0.054991204, -0.16073585, 0.24551688, 0.29919684, -0.33145493, 0.06585065, 0.15001276, -0.12141834) * g_7(pixel.xy);
  result += mat4x4<f32>(0.0072760796, -0.33641306, 0.27806035, -0.0012592864, -0.031354345, 0.14530547, 0.026439384, -0.08998722, 0.16388611, 0.008192195, -0.031645425, 0.23180926, -0.106261194, -0.21588798, -0.01746241, -0.35864678) * g_8(pixel.xy);
  result += mat4x4<f32>(0.11795532, 0.24395278, 0.06954797, 0.05902286, 0.002836295, 0.13273323, 0.17765377, -0.09331522, 0.13427891, -0.12334423, -0.2206351, -0.11630769, -0.19114569, 0.1635797, 0.17295037, 0.012300116) * g_9(pixel.xy);
  result += mat4x4<f32>(-0.16389936, 0.104410745, -0.046638153, -0.08462526, -0.05850656, 0.07821304, 0.12509613, -0.08973294, 0.2538881, 0.013903494, -0.18470205, 0.01099874, -0.10122345, -0.2053046, -0.15341048, 0.19987997) * g_10(pixel.xy);
  result += mat4x4<f32>(-0.10358656, 0.29928508, 0.07767035, -0.065468244, 0.33847088, -0.010010049, -0.18632844, -0.022442589, -0.20640668, 0.12077326, 0.17598887, -0.036393534, 0.057061106, 0.32527304, -0.17863084, -0.08244848) * g_11(pixel.xy);
  result += mat4x4<f32>(-0.019896565, 0.18471427, -0.23525807, -0.090934336, -0.22715406, 0.025219338, 0.08826347, -0.11013379, 0.053721644, 0.020721693, -0.14894027, 0.017000167, -0.077067815, 0.005117918, -0.60429895, -0.46772584) * g_12(pixel.xy);
  result += mat4x4<f32>(0.27064618, 0.124304846, 0.17178236, 0.0067777717, 0.20274666, -0.0066843866, -0.10537028, 0.07832309, -0.100172564, -0.084412105, -0.029130317, 0.04364024, 0.08182053, -0.100823514, -0.0935743, -0.029079227) * g_13(pixel.xy);
  result += mat4x4<f32>(-0.26241225, -0.05721237, 0.101424344, -0.34958288, 0.31858712, -0.076861545, -0.46517807, 0.30126542, 0.086722255, -0.13480917, 0.11960615, 0.4943688, -0.32738853, -0.19455571, 0.026463214, 0.07926301) * g_14(pixel.xy);
  result += mat4x4<f32>(0.16170315, 0.13929573, 0.059762456, 0.23802169, -0.3277194, 0.24683446, 0.112627044, -0.1602516, 0.08662639, 0.1476813, 0.1104441, -0.3317887, 0.16108729, 0.11565731, -0.18657148, 0.01665966) * g_15(pixel.xy);
  result += vec4f(-0.11646883, -0.009549349, 0.02843715, 0.004513963);
  textureStore(conv2d_3_tf5_tex, pixel.xy, result);
}
